[
  {
    "verb": "get",
    "requestPath": "/",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /'</span>)\n</code></pre>"
      }
    ],
    "summary": "GitHub API Root",
    "description": "Get Hypermedia links to resources accessible in GitHub's REST API",
    "tags": [
      "meta"
    ],
    "operationId": "meta/root",
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "meta"
    },
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#root-endpoint"
    },
    "slug": "github-api-root",
    "category": "meta",
    "categoryLabel": "Meta",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get Hypermedia links to resources accessible in GitHub's REST API</p>"
  },
  {
    "verb": "get",
    "requestPath": "/admin/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/hooks', {\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/hooks'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List global webhooks",
    "description": "",
    "operationId": "enterprise-admin/list-global-webhooks",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-global-webhooks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "list-global-webhooks",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/admin/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks \\\n  -d '{\"name\":\"name\",\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks \\\n  -d '{\"name\":\"name\",\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/hooks', {\n  name: 'name',\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl'\n  },\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/hooks'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">config</span>: {\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'url'</span>,\n    <span class=\"hljs-attr\">content_type</span>: <span class=\"hljs-string\">'content_type'</span>,\n    <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">'secret'</span>,\n    <span class=\"hljs-attr\">insecure_ssl</span>: <span class=\"hljs-string\">'insecure_ssl'</span>\n  },\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a global webhook",
    "description": "",
    "operationId": "enterprise-admin/create-global-webhook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-global-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. Must be passed as \"web\".</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Must be passed as \"web\".",
                "childParamsGroups": []
              },
              "config": {
                "type": "object",
                "description": "<p><strong>Required</strong>. Key/value pairs to provide settings for this webhook.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "type": "string",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "name": "insecure_ssl",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "url"
                ],
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook.",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "name": "insecure_ssl",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> that trigger this webhook. A global webhook can be triggered by <code>user</code> and <code>organization</code> events. Default: <code>user</code> and <code>organization</code>.</p>",
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name",
              "config"
            ]
          },
          "example": {
            "name": "web",
            "events": [
              "organization",
              "user"
            ],
            "config": {
              "url": "https://example.com/webhook",
              "content_type": "json",
              "secret": "secret"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "create-a-global-webhook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Global\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"organization\"</span>,\n    <span class=\"hljs-string\">\"user\"</span>\n  ],\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"json\"</span>,\n    <span class=\"hljs-attr\">\"insecure_ssl\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n    <span class=\"hljs-attr\">\"secret\"</span>: <span class=\"hljs-string\">\"********\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-12-07T00:14:59Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-12-07T00:14:59Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/admin/hooks/1\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/admin/hooks/1/pings\"</span>\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. Must be passed as \"web\".</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Must be passed as \"web\".",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p><strong>Required</strong>. Key/value pairs to provide settings for this webhook.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "type": "string",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "name": "insecure_ssl",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "childParamsGroups": []
          }
        },
        "required": [
          "url"
        ],
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook.",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "name": "insecure_ssl",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> that trigger this webhook. A global webhook can be triggered by <code>user</code> and <code>organization</code> events. Default: <code>user</code> and <code>organization</code>.</p>",
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/admin/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/hooks/{hook_id}', {\n  hook_id: 42,\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a global webhook",
    "description": "",
    "operationId": "enterprise-admin/get-global-webhook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-global-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "get-a-global-webhook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/admin/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/hooks/{hook_id}', {\n  hook_id: 42,\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl'\n  },\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">config</span>: {\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'url'</span>,\n    <span class=\"hljs-attr\">content_type</span>: <span class=\"hljs-string\">'content_type'</span>,\n    <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">'secret'</span>,\n    <span class=\"hljs-attr\">insecure_ssl</span>: <span class=\"hljs-string\">'insecure_ssl'</span>\n  },\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a global webhook",
    "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
    "operationId": "enterprise-admin/update-global-webhook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-global-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "<p>Key/value pairs to provide settings for this webhook.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "type": "string",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "name": "insecure_ssl",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "url"
                ],
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook.",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "name": "insecure_ssl",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> that trigger this webhook. A global webhook can be triggered by <code>user</code> and <code>organization</code> events. Default: <code>user</code> and <code>organization</code>.</p>",
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "events": [
              "organization"
            ],
            "config": {
              "url": "https://example.com/webhook"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "update-a-global-webhook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Parameters that are not provided will be overwritten with the default value or removed if no default exists.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Global\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"organization\"</span>\n  ],\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"form\"</span>,\n    <span class=\"hljs-attr\">\"insecure_ssl\"</span>: <span class=\"hljs-string\">\"0\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-12-07T00:14:59Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-12-07T00:14:59Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/admin/hooks/1\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/admin/hooks/1/pings\"</span>\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "object",
        "description": "<p>Key/value pairs to provide settings for this webhook.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "type": "string",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "name": "insecure_ssl",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "childParamsGroups": []
          }
        },
        "required": [
          "url"
        ],
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook.",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value in the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\"><code>X-Hub-Signature</code></a> header.</p>",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers) header.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "name": "insecure_ssl",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> that trigger this webhook. A global webhook can be triggered by <code>user</code> and <code>organization</code> events. Default: <code>user</code> and <code>organization</code>.</p>",
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/admin/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/hooks/{hook_id}', {\n  hook_id: 42,\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a global webhook",
    "description": "",
    "operationId": "enterprise-admin/delete-global-webhook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-global-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "delete-a-global-webhook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/admin/hooks/{hook_id}/pings",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.superpro-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42/pings",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.superpro-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/hooks/42/pings</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/hooks/{hook_id}/pings', {\n  hook_id: 42,\n  mediaType: {\n    previews: [\n      'superpro'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/hooks/{hook_id}/pings'</span>, {\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'superpro'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Ping a global webhook",
    "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the webhook.",
    "operationId": "enterprise-admin/ping-global-webhook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#ping-a-global-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "superpro",
          "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
          "html": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#global-webhooks\">Global Webhooks API</a> is currently available for developers to preview. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.superpro-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "global-webhooks"
    },
    "slug": "ping-a-global-webhook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "global-webhooks",
    "subcategoryLabel": "Global webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This will trigger a <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event\">ping event</a> to be sent to the webhook.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/admin/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "accessed"
          ],
          "default": "created"
        },
        "descriptionHTML": ""
      },
      {
        "name": "since",
        "description": "Only show public keys accessed after the given time.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Only show public keys accessed after the given time.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/keys')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/keys'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public keys",
    "description": "",
    "operationId": "enterprise-admin/list-public-keys",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-public-keys"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "list-public-keys",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "delete",
    "requestPath": "/admin/keys/{key_ids}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "key_ids",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/keys/KEY_IDS",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/keys/KEY_IDS</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/keys/{key_ids}', {\n  key_ids: 'key_ids'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/keys/{key_ids}'</span>, {\n  <span class=\"hljs-attr\">key_ids</span>: <span class=\"hljs-string\">'key_ids'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a public key",
    "description": "",
    "operationId": "enterprise-admin/delete-public-key",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-public-key"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "delete-a-public-key",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/admin/ldap/teams/{team_id}/mapping",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/teams/42/mapping \\\n  -d '{\"ldap_dn\":\"ldap_dn\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/teams/42/mapping \\\n  -d '{\"ldap_dn\":\"ldap_dn\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/ldap/teams/{team_id}/mapping', {\n  team_id: 42,\n  ldap_dn: 'ldap_dn'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/ldap/teams/{team_id}/mapping'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">ldap_dn</span>: <span class=\"hljs-string\">'ldap_dn'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update LDAP mapping for a team",
    "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#create-a-team) endpoint to create a team with LDAP mapping.\n\nIf you pass the `hellcat-preview` media type, you can also update the LDAP mapping of a child team.",
    "operationId": "enterprise-admin/update-ldap-mapping-for-team",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "ldap_dn": {
                "type": "string",
                "description": "<p>The <a href=\"https://www.ldap.com/ldap-dns-and-rdns\">distinguished name</a> (DN) of the LDAP entry to map to a team.</p>",
                "name": "ldap_dn",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "ldap"
    },
    "slug": "update-ldap-mapping-for-a-team",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "ldap",
    "subcategoryLabel": "Ldap",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Updates the <a href=\"https://www.ldap.com/ldap-dns-and-rdns\">distinguished name</a> (DN) of the LDAP entry to map to a team. <a href=\"https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync\">LDAP synchronization</a> must be enabled to map LDAP entries to a team. Use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#create-a-team\">Create a team</a> endpoint to create a team with LDAP mapping.</p>\n<p>If you pass the <code>hellcat-preview</code> media type, you can also update the LDAP mapping of a child team.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The <a href=\"https://www.ldap.com/ldap-dns-and-rdns\">distinguished name</a> (DN) of the LDAP entry to map to a team.</p>",
        "name": "ldap_dn",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"ldap_dn\"</span>: <span class=\"hljs-string\">\"cn=Enterprise Ops,ou=teams,dc=github,dc=com\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n  <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n  <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n  <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n  <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n  <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/admin/ldap/teams/{team_id}/sync",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/teams/42/sync",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/teams/42/sync</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/ldap/teams/{team_id}/sync', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/ldap/teams/{team_id}/sync'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Sync LDAP mapping for a team",
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "operationId": "enterprise-admin/sync-ldap-mapping-for-team",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "ldap"
    },
    "slug": "sync-ldap-mapping-for-a-team",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "ldap",
    "subcategoryLabel": "Ldap",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that this API call does not automatically initiate an LDAP sync. Rather, if a <code>201</code> is returned, the sync job is queued successfully, and is performed when the instance is ready.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/admin/ldap/users/{username}/mapping",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/users/USERNAME/mapping \\\n  -d '{\"ldap_dn\":\"ldap_dn\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/users/USERNAME/mapping \\\n  -d '{\"ldap_dn\":\"ldap_dn\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/ldap/users/{username}/mapping', {\n  username: 'username',\n  ldap_dn: 'ldap_dn'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/ldap/users/{username}/mapping'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">ldap_dn</span>: <span class=\"hljs-string\">'ldap_dn'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update LDAP mapping for a user",
    "description": "",
    "operationId": "enterprise-admin/update-ldap-mapping-for-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "ldap_dn": {
                "type": "string",
                "description": "<p>The <a href=\"https://www.ldap.com/ldap-dns-and-rdns\">distinguished name</a> (DN) of the LDAP entry to map to a team.</p>",
                "name": "ldap_dn",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "ldap"
    },
    "slug": "update-ldap-mapping-for-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "ldap",
    "subcategoryLabel": "Ldap",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The <a href=\"https://www.ldap.com/ldap-dns-and-rdns\">distinguished name</a> (DN) of the LDAP entry to map to a team.</p>",
        "name": "ldap_dn",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"ldap_dn\"</span>: <span class=\"hljs-string\">\"uid=asdf,ou=users,dc=github,dc=com\"</span>,\n  <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n  <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n  <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n  <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n  <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n  <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n  <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n  <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n  <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n  <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"monalisa octocat\"</span>,\n  <span class=\"hljs-attr\">\"company\"</span>: <span class=\"hljs-string\">\"GitHub\"</span>,\n  <span class=\"hljs-attr\">\"blog\"</span>: <span class=\"hljs-string\">\"https://github.com/blog\"</span>,\n  <span class=\"hljs-attr\">\"location\"</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n  <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n  <span class=\"hljs-attr\">\"hireable\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"bio\"</span>: <span class=\"hljs-string\">\"There once was...\"</span>,\n  <span class=\"hljs-attr\">\"twitter_username\"</span>: <span class=\"hljs-string\">\"monatheoctocat\"</span>,\n  <span class=\"hljs-attr\">\"public_repos\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"public_gists\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"followers\"</span>: <span class=\"hljs-number\">20</span>,\n  <span class=\"hljs-attr\">\"following\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n  <span class=\"hljs-attr\">\"private_gists\"</span>: <span class=\"hljs-number\">81</span>,\n  <span class=\"hljs-attr\">\"total_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"owned_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"disk_usage\"</span>: <span class=\"hljs-number\">10000</span>,\n  <span class=\"hljs-attr\">\"collaborators\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"two_factor_authentication\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"plan\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Medium\"</span>,\n    <span class=\"hljs-attr\">\"space\"</span>: <span class=\"hljs-number\">400</span>,\n    <span class=\"hljs-attr\">\"private_repos\"</span>: <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-attr\">\"collaborators\"</span>: <span class=\"hljs-number\">0</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/admin/ldap/users/{username}/sync",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/users/USERNAME/sync",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/ldap/users/USERNAME/sync</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/ldap/users/{username}/sync', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/ldap/users/{username}/sync'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Sync LDAP mapping for a user",
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "operationId": "enterprise-admin/sync-ldap-mapping-for-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "ldap"
    },
    "slug": "sync-ldap-mapping-for-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "ldap",
    "subcategoryLabel": "Ldap",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that this API call does not automatically initiate an LDAP sync. Rather, if a <code>201</code> is returned, the sync job is queued successfully, and is performed when the instance is ready.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/admin/organizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/organizations \\\n  -d '{\"login\":\"login\",\"admin\":\"admin\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/organizations \\\n  -d '{\"login\":\"login\",\"admin\":\"admin\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/organizations', {\n  login: 'login',\n  admin: 'admin'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/organizations'</span>, {\n  <span class=\"hljs-attr\">login</span>: <span class=\"hljs-string\">'login'</span>,\n  <span class=\"hljs-attr\">admin</span>: <span class=\"hljs-string\">'admin'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create an organization",
    "description": "",
    "operationId": "enterprise-admin/create-org",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-an-organization"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The organization's username.</p>",
                "name": "login",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The organization's username.",
                "childParamsGroups": []
              },
              "admin": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The login of the user who will manage this organization.</p>",
                "name": "admin",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The login of the user who will manage this organization.",
                "childParamsGroups": []
              },
              "profile_name": {
                "type": "string",
                "description": "<p>The organization's display name.</p>",
                "name": "profile_name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The organization's display name.",
                "childParamsGroups": []
              }
            },
            "required": [
              "login",
              "admin"
            ]
          },
          "example": {
            "login": "github",
            "profile_name": "GitHub, Inc.",
            "admin": "monalisaoctocat"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "orgs"
    },
    "slug": "create-an-organization",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "orgs",
    "subcategoryLabel": "Orgs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The organization's username.</p>",
        "name": "login",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The organization's username.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The login of the user who will manage this organization.</p>",
        "name": "admin",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The login of the user who will manage this organization.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The organization's display name.</p>",
        "name": "profile_name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The organization's display name.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n  <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n  <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "patch",
    "requestPath": "/admin/organizations/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/organizations/ORG \\\n  -d '{\"login\":\"login\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/organizations/ORG \\\n  -d '{\"login\":\"login\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/organizations/{org}', {\n  org: 'org',\n  login: 'login'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/organizations/{org}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">login</span>: <span class=\"hljs-string\">'login'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update an organization name",
    "description": "",
    "operationId": "enterprise-admin/update-org-name",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-an-organization-name"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The organization's new name.</p>",
                "name": "login",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The organization's new name.",
                "childParamsGroups": []
              }
            },
            "required": [
              "login"
            ]
          },
          "example": {
            "login": "the-new-octocats"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "orgs"
    },
    "slug": "update-an-organization-name",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "orgs",
    "subcategoryLabel": "Orgs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The organization's new name.</p>",
        "name": "login",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The organization's new name.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Job queued to rename organization. It may take a few minutes to complete.\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://&#x3C;hostname>/api/v3/organizations/1\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/admin/pre-receive-environments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "name"
          ],
          "default": "created"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/pre-receive-environments', {\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/pre-receive-environments'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List pre-receive environments",
    "description": "",
    "operationId": "enterprise-admin/list-pre-receive-environments",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-environments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "list-pre-receive-environments",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/admin/pre-receive-environments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments \\\n  -d '{\"name\":\"name\",\"image_url\":\"image_url\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments \\\n  -d '{\"name\":\"name\",\"image_url\":\"image_url\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/pre-receive-environments', {\n  name: 'name',\n  image_url: 'image_url',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/pre-receive-environments'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">image_url</span>: <span class=\"hljs-string\">'image_url'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a pre-receive environment",
    "description": "",
    "operationId": "enterprise-admin/create-pre-receive-environment",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-pre-receive-environment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The new pre-receive environment's name.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new pre-receive environment's name.",
                "childParamsGroups": []
              },
              "image_url": {
                "type": "string",
                "description": "<p><strong>Required</strong>. URL from which to download a tarball of this environment.</p>",
                "name": "image_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "URL from which to download a tarball of this environment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name",
              "image_url"
            ]
          },
          "example": {
            "name": "DevTools Hook Env",
            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "create-a-pre-receive-environment",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The new pre-receive environment's name.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new pre-receive environment's name.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. URL from which to download a tarball of this environment.</p>",
        "name": "image_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "URL from which to download a tarball of this environment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"DevTools Hook Env\"</span>,\n  <span class=\"hljs-attr\">\"image_url\"</span>: <span class=\"hljs-string\">\"https://my_file_server/path/to/devtools_env.tar.gz\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/admin/pre-receive-environments/2\"</span>,\n  <span class=\"hljs-attr\">\"default_environment\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T11:35:45-05:00\"</span>,\n  <span class=\"hljs-attr\">\"hooks_count\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"download\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\"</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n    <span class=\"hljs-attr\">\"downloaded_at\"</span>: <span class=\"hljs-string\">\"2016-05-26T07:42:53-05:00\"</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/pre-receive-environments/{pre_receive_environment_id}', {\n  pre_receive_environment_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/pre-receive-environments/{pre_receive_environment_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_environment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a pre-receive environment",
    "description": "",
    "operationId": "enterprise-admin/get-pre-receive-environment",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-environment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "get-a-pre-receive-environment",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/pre-receive-environments/{pre_receive_environment_id}', {\n  pre_receive_environment_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/pre-receive-environments/{pre_receive_environment_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_environment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a pre-receive environment",
    "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.",
    "operationId": "enterprise-admin/update-pre-receive-environment",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-pre-receive-environment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>This pre-receive environment's new name.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "This pre-receive environment's new name.",
                "childParamsGroups": []
              },
              "image_url": {
                "type": "string",
                "description": "<p>URL from which to download a tarball of this environment.</p>",
                "name": "image_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "URL from which to download a tarball of this environment.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "update-a-pre-receive-environment",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>You cannot modify the default environment. If you attempt to modify the default environment, you will receive a <code>422 Unprocessable Entity</code> response.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>This pre-receive environment's new name.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "This pre-receive environment's new name.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>URL from which to download a tarball of this environment.</p>",
        "name": "image_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "URL from which to download a tarball of this environment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"DevTools Hook Env\"</span>,\n  <span class=\"hljs-attr\">\"image_url\"</span>: <span class=\"hljs-string\">\"https://my_file_server/path/to/devtools_env.tar.gz\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/admin/pre-receive-environments/2\"</span>,\n  <span class=\"hljs-attr\">\"default_environment\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T11:35:45-05:00\"</span>,\n  <span class=\"hljs-attr\">\"hooks_count\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"download\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\"</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n    <span class=\"hljs-attr\">\"downloaded_at\"</span>: <span class=\"hljs-string\">\"2016-05-26T07:42:53-05:00\"</span>,\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Client Errors",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Validation Failed\"</span>,\n  <span class=\"hljs-attr\">\"errors\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"resource\"</span>: <span class=\"hljs-string\">\"PreReceiveEnvironment\"</span>,\n      <span class=\"hljs-attr\">\"code\"</span>: <span class=\"hljs-string\">\"custom\"</span>,\n      <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Cannot modify or delete the default environment\"</span>\n    }\n  ]\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/pre-receive-environments/{pre_receive_environment_id}', {\n  pre_receive_environment_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/pre-receive-environments/{pre_receive_environment_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_environment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a pre-receive environment",
    "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
    "operationId": "enterprise-admin/delete-pre-receive-environment",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-pre-receive-environment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "delete-a-pre-receive-environment",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Client Errors"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If you attempt to delete an environment that cannot be deleted, you will receive a <code>422 Unprocessable Entity</code> response.</p>\n<p>The possible error messages are:</p>\n<ul>\n<li><em>Cannot modify or delete the default environment</em></li>\n<li><em>Cannot delete environment that has hooks</em></li>\n<li><em>Cannot delete environment when download is in progress</em></li>\n</ul>"
  },
  {
    "verb": "post",
    "requestPath": "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42/downloads",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42/downloads</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/pre-receive-environments/{pre_receive_environment_id}/downloads', {\n  pre_receive_environment_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/pre-receive-environments/{pre_receive_environment_id}/downloads'</span>, {\n  <span class=\"hljs-attr\">pre_receive_environment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Start a pre-receive environment download",
    "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_",
    "operationId": "enterprise-admin/start-pre-receive-environment-download",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-pre-receive-environment-download"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "start-a-pre-receive-environment-download",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Client Errors"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Triggers a new download of the environment tarball from the environment's <code>image_url</code>. When the download is finished, the newly downloaded tarball will overwrite the existing environment.</p>\n<p>If a download cannot be triggered, you will receive a <code>422 Unprocessable Entity</code> response.</p>\n<p>The possible error messages are:</p>\n<ul>\n<li><em>Cannot modify or delete the default environment</em></li>\n<li><em>Can not start a new download when a download is in progress</em></li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42/downloads/latest",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-environments/42/downloads/latest</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest', {\n  pre_receive_environment_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest'</span>, {\n  <span class=\"hljs-attr\">pre_receive_environment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get the download status for a pre-receive environment",
    "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.",
    "operationId": "enterprise-admin/get-download-status-for-pre-receive-environment",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-environments"
    },
    "slug": "get-the-download-status-for-a-pre-receive-environment",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-environments",
    "subcategoryLabel": "Pre receive environments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>In addition to seeing the download status at the \"<a href=\"#get-a-pre-receive-environment\">Get a pre-receive environment</a>\" endpoint, there is also this separate endpoint for just the download status.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/admin/pre-receive-hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to) or `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "name"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>One of <code>created</code> (when the repository was starred) or <code>updated</code> (when it was last pushed to) or <code>name</code>.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/pre-receive-hooks', {\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/pre-receive-hooks'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List pre-receive hooks",
    "description": "",
    "operationId": "enterprise-admin/list-pre-receive-hooks",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-hooks"
    },
    "slug": "list-pre-receive-hooks",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-hooks",
    "subcategoryLabel": "Pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/admin/pre-receive-hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks \\\n  -d '{\"name\":\"name\",\"script\":\"script\",\"script_repository\":{},\"environment\":{}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks \\\n  -d '{\"name\":\"name\",\"script\":\"script\",\"script_repository\":{},\"environment\":{}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/pre-receive-hooks', {\n  name: 'name',\n  script: 'script',\n  script_repository: {},\n  environment: {},\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/pre-receive-hooks'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">script</span>: <span class=\"hljs-string\">'script'</span>,\n  <span class=\"hljs-attr\">script_repository</span>: {},\n  <span class=\"hljs-attr\">environment</span>: {},\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a pre-receive hook",
    "description": "",
    "operationId": "enterprise-admin/create-pre-receive-hook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-pre-receive-hook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the hook.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the hook.",
                "childParamsGroups": []
              },
              "script": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The script that the hook runs.</p>",
                "name": "script",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The script that the hook runs.",
                "childParamsGroups": []
              },
              "script_repository": {
                "type": "object",
                "description": "<p><strong>Required</strong>. The GitHub repository where the script is kept.</p>",
                "properties": {},
                "additionalProperties": true,
                "name": "script_repository",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The GitHub repository where the script is kept.",
                "childParamsGroups": []
              },
              "environment": {
                "type": "object",
                "description": "<p><strong>Required</strong>. The pre-receive environment where the script is executed.</p>",
                "properties": {},
                "additionalProperties": true,
                "name": "environment",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The pre-receive environment where the script is executed.",
                "childParamsGroups": []
              },
              "enforcement": {
                "type": "string",
                "description": "<p>The state of enforcement for this hook. default: <code>disabled</code></p>",
                "name": "enforcement",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of enforcement for this hook. default: `disabled`",
                "childParamsGroups": []
              },
              "allow_downstream_configuration": {
                "type": "boolean",
                "description": "<p>Whether enforcement can be overridden at the org or repo level. default: <code>false</code></p>",
                "name": "allow_downstream_configuration",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether enforcement can be overridden at the org or repo level. default: `false`",
                "childParamsGroups": []
              }
            },
            "required": [
              "name",
              "script",
              "script_repository",
              "environment"
            ]
          },
          "example": {
            "name": "Check Commits",
            "script": "scripts/commit_check.sh",
            "enforcement": "disabled",
            "allow_downstream_configuration": false,
            "script_repository": {
              "full_name": "DevIT/hooks"
            },
            "environment": {
              "id": 2
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-hooks"
    },
    "slug": "create-a-pre-receive-hook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-hooks",
    "subcategoryLabel": "Pre receive hooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Check Commits\"</span>,\n  <span class=\"hljs-attr\">\"enforcement\"</span>: <span class=\"hljs-string\">\"disabled\"</span>,\n  <span class=\"hljs-attr\">\"script\"</span>: <span class=\"hljs-string\">\"scripts/commmit_check.sh\"</span>,\n  <span class=\"hljs-attr\">\"script_repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">595</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"DevIT/hooks\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/repos/DevIT/hooks\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/DevIT/hooks\"</span>\n  },\n  <span class=\"hljs-attr\">\"environment\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"DevTools Hook Env\"</span>,\n    <span class=\"hljs-attr\">\"image_url\"</span>: <span class=\"hljs-string\">\"https://my_file_server/path/to/devtools_env.tar.gz\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/admin/pre-receive-environments/2\"</span>,\n    <span class=\"hljs-attr\">\"default_environment\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T11:35:45-05:00\"</span>,\n    <span class=\"hljs-attr\">\"hooks_count\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"download\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\"</span>,\n      <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n      <span class=\"hljs-attr\">\"downloaded_at\"</span>: <span class=\"hljs-string\">\"2016-05-26T07:42:53-05:00\"</span>,\n      <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"allow_downstream_configuration\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the hook.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the hook.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The script that the hook runs.</p>",
        "name": "script",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The script that the hook runs.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p><strong>Required</strong>. The GitHub repository where the script is kept.</p>",
        "properties": {},
        "additionalProperties": true,
        "name": "script_repository",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The GitHub repository where the script is kept.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p><strong>Required</strong>. The pre-receive environment where the script is executed.</p>",
        "properties": {},
        "additionalProperties": true,
        "name": "environment",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The pre-receive environment where the script is executed.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The state of enforcement for this hook. default: <code>disabled</code></p>",
        "name": "enforcement",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of enforcement for this hook. default: `disabled`",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Whether enforcement can be overridden at the org or repo level. default: <code>false</code></p>",
        "name": "allow_downstream_configuration",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether enforcement can be overridden at the org or repo level. default: `false`",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/admin/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/pre-receive-hooks/{pre_receive_hook_id}', {\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a pre-receive hook",
    "description": "",
    "operationId": "enterprise-admin/get-pre-receive-hook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-hooks"
    },
    "slug": "get-a-pre-receive-hook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-hooks",
    "subcategoryLabel": "Pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/admin/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/pre-receive-hooks/{pre_receive_hook_id}', {\n  pre_receive_hook_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a pre-receive hook",
    "description": "",
    "operationId": "enterprise-admin/update-pre-receive-hook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-pre-receive-hook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>The name of the hook.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the hook.",
                "childParamsGroups": []
              },
              "script": {
                "type": "string",
                "description": "<p>The script that the hook runs.</p>",
                "name": "script",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The script that the hook runs.",
                "childParamsGroups": []
              },
              "script_repository": {
                "type": "object",
                "description": "<p>The GitHub repository where the script is kept.</p>",
                "properties": {},
                "additionalProperties": true,
                "name": "script_repository",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The GitHub repository where the script is kept.",
                "childParamsGroups": []
              },
              "environment": {
                "type": "object",
                "description": "<p>The pre-receive environment where the script is executed.</p>",
                "properties": {},
                "additionalProperties": true,
                "name": "environment",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The pre-receive environment where the script is executed.",
                "childParamsGroups": []
              },
              "enforcement": {
                "type": "string",
                "description": "<p>The state of enforcement for this hook.</p>",
                "name": "enforcement",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of enforcement for this hook.",
                "childParamsGroups": []
              },
              "allow_downstream_configuration": {
                "type": "boolean",
                "description": "<p>Whether enforcement can be overridden at the org or repo level.</p>",
                "name": "allow_downstream_configuration",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether enforcement can be overridden at the org or repo level.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "name": "Check Commits",
            "environment": {
              "id": 1
            },
            "allow_downstream_configuration": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-hooks"
    },
    "slug": "update-a-pre-receive-hook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-hooks",
    "subcategoryLabel": "Pre receive hooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Check Commits\"</span>,\n  <span class=\"hljs-attr\">\"enforcement\"</span>: <span class=\"hljs-string\">\"disabled\"</span>,\n  <span class=\"hljs-attr\">\"script\"</span>: <span class=\"hljs-string\">\"scripts/commmit_check.sh\"</span>,\n  <span class=\"hljs-attr\">\"script_repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">595</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"DevIT/hooks\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/repos/DevIT/hooks\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/DevIT/hooks\"</span>\n  },\n  <span class=\"hljs-attr\">\"environment\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Default\"</span>,\n    <span class=\"hljs-attr\">\"image_url\"</span>: <span class=\"hljs-string\">\"githubenterprise://internal\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/admin/pre-receive-environments/1\"</span>,\n    <span class=\"hljs-attr\">\"default_environment\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T11:35:45-05:00\"</span>,\n    <span class=\"hljs-attr\">\"hooks_count\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"download\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest\"</span>,\n      <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n      <span class=\"hljs-attr\">\"downloaded_at\"</span>: <span class=\"hljs-string\">\"2016-05-26T07:42:53-05:00\"</span>,\n      <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"allow_downstream_configuration\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The name of the hook.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the hook.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The script that the hook runs.</p>",
        "name": "script",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The script that the hook runs.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>The GitHub repository where the script is kept.</p>",
        "properties": {},
        "additionalProperties": true,
        "name": "script_repository",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The GitHub repository where the script is kept.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>The pre-receive environment where the script is executed.</p>",
        "properties": {},
        "additionalProperties": true,
        "name": "environment",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The pre-receive environment where the script is executed.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The state of enforcement for this hook.</p>",
        "name": "enforcement",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of enforcement for this hook.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Whether enforcement can be overridden at the org or repo level.</p>",
        "name": "allow_downstream_configuration",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether enforcement can be overridden at the org or repo level.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/admin/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/admin/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/pre-receive-hooks/{pre_receive_hook_id}', {\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a pre-receive hook",
    "description": "",
    "operationId": "enterprise-admin/delete-pre-receive-hook",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-pre-receive-hook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "pre-receive-hooks"
    },
    "slug": "delete-a-pre-receive-hook",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "pre-receive-hooks",
    "subcategoryLabel": "Pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/admin/tokens",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/tokens",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/tokens</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /admin/tokens')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /admin/tokens'</span>)\n</code></pre>"
      }
    ],
    "summary": "List personal access tokens",
    "description": "Lists personal access tokens for all users, including admin users.",
    "operationId": "enterprise-admin/list-personal-access-tokens",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-personal-access-tokens"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "list-personal-access-tokens",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists personal access tokens for all users, including admin users.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/admin/tokens/{token_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "token_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/tokens/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/tokens/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/tokens/{token_id}', {\n  token_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/tokens/{token_id}'</span>, {\n  <span class=\"hljs-attr\">token_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a personal access token",
    "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
    "operationId": "enterprise-admin/delete-personal-access-token",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-personal-access-token"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "delete-a-personal-access-token",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deletes a personal access token. Returns a <code>403 - Forbidden</code> status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/admin/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users \\\n  -d '{\"login\":\"login\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users \\\n  -d '{\"login\":\"login\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/users', {\n  login: 'login'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/users'</span>, {\n  <span class=\"hljs-attr\">login</span>: <span class=\"hljs-string\">'login'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a user",
    "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.",
    "operationId": "enterprise-admin/create-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The user's username.</p>",
                "name": "login",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The user's username.",
                "childParamsGroups": []
              },
              "email": {
                "type": "string",
                "description": "<p><strong>Required for built-in authentication.</strong> The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the <a href=\"https://help.github.com/enterprise/2.18/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/\">GitHub authentication guide</a>.</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required for built-in authentication.** The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the [GitHub authentication guide](https://help.github.com/enterprise/2.18/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/).",
                "childParamsGroups": []
              }
            },
            "required": [
              "login"
            ]
          },
          "example": {
            "login": "monalisa",
            "email": "octocat@github.com"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "create-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user\">update the LDAP mapping</a> for the user.</p>\n<p>The login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send <code>\"octo_cat\"</code> as the login, a user named <code>\"octo-cat\"</code> will be created.</p>\n<p>If the login name or email address is already associated with an account, the server will return a <code>422</code> response.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The user's username.</p>",
        "name": "login",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The user's username.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required for built-in authentication.</strong> The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the <a href=\"https://help.github.com/enterprise/2.18/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/\">GitHub authentication guide</a>.</p>",
        "name": "email",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Required for built-in authentication.** The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the [GitHub authentication guide](https://help.github.com/enterprise/2.18/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/).",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n  <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n  <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n  <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n  <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n  <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n  <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n  <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n  <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n  <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "patch",
    "requestPath": "/admin/users/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME \\\n  -d '{\"login\":\"login\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME \\\n  -d '{\"login\":\"login\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /admin/users/{username}', {\n  username: 'username',\n  login: 'login'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /admin/users/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">login</span>: <span class=\"hljs-string\">'login'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update the username for a user",
    "description": "",
    "operationId": "enterprise-admin/update-username-for-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-the-username-for-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The user's new username.</p>",
                "name": "login",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The user's new username.",
                "childParamsGroups": []
              }
            },
            "required": [
              "login"
            ]
          },
          "example": {
            "login": "thenewmonalisa"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "update-the-username-for-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The user's new username.</p>",
        "name": "login",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The user's new username.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Job queued to rename user. It may take a few minutes to complete.\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/user/1\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/admin/users/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/users/{username}', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/users/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a user",
    "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
    "operationId": "enterprise-admin/delete-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "delete-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deleting a user will delete all their repositories, gists, applications, and personal settings. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#suspend-a-user\">Suspending a user</a> is often a better option.</p>\n<p>You can delete any user account except your own.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/admin/users/{username}/authorizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME/authorizations \\\n  -d '{\"scopes\":[\"scopes\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME/authorizations \\\n  -d '{\"scopes\":[\"scopes\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /admin/users/{username}/authorizations', {\n  username: 'username',\n  scopes: [\n    'scopes'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /admin/users/{username}/authorizations'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">scopes</span>: [\n    <span class=\"hljs-string\">'scopes'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Create an impersonation OAuth token",
    "description": "",
    "operationId": "enterprise-admin/create-impersonation-o-auth-token",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "scopes": {
                "type": "array of strings",
                "description": "<p>A list of <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scopes</a>.</p>",
                "items": {
                  "type": "string"
                },
                "name": "scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of [scopes](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "create-an-impersonation-oauth-token",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p>A list of <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scopes</a>.</p>",
        "items": {
          "type": "string"
        },
        "name": "scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of [scopes](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/admin/users/{username}/authorizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME/authorizations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/admin/users/USERNAME/authorizations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /admin/users/{username}/authorizations', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /admin/users/{username}/authorizations'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete an impersonation OAuth token",
    "description": "",
    "operationId": "enterprise-admin/delete-impersonation-o-auth-token",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "delete-an-impersonation-oauth-token",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/app",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /app', {\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /app'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get the authenticated app",
    "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the <code>installations_count</code> in the response. For more details about your app's installations, see the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-installations-for-the-authenticated-app\">List installations for the authenticated app</a>\" endpoint.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/app-manifests/{code}/conversions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "code",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/app-manifests/CODE/conversions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/app-manifests/CODE/conversions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /app-manifests/{code}/conversions', {\n  code: 'code'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /app-manifests/{code}/conversions'</span>, {\n  <span class=\"hljs-attr\">code</span>: <span class=\"hljs-string\">'code'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a GitHub App from a manifest",
    "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/create-from-manifest",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#create-a-github-app-from-a-manifest"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "apps",
      "subcategory": null
    },
    "slug": "create-a-github-app-from-a-manifest",
    "category": "apps",
    "categoryLabel": "Apps",
    "contentType": "application/json",
    "notes": [],
    "bodyParameters": [],
    "descriptionHTML": "<p>Use this endpoint to complete the handshake necessary when implementing the <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/creating-github-apps-from-a-manifest/\">GitHub App Manifest flow</a>. When you create a GitHub App with the manifest flow, you receive a temporary <code>code</code> used to retrieve the GitHub App's <code>id</code>, <code>pem</code> (private key), and <code>webhook_secret</code>.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"octoapp\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDxOkludGVncmF0aW9uMQ==\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Octocat App\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"external_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/apps/octoapp\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"metadata\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n    <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n    <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n    <span class=\"hljs-attr\">\"single_file\"</span>: <span class=\"hljs-string\">\"write\"</span>\n  },\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"push\"</span>,\n    <span class=\"hljs-string\">\"pull_request\"</span>\n  ],\n  <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"Iv1.8a61f9b3a7aba766\"</span>,\n  <span class=\"hljs-attr\">\"client_secret\"</span>: <span class=\"hljs-string\">\"1726be1638095a19edd134c77bde3aa2ece1e5d8\"</span>,\n  <span class=\"hljs-attr\">\"webhook_secret\"</span>: <span class=\"hljs-string\">\"e340154128314309424b7c8e90325147d99fdafa\"</span>,\n  <span class=\"hljs-attr\">\"pem\"</span>: <span class=\"hljs-string\">\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM\\n9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP\\nX0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/\\n6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm\\noNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma\\nszdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ\\ndBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva\\nKOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo\\ngDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP\\nkYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX\\nNuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd\\nNBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE\\nZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG\\nJ4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv\\neDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3\\nFI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk\\n77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH\\nPza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB\\n1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c\\n57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8\\nM5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic\\nI9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN\\n6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK\\nfgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG\\nZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu\\n-----END RSA PRIVATE KEY-----\\n\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/app/installations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /app/installations', {\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /app/installations'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List installations for the authenticated app",
    "description": "You must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/list-installations",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-installations-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "list-installations-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "The permissions the installation has are included under the `permissions` key."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>\n<p>The permissions the installation has are included under the <code>permissions</code> key.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/app/installations/{installation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /app/installations/{installation_id}', {\n  installation_id: 42,\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /app/installations/{installation_id}'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get an installation for the authenticated app",
    "description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-an-installation-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-an-installation-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (<code>target_type</code>) will be either an organization or a user account, depending which account the repository belongs to.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/app/installations/{installation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.gambit-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.gambit-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /app/installations/{installation_id}', {\n  installation_id: 42,\n  mediaType: {\n    previews: [\n      'gambit',\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /app/installations/{installation_id}'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'gambit'</span>,\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete an installation for the authenticated app",
    "description": "Uninstalls a GitHub App on a user, organization, or business account. You must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/delete-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#delete-an-installation-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "gambit",
          "note": "Uninstalling GitHub Apps and revoking an app's installation token are currently available for developers to preview. To access the new endpoint during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.gambit-preview+json\n```",
          "html": "<p>Uninstalling GitHub Apps and revoking an app's installation token are currently available for developers to preview. To access the new endpoint during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.gambit-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "delete-an-installation-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Uninstalls a GitHub App on a user, organization, or business account. You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/app/installations/{installation_id}/access_tokens",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42/access_tokens \\\n  -d '{\"repositories\":[\"repositories\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/app/installations/42/access_tokens \\\n  -d '{\"repositories\":[\"repositories\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /app/installations/{installation_id}/access_tokens', {\n  installation_id: 42,\n  repositories: [\n    'repositories'\n  ],\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /app/installations/{installation_id}/access_tokens'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">repositories</span>: [\n    <span class=\"hljs-string\">'repositories'</span>\n  ],\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create an installation access token for an app",
    "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/create-installation-access-token",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps/#create-an-installation-access-token-for-an-app"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "repositories": {
                "description": "<p>List of repository names that the token should have access to</p>",
                "type": "array of strings",
                "items": {
                  "type": "string",
                  "example": "rails"
                },
                "name": "repositories",
                "in": "body",
                "rawType": "array",
                "rawDescription": "List of repository names that the token should have access to",
                "childParamsGroups": []
              },
              "repository_ids": {
                "description": "<p>List of repository IDs that the token should have access to</p>",
                "example": [
                  1
                ],
                "type": "array of integers",
                "items": {
                  "type": "integer"
                },
                "name": "repository_ids",
                "in": "body",
                "rawType": "array",
                "rawDescription": "List of repository IDs that the token should have access to",
                "childParamsGroups": []
              },
              "permissions": {
                "title": "App Permissions",
                "type": "object",
                "description": "<p>The permissions granted to the user-to-server access token.</p>",
                "properties": {
                  "actions": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "actions",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "administration": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "administration",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "checks": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for checks on code. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "checks",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "content_references": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "content_references",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "contents": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "contents",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "deployments": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for deployments and deployment statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "deployments",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "environments": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for managing repository environments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "environments",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "issues": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "issues",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "metadata": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "metadata",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "packages": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "packages",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "pages": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "pages",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "pull_requests": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "pull_requests",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "repository_hooks": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "repository_hooks",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "repository_projects": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                    "enum": [
                      "read",
                      "write",
                      "admin"
                    ],
                    "name": "repository_projects",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                    "childParamsGroups": []
                  },
                  "secret_scanning_alerts": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "secret_scanning_alerts",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "secrets": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage repository secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "secrets",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "security_events": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "security_events",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "single_file": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage just a single file. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "single_file",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "statuses": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for commit statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "statuses",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "vulnerability_alerts": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: <code>read</code>.</p>",
                    "enum": [
                      "read"
                    ],
                    "name": "vulnerability_alerts",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                    "childParamsGroups": []
                  },
                  "workflows": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: <code>write</code>.</p>",
                    "enum": [
                      "write"
                    ],
                    "name": "workflows",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                    "childParamsGroups": []
                  },
                  "members": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for organization teams and members. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "members",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_administration": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage access to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_administration",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_hooks": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_hooks",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_plan": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for viewing an organization's plan. Can be one of: <code>read</code>.</p>",
                    "enum": [
                      "read"
                    ],
                    "name": "organization_plan",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                    "childParamsGroups": []
                  },
                  "organization_projects": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                    "enum": [
                      "read",
                      "write",
                      "admin"
                    ],
                    "name": "organization_projects",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                    "childParamsGroups": []
                  },
                  "organization_packages": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_packages",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_secrets": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage organization secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_secrets",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_self_hosted_runners": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_self_hosted_runners",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "organization_user_blocking": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "organization_user_blocking",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  },
                  "team_discussions": {
                    "type": "string",
                    "description": "<p>The level of permission to grant the access token to manage team discussions and related comments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                    "enum": [
                      "read",
                      "write"
                    ],
                    "name": "team_discussions",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                    "childParamsGroups": []
                  }
                },
                "example": {
                  "contents": "read",
                  "issues": "read",
                  "deployments": "write",
                  "single_file": "read"
                },
                "name": "permissions",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The permissions granted to the user-to-server access token.",
                "childParamsGroups": [
                  {
                    "parentName": "permissions",
                    "parentType": "object",
                    "id": "permissions-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "actions",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "administration",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for checks on code. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "checks",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "content_references",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "contents",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for deployments and deployment statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "deployments",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for managing repository environments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "environments",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "issues",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "metadata",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "packages",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "pages",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "pull_requests",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "repository_hooks",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                        "enum": [
                          "read",
                          "write",
                          "admin"
                        ],
                        "name": "repository_projects",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "secret_scanning_alerts",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage repository secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "secrets",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "security_events",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage just a single file. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "single_file",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for commit statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "statuses",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: <code>read</code>.</p>",
                        "enum": [
                          "read"
                        ],
                        "name": "vulnerability_alerts",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: <code>write</code>.</p>",
                        "enum": [
                          "write"
                        ],
                        "name": "workflows",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for organization teams and members. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "members",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage access to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_administration",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_hooks",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for viewing an organization's plan. Can be one of: <code>read</code>.</p>",
                        "enum": [
                          "read"
                        ],
                        "name": "organization_plan",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                        "enum": [
                          "read",
                          "write",
                          "admin"
                        ],
                        "name": "organization_projects",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_packages",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage organization secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_secrets",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_self_hosted_runners",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "organization_user_blocking",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The level of permission to grant the access token to manage team discussions and related comments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "name": "team_discussions",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "create-an-installation-access-token-for-an-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of <code>401 - Unauthorized</code>, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the <code>repository_ids</code> when creating the token. When you omit <code>repository_ids</code>, the response does not contain the <code>repositories</code> key.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghs_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"expires_at\"</span>: <span class=\"hljs-string\">\"2016-07-11T22:14:10Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n    <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>\n  },\n  <span class=\"hljs-attr\">\"repositories\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"template_repository\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ]\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "description": "<p>List of repository names that the token should have access to</p>",
        "type": "array of strings",
        "items": {
          "type": "string",
          "example": "rails"
        },
        "name": "repositories",
        "in": "body",
        "rawType": "array",
        "rawDescription": "List of repository names that the token should have access to",
        "childParamsGroups": []
      },
      {
        "description": "<p>List of repository IDs that the token should have access to</p>",
        "example": [
          1
        ],
        "type": "array of integers",
        "items": {
          "type": "integer"
        },
        "name": "repository_ids",
        "in": "body",
        "rawType": "array",
        "rawDescription": "List of repository IDs that the token should have access to",
        "childParamsGroups": []
      },
      {
        "title": "App Permissions",
        "type": "object",
        "description": "<p>The permissions granted to the user-to-server access token.</p>",
        "properties": {
          "actions": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "actions",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "administration": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "administration",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "checks": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for checks on code. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "checks",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "content_references": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "content_references",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "contents": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "contents",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "deployments": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for deployments and deployment statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "deployments",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "environments": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for managing repository environments. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "environments",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "issues": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "issues",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "metadata": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "metadata",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "packages": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "packages",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "pages": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "pages",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "pull_requests": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "pull_requests",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "repository_hooks": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "repository_hooks",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "repository_projects": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "name": "repository_projects",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "childParamsGroups": []
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "secret_scanning_alerts",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "secrets": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage repository secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "secrets",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "security_events": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "security_events",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "single_file": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage just a single file. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "single_file",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "statuses": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for commit statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "statuses",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: <code>read</code>.</p>",
            "enum": [
              "read"
            ],
            "name": "vulnerability_alerts",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
            "childParamsGroups": []
          },
          "workflows": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: <code>write</code>.</p>",
            "enum": [
              "write"
            ],
            "name": "workflows",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
            "childParamsGroups": []
          },
          "members": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for organization teams and members. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "members",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_administration": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage access to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_administration",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_hooks": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_hooks",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_plan": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for viewing an organization's plan. Can be one of: <code>read</code>.</p>",
            "enum": [
              "read"
            ],
            "name": "organization_plan",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
            "childParamsGroups": []
          },
          "organization_projects": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "name": "organization_projects",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "childParamsGroups": []
          },
          "organization_packages": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_packages",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_secrets": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage organization secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_secrets",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_self_hosted_runners",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "organization_user_blocking",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          },
          "team_discussions": {
            "type": "string",
            "description": "<p>The level of permission to grant the access token to manage team discussions and related comments. Can be one of: <code>read</code> or <code>write</code>.</p>",
            "enum": [
              "read",
              "write"
            ],
            "name": "team_discussions",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
            "childParamsGroups": []
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        },
        "name": "permissions",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The permissions granted to the user-to-server access token.",
        "childParamsGroups": [
          {
            "parentName": "permissions",
            "parentType": "object",
            "id": "permissions-object",
            "params": [
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "actions",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "administration",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for checks on code. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "checks",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "content_references",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "contents",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for deployments and deployment statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "deployments",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for managing repository environments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "environments",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "issues",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "metadata",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "packages",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "pages",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "pull_requests",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "repository_hooks",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                "enum": [
                  "read",
                  "write",
                  "admin"
                ],
                "name": "repository_projects",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "secret_scanning_alerts",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage repository secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "secrets",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "security_events",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage just a single file. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "single_file",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for commit statuses. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "statuses",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: <code>read</code>.</p>",
                "enum": [
                  "read"
                ],
                "name": "vulnerability_alerts",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: <code>write</code>.</p>",
                "enum": [
                  "write"
                ],
                "name": "workflows",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for organization teams and members. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "members",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage access to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_administration",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_hooks",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for viewing an organization's plan. Can be one of: <code>read</code>.</p>",
                "enum": [
                  "read"
                ],
                "name": "organization_plan",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: <code>read</code>, <code>write</code>, or <code>admin</code>.</p>",
                "enum": [
                  "read",
                  "write",
                  "admin"
                ],
                "name": "organization_projects",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_packages",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage organization secrets. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_secrets",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_self_hosted_runners",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "organization_user_blocking",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The level of permission to grant the access token to manage team discussions and related comments. Can be one of: <code>read</code> or <code>write</code>.</p>",
                "enum": [
                  "read",
                  "write"
                ],
                "name": "team_discussions",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/applications/grants",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "client_id",
        "in": "query",
        "required": false,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /applications/grants')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /applications/grants'</span>)\n</code></pre>"
      }
    ],
    "summary": "List your grants",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/list-grants",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-grants"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "list-your-grants",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p>You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-authorizations\">list your authorizations</a> API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on <a href=\"https://github.com/settings/applications#authorized\">the application authorizations settings screen within GitHub</a>. The <code>scopes</code> returned are the union of scopes authorized for the application. For example, if an application has one token with <code>repo</code> scope and another token with <code>user</code> scope, the grant will return <code>[\"repo\", \"user\"]</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/applications/grants/{grant_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>grant_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /applications/grants/{grant_id}', {\n  grant_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /applications/grants/{grant_id}'</span>, {\n  <span class=\"hljs-attr\">grant_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a single grant",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/get-grant",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-a-single-grant"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "get-a-single-grant",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/applications/grants/{grant_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>grant_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/grants/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /applications/grants/{grant_id}', {\n  grant_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /applications/grants/{grant_id}'</span>, {\n  <span class=\"hljs-attr\">grant_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a grant",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/delete-grant",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#delete-a-grant"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "delete-a-grant",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p>Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on <a href=\"https://github.com/settings/applications#authorized\">the application authorizations settings screen within GitHub</a>.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/applications/{client_id}/grants/{access_token}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      },
      {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/grants/ACCESS_TOKEN",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/grants/ACCESS_TOKEN</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /applications/{client_id}/grants/{access_token}', {\n  client_id: 'client_id',\n  access_token: 'access_token'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /applications/{client_id}/grants/{access_token}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">access_token</span>: <span class=\"hljs-string\">'access_token'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Revoke a grant for an application",
    "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "operationId": "oauth-authorizations/revoke-grant-for-application",
    "tags": [
      "oauth-authorizations"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#revoke-a-grant-for-an-application"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "slug": "revoke-a-grant-for-an-application",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a> for this method, where the username is the OAuth application <code>client_id</code> and the password is its <code>client_secret</code>. You must also provide a valid token as <code>:access_token</code> and the grant for the token's owner will be deleted.</p>\n<p>Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on <a href=\"https://github.com/settings/applications#authorized\">the application authorizations settings screen within GitHub</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/applications/{client_id}/tokens/{access_token}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      },
      {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /applications/{client_id}/tokens/{access_token}', {\n  client_id: 'client_id',\n  access_token: 'access_token'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /applications/{client_id}/tokens/{access_token}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">access_token</span>: <span class=\"hljs-string\">'access_token'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check an authorization",
    "description": "OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
    "operationId": "oauth-authorizations/check-authorization",
    "tags": [
      "oauth-authorizations"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#check-an-authorization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "slug": "check-an-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a> when accessing it, where the username is the OAuth application <code>client_id</code> and the password is its <code>client_secret</code>. Invalid tokens will return <code>404 NOT FOUND</code>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/applications/{client_id}/tokens/{access_token}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      },
      {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /applications/{client_id}/tokens/{access_token}', {\n  client_id: 'client_id',\n  access_token: 'access_token'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /applications/{client_id}/tokens/{access_token}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">access_token</span>: <span class=\"hljs-string\">'access_token'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Reset an authorization",
    "description": "OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
    "operationId": "oauth-authorizations/reset-authorization",
    "tags": [
      "oauth-authorizations"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#reset-an-authorization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "slug": "reset-an-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a> when accessing it, where the username is the OAuth application <code>client_id</code> and the password is its <code>client_secret</code>. Invalid tokens will return <code>404 NOT FOUND</code>.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/applications/{client_id}/tokens/{access_token}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      },
      {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/applications/CLIENT_ID/tokens/ACCESS_TOKEN</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /applications/{client_id}/tokens/{access_token}', {\n  client_id: 'client_id',\n  access_token: 'access_token'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /applications/{client_id}/tokens/{access_token}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">access_token</span>: <span class=\"hljs-string\">'access_token'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Revoke an authorization for an application",
    "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.",
    "operationId": "oauth-authorizations/revoke-authorization-for-application",
    "tags": [
      "oauth-authorizations"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#revoke-an-authorization-for-an-application"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "slug": "revoke-an-authorization-for-an-application",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>OAuth application owners can revoke a single token for an OAuth application. You must use <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a> for this method, where the username is the OAuth application <code>client_id</code> and the password is its <code>client_secret</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/apps/{app_slug}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "app_slug",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/apps/APP_SLUG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/apps/APP_SLUG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /apps/{app_slug}', {\n  app_slug: 'app_slug',\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /apps/{app_slug}'</span>, {\n  <span class=\"hljs-attr\">app_slug</span>: <span class=\"hljs-string\">'app_slug'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get an app",
    "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-by-slug",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps/#get-an-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-an-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note</strong>: The <code>:app_slug</code> is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., <code>https://github.com/settings/apps/:app_slug</code>).</p>\n<p>If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a <a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/\">personal access token</a> or an <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation\">installation access token</a> to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/authorizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "client_id",
        "in": "query",
        "required": false,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /authorizations')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /authorizations'</span>)\n</code></pre>"
      }
    ],
    "summary": "List your authorizations",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/list-authorizations",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-authorizations"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "list-your-authorizations",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/authorizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations \\\n  -d '{\"scopes\":[\"scopes\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations \\\n  -d '{\"scopes\":[\"scopes\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /authorizations', {\n  scopes: [\n    'scopes'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /authorizations'</span>, {\n  <span class=\"hljs-attr\">scopes</span>: [\n    <span class=\"hljs-string\">'scopes'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Create a new authorization",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/create-authorization",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#create-a-new-authorization"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "scopes": {
                "description": "<p>A list of scopes that this authorization is in.</p>",
                "type": "array of strings or nullable",
                "items": {
                  "type": "string"
                },
                "example": [
                  "public_repo",
                  "user"
                ],
                "nullable": true,
                "name": "scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes that this authorization is in.",
                "childParamsGroups": []
              },
              "note": {
                "description": "<p>A note to remind you what the OAuth token is for.</p>",
                "type": "string",
                "example": "Update all gems",
                "name": "note",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A note to remind you what the OAuth token is for.",
                "childParamsGroups": []
              },
              "note_url": {
                "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
                "type": "string",
                "name": "note_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL to remind you what app the OAuth token is for.",
                "childParamsGroups": []
              },
              "client_id": {
                "description": "<p>The OAuth app client key for which to create the token.</p>",
                "maxLength": 20,
                "type": "string",
                "name": "client_id",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The OAuth app client key for which to create the token.",
                "childParamsGroups": []
              },
              "client_secret": {
                "description": "<p>The OAuth app client secret for which to create the token.</p>",
                "maxLength": 40,
                "type": "string",
                "name": "client_secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The OAuth app client secret for which to create the token.",
                "childParamsGroups": []
              },
              "fingerprint": {
                "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
                "type": "string",
                "name": "fingerprint",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "create-a-new-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p><strong>Warning:</strong> Apps must use the <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a> to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the <a href=\"https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api\">blog post</a>.</p>\n<p>Creates OAuth tokens using <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a>. If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication\">Working with two-factor authentication</a>.\"</p>\n<p>To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use <code>fingerprint</code> to differentiate between them.</p>\n<p>You can also create tokens on GitHub Enterprise Server from the <a href=\"https://github.com/settings/tokens\">personal access tokens settings</a> page. Read more about these tokens in <a href=\"https://help.github.com/articles/creating-an-access-token-for-command-line-use\">the GitHub Help documentation</a>.</p>\n<p>Organizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in <a href=\"https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on\">the GitHub Help documentation</a>.</p>",
    "bodyParameters": [
      {
        "description": "<p>A list of scopes that this authorization is in.</p>",
        "type": "array of strings or nullable",
        "items": {
          "type": "string"
        },
        "example": [
          "public_repo",
          "user"
        ],
        "nullable": true,
        "name": "scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes that this authorization is in.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A note to remind you what the OAuth token is for.</p>",
        "type": "string",
        "example": "Update all gems",
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A note to remind you what the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
        "type": "string",
        "name": "note_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL to remind you what app the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The OAuth app client key for which to create the token.</p>",
        "maxLength": 20,
        "type": "string",
        "name": "client_id",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The OAuth app client key for which to create the token.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The OAuth app client secret for which to create the token.</p>",
        "maxLength": 40,
        "type": "string",
        "name": "client_secret",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The OAuth app client secret for which to create the token.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
        "type": "string",
        "name": "fingerprint",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/authorizations/clients/{client_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/clients/CLIENT_ID \\\n  -d '{\"client_secret\":\"client_secret\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/clients/CLIENT_ID \\\n  -d '{\"client_secret\":\"client_secret\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /authorizations/clients/{client_id}', {\n  client_id: 'client_id',\n  client_secret: 'client_secret'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /authorizations/clients/{client_id}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">client_secret</span>: <span class=\"hljs-string\">'client_secret'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get-or-create an authorization for a specific app",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/get-or-create-authorization-for-app",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "client_secret": {
                "description": "<p><strong>Required</strong>. The OAuth app client secret for which to create the token.</p>",
                "maxLength": 40,
                "type": "string",
                "name": "client_secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The OAuth app client secret for which to create the token.",
                "childParamsGroups": []
              },
              "scopes": {
                "description": "<p>A list of scopes that this authorization is in.</p>",
                "type": "array of strings or nullable",
                "items": {
                  "type": "string"
                },
                "example": [
                  "public_repo",
                  "user"
                ],
                "nullable": true,
                "name": "scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes that this authorization is in.",
                "childParamsGroups": []
              },
              "note": {
                "description": "<p>A note to remind you what the OAuth token is for.</p>",
                "type": "string",
                "example": "Update all gems",
                "name": "note",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A note to remind you what the OAuth token is for.",
                "childParamsGroups": []
              },
              "note_url": {
                "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
                "type": "string",
                "name": "note_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL to remind you what app the OAuth token is for.",
                "childParamsGroups": []
              },
              "fingerprint": {
                "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
                "type": "string",
                "name": "fingerprint",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                "childParamsGroups": []
              }
            },
            "required": [
              "client_secret"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "get-or-create-an-authorization-for-a-specific-app",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p><strong>Warning:</strong> Apps must use the <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a> to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the <a href=\"https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api\">blog post</a>.</p>\n<p>Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.</p>\n<p>If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication\">Working with two-factor authentication</a>.\"</p>\n<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The OAuth app client secret for which to create the token.</p>",
        "maxLength": 40,
        "type": "string",
        "name": "client_secret",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The OAuth app client secret for which to create the token.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A list of scopes that this authorization is in.</p>",
        "type": "array of strings or nullable",
        "items": {
          "type": "string"
        },
        "example": [
          "public_repo",
          "user"
        ],
        "nullable": true,
        "name": "scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes that this authorization is in.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A note to remind you what the OAuth token is for.</p>",
        "type": "string",
        "example": "Update all gems",
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A note to remind you what the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
        "type": "string",
        "name": "note_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL to remind you what app the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
        "type": "string",
        "name": "fingerprint",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if returning an existing token",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/authorizations/clients/{client_id}/{fingerprint}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The client ID of your GitHub app.</p>"
      },
      {
        "name": "fingerprint",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/clients/CLIENT_ID/FINGERPRINT \\\n  -d '{\"client_secret\":\"client_secret\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/clients/CLIENT_ID/FINGERPRINT \\\n  -d '{\"client_secret\":\"client_secret\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /authorizations/clients/{client_id}/{fingerprint}', {\n  client_id: 'client_id',\n  fingerprint: 'fingerprint',\n  client_secret: 'client_secret'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /authorizations/clients/{client_id}/{fingerprint}'</span>, {\n  <span class=\"hljs-attr\">client_id</span>: <span class=\"hljs-string\">'client_id'</span>,\n  <span class=\"hljs-attr\">fingerprint</span>: <span class=\"hljs-string\">'fingerprint'</span>,\n  <span class=\"hljs-attr\">client_secret</span>: <span class=\"hljs-string\">'client_secret'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get-or-create an authorization for a specific app and fingerprint",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "client_secret": {
                "description": "<p><strong>Required</strong>. The OAuth app client secret for which to create the token.</p>",
                "maxLength": 40,
                "type": "string",
                "name": "client_secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The OAuth app client secret for which to create the token.",
                "childParamsGroups": []
              },
              "scopes": {
                "description": "<p>A list of scopes that this authorization is in.</p>",
                "type": "array of strings or nullable",
                "items": {
                  "type": "string"
                },
                "example": [
                  "public_repo",
                  "user"
                ],
                "nullable": true,
                "name": "scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes that this authorization is in.",
                "childParamsGroups": []
              },
              "note": {
                "description": "<p>A note to remind you what the OAuth token is for.</p>",
                "type": "string",
                "example": "Update all gems",
                "name": "note",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A note to remind you what the OAuth token is for.",
                "childParamsGroups": []
              },
              "note_url": {
                "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
                "type": "string",
                "name": "note_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL to remind you what app the OAuth token is for.",
                "childParamsGroups": []
              }
            },
            "required": [
              "client_secret"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p><strong>Warning:</strong> Apps must use the <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a> to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the <a href=\"https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api\">blog post</a>.</p>\n<p>This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. <code>fingerprint</code> is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.</p>\n<p>If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication\">Working with two-factor authentication</a>.\"</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The OAuth app client secret for which to create the token.</p>",
        "maxLength": 40,
        "type": "string",
        "name": "client_secret",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The OAuth app client secret for which to create the token.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A list of scopes that this authorization is in.</p>",
        "type": "array of strings or nullable",
        "items": {
          "type": "string"
        },
        "example": [
          "public_repo",
          "user"
        ],
        "nullable": true,
        "name": "scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes that this authorization is in.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A note to remind you what the OAuth token is for.</p>",
        "type": "string",
        "example": "Update all gems",
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A note to remind you what the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
        "type": "string",
        "name": "note_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL to remind you what app the OAuth token is for.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if returning an existing token",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response if returning a new token",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/authorizations/{authorization_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>authorization_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /authorizations/{authorization_id}', {\n  authorization_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /authorizations/{authorization_id}'</span>, {\n  <span class=\"hljs-attr\">authorization_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a single authorization",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/get-authorization",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-a-single-authorization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "get-a-single-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/authorizations/{authorization_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>authorization_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42 \\\n  -d '{\"scopes\":[\"scopes\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42 \\\n  -d '{\"scopes\":[\"scopes\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /authorizations/{authorization_id}', {\n  authorization_id: 42,\n  scopes: [\n    'scopes'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /authorizations/{authorization_id}'</span>, {\n  <span class=\"hljs-attr\">authorization_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">scopes</span>: [\n    <span class=\"hljs-string\">'scopes'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Update an existing authorization",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/update-authorization",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#update-an-existing-authorization"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "scopes": {
                "description": "<p>A list of scopes that this authorization is in.</p>",
                "type": "array of strings or nullable",
                "items": {
                  "type": "string"
                },
                "example": [
                  "public_repo",
                  "user"
                ],
                "nullable": true,
                "name": "scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes that this authorization is in.",
                "childParamsGroups": []
              },
              "add_scopes": {
                "description": "<p>A list of scopes to add to this authorization.</p>",
                "type": "array of strings",
                "items": {
                  "type": "string"
                },
                "name": "add_scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes to add to this authorization.",
                "childParamsGroups": []
              },
              "remove_scopes": {
                "description": "<p>A list of scopes to remove from this authorization.</p>",
                "type": "array of strings",
                "items": {
                  "type": "string"
                },
                "name": "remove_scopes",
                "in": "body",
                "rawType": "array",
                "rawDescription": "A list of scopes to remove from this authorization.",
                "childParamsGroups": []
              },
              "note": {
                "description": "<p>A note to remind you what the OAuth token is for.</p>",
                "type": "string",
                "example": "Update all gems",
                "name": "note",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A note to remind you what the OAuth token is for.",
                "childParamsGroups": []
              },
              "note_url": {
                "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
                "type": "string",
                "name": "note_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL to remind you what app the OAuth token is for.",
                "childParamsGroups": []
              },
              "fingerprint": {
                "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
                "type": "string",
                "name": "fingerprint",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "update-an-existing-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>\n<p>If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication\">Working with two-factor authentication</a>.\"</p>\n<p>You can only send one of these scope keys at a time.</p>",
    "bodyParameters": [
      {
        "description": "<p>A list of scopes that this authorization is in.</p>",
        "type": "array of strings or nullable",
        "items": {
          "type": "string"
        },
        "example": [
          "public_repo",
          "user"
        ],
        "nullable": true,
        "name": "scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes that this authorization is in.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A list of scopes to add to this authorization.</p>",
        "type": "array of strings",
        "items": {
          "type": "string"
        },
        "name": "add_scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes to add to this authorization.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A list of scopes to remove from this authorization.</p>",
        "type": "array of strings",
        "items": {
          "type": "string"
        },
        "name": "remove_scopes",
        "in": "body",
        "rawType": "array",
        "rawDescription": "A list of scopes to remove from this authorization.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A note to remind you what the OAuth token is for.</p>",
        "type": "string",
        "example": "Update all gems",
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A note to remind you what the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A URL to remind you what app the OAuth token is for.</p>",
        "type": "string",
        "name": "note_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL to remind you what app the OAuth token is for.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>",
        "type": "string",
        "name": "fingerprint",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/authorizations/1\"</span>,\n  <span class=\"hljs-attr\">\"scopes\"</span>: [\n    <span class=\"hljs-string\">\"public_repo\"</span>\n  ],\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"ghu_16C7e42F292c6912E7710c838347Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"token_last_eight\"</span>: <span class=\"hljs-string\">\"Ae178B4a\"</span>,\n  <span class=\"hljs-attr\">\"hashed_token\"</span>: <span class=\"hljs-string\">\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://my-github-app.com\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"my github app\"</span>,\n    <span class=\"hljs-attr\">\"client_id\"</span>: <span class=\"hljs-string\">\"abcde12345fghij67890\"</span>\n  },\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"optional note\"</span>,\n  <span class=\"hljs-attr\">\"note_url\"</span>: <span class=\"hljs-string\">\"http://optional/note/url\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"fingerprint\"</span>: <span class=\"hljs-string\">\"jklmnop12345678\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/authorizations/{authorization_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>authorization_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/authorizations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /authorizations/{authorization_id}', {\n  authorization_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /authorizations/{authorization_id}'</span>, {\n  <span class=\"hljs-attr\">authorization_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete an authorization",
    "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "tags": [
      "oauth-authorizations"
    ],
    "operationId": "oauth-authorizations/delete-authorization",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#delete-an-authorization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "removalDate": "2020-11-13",
      "deprecationDate": "2020-02-14",
      "category": "oauth-authorizations",
      "subcategory": null
    },
    "deprecated": true,
    "slug": "delete-an-authorization",
    "category": "oauth-authorizations",
    "categoryLabel": "Oauth authorizations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Deprecation Notice:</strong> GitHub Enterprise Server will discontinue the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a>, which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations\">OAuth Authorizations API</a> will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the <a href=\"https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/\">blog post</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/codes_of_conduct",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.scarlet-witch-preview+json\" \\\n  http(s)://{hostname}/api/v3/codes_of_conduct",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.scarlet-witch-preview+json\" \\\n  http(s)://{hostname}/api/v3/codes_of_conduct</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /codes_of_conduct', {\n  mediaType: {\n    previews: [\n      'scarlet-witch'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /codes_of_conduct'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'scarlet-witch'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get all codes of conduct",
    "description": "",
    "tags": [
      "codes-of-conduct"
    ],
    "operationId": "codes-of-conduct/get-all-codes-of-conduct",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/codes-of-conduct#get-all-codes-of-conduct"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "scarlet-witch",
          "note": "The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.scarlet-witch-preview+json\n```",
          "html": "<p>The Codes of Conduct API is currently available for developers to preview.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.scarlet-witch-preview+json</code></pre>"
        }
      ],
      "category": "codes-of-conduct",
      "subcategory": null
    },
    "slug": "get-all-codes-of-conduct",
    "category": "codes-of-conduct",
    "categoryLabel": "Codes of conduct",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/codes_of_conduct/{key}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.scarlet-witch-preview+json\" \\\n  http(s)://{hostname}/api/v3/codes_of_conduct/KEY",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.scarlet-witch-preview+json\" \\\n  http(s)://{hostname}/api/v3/codes_of_conduct/KEY</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /codes_of_conduct/{key}', {\n  key: 'key',\n  mediaType: {\n    previews: [\n      'scarlet-witch'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /codes_of_conduct/{key}'</span>, {\n  <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">'key'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'scarlet-witch'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a code of conduct",
    "description": "",
    "tags": [
      "codes-of-conduct"
    ],
    "operationId": "codes-of-conduct/get-conduct-code",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/codes-of-conduct#get-a-code-of-conduct"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "scarlet-witch",
          "note": "The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.scarlet-witch-preview+json\n```",
          "html": "<p>The Codes of Conduct API is currently available for developers to preview.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.scarlet-witch-preview+json</code></pre>"
        }
      ],
      "category": "codes-of-conduct",
      "subcategory": null
    },
    "slug": "get-a-code-of-conduct",
    "category": "codes-of-conduct",
    "categoryLabel": "Codes of conduct",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/emojis",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/emojis",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/emojis</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /emojis')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /emojis'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get emojis",
    "description": "Lists all the emojis available to use on GitHub Enterprise Server.",
    "operationId": "emojis/get",
    "tags": [
      "emojis"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/emojis#get-emojis"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "emojis",
      "subcategory": null
    },
    "slug": "get-emojis",
    "category": "emojis",
    "categoryLabel": "Emojis",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all the emojis available to use on GitHub Enterprise Server.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/settings/license",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/settings/license",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/settings/license</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/settings/license')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/settings/license'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get license information",
    "description": "",
    "operationId": "enterprise-admin/get-license-information",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-license-information"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "license"
    },
    "slug": "get-license-information",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "license",
    "subcategoryLabel": "License",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/all",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/all",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/all</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/all')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/all'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get all statistics",
    "description": "",
    "operationId": "enterprise-admin/get-all-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-all-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/comments')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/comments'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get comment statistics",
    "description": "",
    "operationId": "enterprise-admin/get-comment-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-comment-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-comment-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/gists",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/gists",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/gists</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/gists')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/gists'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get gist statistics",
    "description": "",
    "operationId": "enterprise-admin/get-all-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-gist-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-gist-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/hooks')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/hooks'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get hooks statistics",
    "operationId": "enterprise-admin/get-hooks-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-hooks-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-hooks-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/issues')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/issues'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get issue statistics",
    "description": "",
    "operationId": "enterprise-admin/get-issue-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-issues-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-issue-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/milestones",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/milestones",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/milestones</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/milestones')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/milestones'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get milestone statistics",
    "description": "",
    "operationId": "enterprise-admin/get-milestone-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-milestone-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-milestone-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/orgs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/orgs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/orgs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/orgs')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/orgs'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get organization statistics",
    "description": "",
    "operationId": "enterprise-admin/get-org-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-organization-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-organization-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/pages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/pages",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/pages</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/pages')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/pages'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get pages statistics",
    "description": "",
    "operationId": "enterprise-admin/get-pages-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-pages-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-pages-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/pulls",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/pulls",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/pulls</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/pulls')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/pulls'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get pull request statistics",
    "description": "",
    "operationId": "enterprise-admin/get-pull-request-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-pull-requests-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-pull-request-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/repos",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/repos</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/repos')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/repos'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get repository statistics",
    "operationId": "enterprise-admin/get-repo-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-repository-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-repository-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/enterprise/stats/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/enterprise/stats/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /enterprise/stats/users')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /enterprise/stats/users'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get users statistics",
    "description": "",
    "operationId": "enterprise-admin/get-user-stats",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-users-statistics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "admin-stats"
    },
    "slug": "get-users-statistics",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "admin-stats",
    "subcategoryLabel": "Admin stats",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /events')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /events'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public events",
    "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-public-events",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-public-events",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/feeds",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/feeds",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/feeds</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /feeds')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /feeds'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get feeds",
    "description": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/get-feeds",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-feeds"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "feeds"
    },
    "slug": "get-feeds",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "feeds",
    "subcategoryLabel": "Feeds",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>GitHub Enterprise Server provides several timeline resources in <a href=\"http://en.wikipedia.org/wiki/Atom_(standard)\">Atom</a> format. The Feeds API lists all the feeds available to the authenticated user:</p>\n<ul>\n<li><strong>Timeline</strong>: The GitHub Enterprise Server global public timeline</li>\n<li><strong>User</strong>: The public timeline for any user, using <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia\">URI template</a></li>\n<li><strong>Current user public</strong>: The public timeline for the authenticated user</li>\n<li><strong>Current user</strong>: The private timeline for the authenticated user</li>\n<li><strong>Current user actor</strong>: The private timeline for activity created by the authenticated user</li>\n<li><strong>Current user organizations</strong>: The private timeline for the organizations the authenticated user is a member of.</li>\n<li><strong>Security advisories</strong>: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.</li>\n</ul>\n<p><strong>Note</strong>: Private feeds are only returned when <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">authenticating via Basic Auth</a> since current feed URIs use the older, non revocable auth tokens.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/gists",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists'</span>)\n</code></pre>"
      }
    ],
    "summary": "List gists for the authenticated user",
    "description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gists-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-gists-for-the-authenticated-user",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:</p>"
  },
  {
    "verb": "post",
    "requestPath": "/gists",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists \\\n  -d '{\"files\":{}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists \\\n  -d '{\"files\":{}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /gists', {\n  files: {}\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /gists'</span>, {\n  <span class=\"hljs-attr\">files</span>: {}\n})\n</code></pre>"
      }
    ],
    "summary": "Create a gist",
    "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.",
    "operationId": "gists/create",
    "tags": [
      "gists"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#create-a-gist"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "description": {
                "description": "<p>Description of the gist</p>",
                "example": "Example Ruby script",
                "type": "string",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Description of the gist",
                "childParamsGroups": []
              },
              "files": {
                "description": "<p><strong>Required</strong>. Names and content for the files that make up the gist</p>",
                "example": {
                  "hello.rb": {
                    "content": "puts \"Hello, World!\""
                  }
                },
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "description": "Content of the file",
                      "readOnly": false,
                      "type": "string"
                    }
                  },
                  "required": [
                    "content"
                  ]
                },
                "name": "files",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Names and content for the files that make up the gist",
                "childParamsGroups": []
              },
              "public": {
                "oneOf": [
                  {
                    "description": "Flag indicating whether the gist is public",
                    "example": true,
                    "type": "boolean",
                    "default": false
                  },
                  {
                    "type": "string",
                    "example": "true",
                    "default": "false",
                    "enum": [
                      "true",
                      "false"
                    ]
                  }
                ],
                "name": "public",
                "in": "body",
                "description": "<p>Flag indicating whether the gist is public</p>",
                "type": "boolean or string",
                "childParamsGroups": []
              }
            },
            "required": [
              "files"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "create-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Allows you to add a new gist with one or more files.</p>\n<p><strong>Note:</strong> Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-string\">\"aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\"</span>,\n  <span class=\"hljs-attr\">\"git_pull_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d.git\"</span>,\n  <span class=\"hljs-attr\">\"git_push_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d.git\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2010-04-14T02:15:15Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-06-20T11:34:15Z\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Hello World Examples\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "description": "<p>Description of the gist</p>",
        "example": "Example Ruby script",
        "type": "string",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Description of the gist",
        "childParamsGroups": []
      },
      {
        "description": "<p><strong>Required</strong>. Names and content for the files that make up the gist</p>",
        "example": {
          "hello.rb": {
            "content": "puts \"Hello, World!\""
          }
        },
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "content": {
              "description": "Content of the file",
              "readOnly": false,
              "type": "string"
            }
          },
          "required": [
            "content"
          ]
        },
        "name": "files",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Names and content for the files that make up the gist",
        "childParamsGroups": []
      },
      {
        "oneOf": [
          {
            "description": "Flag indicating whether the gist is public",
            "example": true,
            "type": "boolean",
            "default": false
          },
          {
            "type": "string",
            "example": "true",
            "default": "false",
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "name": "public",
        "in": "body",
        "description": "<p>Flag indicating whether the gist is public</p>",
        "type": "boolean or string",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/gists/public",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/public",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/public</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/public')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/public'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public gists",
    "description": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-public",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-public-gists"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-public-gists",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List public gists sorted by most recently updated to least recently updated.</p>\n<p>Note: With <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">pagination</a>, you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/gists/starred",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/starred",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/starred</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/starred')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/starred'</span>)\n</code></pre>"
      }
    ],
    "summary": "List starred gists",
    "description": "List the authenticated user's starred gists:",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-starred",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-starred-gists"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-starred-gists",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the authenticated user's starred gists:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a gist",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "get-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden Gist"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/gists/{gist_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID \\\n  -d '{\"description\":\"description\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID \\\n  -d '{\"description\":\"description\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /gists/{gist_id}', {\n  gist_id: 'gist_id',\n  description: 'description'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /gists/{gist_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">'description'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a gist",
    "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.",
    "tags": [
      "gists"
    ],
    "operationId": "gists/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists/#update-a-gist"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "description": {
                "description": "<p>Description of the gist</p>",
                "example": "Example Ruby script",
                "type": "string",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Description of the gist",
                "childParamsGroups": []
              },
              "files": {
                "description": "<p>Names of files to be updated</p>",
                "example": {
                  "hello.rb": {
                    "content": "blah",
                    "filename": "goodbye.rb"
                  }
                },
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "content": {
                      "description": "The new content of the file",
                      "type": "string"
                    },
                    "filename": {
                      "description": "The new filename for the file",
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "anyOf": [
                    {
                      "required": [
                        "content"
                      ]
                    },
                    {
                      "required": [
                        "filename"
                      ]
                    },
                    {
                      "type": "object",
                      "maxProperties": 0
                    }
                  ]
                },
                "name": "files",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Names of files to be updated",
                "childParamsGroups": []
              }
            },
            "anyOf": [
              {
                "required": [
                  "description"
                ]
              },
              {
                "required": [
                  "files"
                ]
              }
            ],
            "type": "object",
            "nullable": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "update-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-string\">\"aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\"</span>,\n  <span class=\"hljs-attr\">\"git_pull_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d.git\"</span>,\n  <span class=\"hljs-attr\">\"git_push_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d.git\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://gist.github.com/aa5a315d61ae9438b18d\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2010-04-14T02:15:15Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-06-20T11:34:15Z\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Hello World Examples\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "description": "<p>Description of the gist</p>",
        "example": "Example Ruby script",
        "type": "string",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Description of the gist",
        "childParamsGroups": []
      },
      {
        "description": "<p>Names of files to be updated</p>",
        "example": {
          "hello.rb": {
            "content": "blah",
            "filename": "goodbye.rb"
          }
        },
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "nullable": true,
          "properties": {
            "content": {
              "description": "The new content of the file",
              "type": "string"
            },
            "filename": {
              "description": "The new filename for the file",
              "type": "string",
              "nullable": true
            }
          },
          "anyOf": [
            {
              "required": [
                "content"
              ]
            },
            {
              "required": [
                "filename"
              ]
            },
            {
              "type": "object",
              "maxProperties": 0
            }
          ]
        },
        "name": "files",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Names of files to be updated",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/gists/{gist_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /gists/{gist_id}', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /gists/{gist_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a gist",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/delete",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#delete-a-gist"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "delete-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/comments', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/comments'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List gist comments",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-comments",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-comments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": "comments"
    },
    "slug": "list-gist-comments",
    "category": "gists",
    "categoryLabel": "Gists",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/gists/{gist_id}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /gists/{gist_id}/comments', {\n  gist_id: 'gist_id',\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /gists/{gist_id}/comments'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a gist comment",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/create-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#create-a-gist-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "body": {
                "description": "<p><strong>Required</strong>. The comment text.</p>",
                "type": "string",
                "maxLength": 65535,
                "example": "Body of the attachment",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The comment text.",
                "childParamsGroups": []
              }
            },
            "type": "object",
            "required": [
              "body"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": "comments"
    },
    "slug": "create-a-gist-comment",
    "category": "gists",
    "categoryLabel": "Gists",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The comment text.</p>",
        "type": "string",
        "maxLength": 65535,
        "example": "Body of the attachment",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The comment text.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkdpc3RDb21tZW50MQ==\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Just commenting for the sake of commenting\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-18T23:23:56Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-18T23:23:56Z\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/comments/{comment_id}', {\n  gist_id: 'gist_id',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a gist comment",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/get-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": "comments"
    },
    "slug": "get-a-gist-comment",
    "category": "gists",
    "categoryLabel": "Gists",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden Gist"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/gists/{gist_id}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /gists/{gist_id}/comments/{comment_id}', {\n  gist_id: 'gist_id',\n  comment_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /gists/{gist_id}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a gist comment",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/update-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#update-a-gist-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "body": {
                "description": "<p><strong>Required</strong>. The comment text.</p>",
                "type": "string",
                "maxLength": 65535,
                "example": "Body of the attachment",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The comment text.",
                "childParamsGroups": []
              }
            },
            "type": "object",
            "required": [
              "body"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": "comments"
    },
    "slug": "update-a-gist-comment",
    "category": "gists",
    "categoryLabel": "Gists",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The comment text.</p>",
        "type": "string",
        "maxLength": 65535,
        "example": "Body of the attachment",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The comment text.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkdpc3RDb21tZW50MQ==\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Just commenting for the sake of commenting\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-18T23:23:56Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-18T23:23:56Z\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/gists/{gist_id}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /gists/{gist_id}/comments/{comment_id}', {\n  gist_id: 'gist_id',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /gists/{gist_id}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a gist comment",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/delete-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#delete-a-gist-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": "comments"
    },
    "slug": "delete-a-gist-comment",
    "category": "gists",
    "categoryLabel": "Gists",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/commits",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/commits",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/commits</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/commits', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/commits'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List gist commits",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-commits",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-commits"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-gist-commits",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/forks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/forks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/forks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/forks', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/forks'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List gist forks",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-forks",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-forks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-gist-forks",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/gists/{gist_id}/forks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/forks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/forks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /gists/{gist_id}/forks', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /gists/{gist_id}/forks'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Fork a gist",
    "description": "**Note**: This was previously `/gists/:gist_id/fork`.",
    "tags": [
      "gists"
    ],
    "operationId": "gists/fork",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#fork-a-gist"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "fork-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note</strong>: This was previously <code>/gists/:gist_id/fork</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/star",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/star', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/star'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a gist is starred",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/check-is-starred",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#check-if-a-gist-is-starred"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "check-if-a-gist-is-starred",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if gist is starred"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if gist is not starred"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/gists/{gist_id}/star",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /gists/{gist_id}/star', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /gists/{gist_id}/star'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Star a gist",
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "tags": [
      "gists"
    ],
    "operationId": "gists/star",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#star-a-gist"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "star-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/gists/{gist_id}/star",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/star</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /gists/{gist_id}/star', {\n  gist_id: 'gist_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /gists/{gist_id}/star'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Unstar a gist",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/unstar",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#unstar-a-gist"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "unstar-a-gist",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/gists/{gist_id}/{sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>gist_id parameter</p>"
      },
      {
        "name": "sha",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/SHA",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gists/GIST_ID/SHA</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gists/{gist_id}/{sha}', {\n  gist_id: 'gist_id',\n  sha: 'sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gists/{gist_id}/{sha}'</span>, {\n  <span class=\"hljs-attr\">gist_id</span>: <span class=\"hljs-string\">'gist_id'</span>,\n  <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a gist revision",
    "description": "",
    "tags": [
      "gists"
    ],
    "operationId": "gists/get-revision",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist-revision"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "get-a-gist-revision",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/gitignore/templates",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gitignore/templates",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gitignore/templates</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gitignore/templates')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gitignore/templates'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get all gitignore templates",
    "description": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-for-the-authenticated-user).",
    "operationId": "gitignore/get-all-templates",
    "tags": [
      "gitignore"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gitignore#get-all-gitignore-templates"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "gitignore",
      "subcategory": null
    },
    "slug": "get-all-gitignore-templates",
    "category": "gitignore",
    "categoryLabel": "Gitignore",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all templates available to pass as an option when <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-for-the-authenticated-user\">creating a repository</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/gitignore/templates/{name}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "name",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gitignore/templates/NAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/gitignore/templates/NAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /gitignore/templates/{name}', {\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /gitignore/templates/{name}'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a gitignore template",
    "description": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) to get the raw contents.",
    "operationId": "gitignore/get-template",
    "tags": [
      "gitignore"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gitignore#get-a-gitignore-template"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "gitignore",
      "subcategory": null
    },
    "slug": "get-a-gitignore-template",
    "category": "gitignore",
    "categoryLabel": "Gitignore",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The API also allows fetching the source of a single template.\nUse the raw <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">media type</a> to get the raw contents.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/installation/repositories",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/installation/repositories",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/installation/repositories</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /installation/repositories', {\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /installation/repositories'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List repositories accessible to the app installation",
    "description": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/list-repos-accessible-to-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-repositories-accessible-to-the-app-installation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        },
        {
          "required": false,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "list-repositories-accessible-to-the-app-installation",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List repositories that an app installation can access.</p>\n<p>You must use an <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation\">installation access token</a> to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ],
          "default": "assigned"
        },
        "descriptionHTML": "<p>Indicates which sorts of issues to return. Can be one of:<br>\n* <code>assigned</code>: Issues assigned to you<br>\n* <code>created</code>: Issues created by you<br>\n* <code>mentioned</code>: Issues mentioning you<br>\n* <code>subscribed</code>: Issues you're subscribed to updates for<br>\n* <code>all</code>: All issues the authenticated user can see, regardless of participation or creation</p>"
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the issues to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>A list of comma separated label names. Example: <code>bug,ui,@high</code></p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>What to sort results by. Can be either <code>created</code>, <code>updated</code>, <code>comments</code>.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "collab",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": ""
      },
      {
        "name": "orgs",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": ""
      },
      {
        "name": "owned",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pulls",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /issues')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /issues'</span>)\n</code></pre>"
      }
    ],
    "summary": "List issues assigned to the authenticated user",
    "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issues-assigned-to-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues"
    },
    "slug": "list-issues-assigned-to-the-authenticated-user",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the <code>filter</code> query parameter to fetch issues that are not\nnecessarily assigned to you.</p>\n<p><strong>Note</strong>: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe <code>pull_request</code> key. Be aware that the <code>id</code> of a pull request returned from \"Issues\" endpoints will be an <em>issue id</em>. To find out the pull\nrequest id, use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a>\" endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/licenses",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "featured",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/licenses",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/licenses</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /licenses')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /licenses'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get all commonly used licenses",
    "description": "",
    "tags": [
      "licenses"
    ],
    "operationId": "licenses/get-all-commonly-used",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/licenses#get-all-commonly-used-licenses"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "licenses",
      "subcategory": null
    },
    "slug": "get-all-commonly-used-licenses",
    "category": "licenses",
    "categoryLabel": "Licenses",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/licenses/{license}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "license",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/licenses/LICENSE",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/licenses/LICENSE</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /licenses/{license}', {\n  license: 'license'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /licenses/{license}'</span>, {\n  <span class=\"hljs-attr\">license</span>: <span class=\"hljs-string\">'license'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a license",
    "description": "",
    "tags": [
      "licenses"
    ],
    "operationId": "licenses/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/licenses#get-a-license"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "licenses",
      "subcategory": null
    },
    "slug": "get-a-license",
    "category": "licenses",
    "categoryLabel": "Licenses",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/markdown",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/markdown \\\n  -d '{\"text\":\"text\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/markdown \\\n  -d '{\"text\":\"text\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /markdown', {\n  text: 'text'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /markdown'</span>, {\n  <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">'text'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Render a Markdown document",
    "description": "",
    "operationId": "markdown/render",
    "tags": [
      "markdown"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/markdown#render-a-markdown-document"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "text": {
                "description": "<p><strong>Required</strong>. The Markdown text to render in HTML.</p>",
                "type": "string",
                "name": "text",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The Markdown text to render in HTML.",
                "childParamsGroups": []
              },
              "mode": {
                "description": "<p>The rendering mode.</p>",
                "enum": [
                  "markdown",
                  "gfm"
                ],
                "default": "markdown",
                "example": "markdown",
                "type": "string",
                "name": "mode",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The rendering mode.",
                "childParamsGroups": []
              },
              "context": {
                "description": "<p>The repository context to use when creating references in <code>gfm</code> mode.</p>",
                "type": "string",
                "name": "context",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The repository context to use when creating references in `gfm` mode.",
                "childParamsGroups": []
              }
            },
            "required": [
              "text"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "markdown",
      "subcategory": null
    },
    "slug": "render-a-markdown-document",
    "category": "markdown",
    "categoryLabel": "Markdown",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The Markdown text to render in HTML.</p>",
        "type": "string",
        "name": "text",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The Markdown text to render in HTML.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The rendering mode.</p>",
        "enum": [
          "markdown",
          "gfm"
        ],
        "default": "markdown",
        "example": "markdown",
        "type": "string",
        "name": "mode",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The rendering mode.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The repository context to use when creating references in <code>gfm</code> mode.</p>",
        "type": "string",
        "name": "context",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The repository context to use when creating references in `gfm` mode.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/markdown/raw",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/markdown/raw",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/markdown/raw</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /markdown/raw')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /markdown/raw'</span>)\n</code></pre>"
      }
    ],
    "summary": "Render a Markdown document in raw mode",
    "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.",
    "operationId": "markdown/render-raw",
    "tags": [
      "markdown"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/markdown#render-a-markdown-document-in-raw-mode"
    },
    "requestBody": {
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        },
        "text/x-markdown": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "markdown",
      "subcategory": null
    },
    "slug": "render-a-markdown-document-in-raw-mode",
    "category": "markdown",
    "categoryLabel": "Markdown",
    "contentType": "text/plain",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>You must send Markdown as plain text (using a <code>Content-Type</code> header of <code>text/plain</code> or <code>text/x-markdown</code>) to this endpoint, rather than using JSON format. In raw mode, <a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a> is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/meta",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/meta",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/meta</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /meta')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /meta'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get GitHub Enterprise Server meta information",
    "description": "",
    "tags": [
      "meta"
    ],
    "operationId": "meta/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/meta#get-github-meta-information"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "meta",
      "subcategory": null
    },
    "slug": "get-github-enterprise-server-meta-information",
    "category": "meta",
    "categoryLabel": "Meta",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/networks/{owner}/{repo}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/networks/octocat/hello-world/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/networks/octocat/hello-world/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /networks/{owner}/{repo}/events', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /networks/{owner}/{repo}/events'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public events for a network of repositories",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-public-events-for-repo-network",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-for-a-network-of-repositories"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-public-events-for-a-network-of-repositories",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/notifications",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "descriptionHTML": "<p>If <code>true</code>, show notifications marked as read.</p>"
      },
      {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "descriptionHTML": "<p>If <code>true</code>, only shows notifications in which the user is directly participating or mentioned.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated before the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /notifications')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /notifications'</span>)\n</code></pre>"
      }
    ],
    "summary": "List notifications for the authenticated user",
    "description": "List all notifications for the current user, sorted by most recently updated.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-notifications-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-notifications-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "list-notifications-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all notifications for the current user, sorted by most recently updated.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/notifications",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications \\\n  -d '{\"last_read_at\":\"last_read_at\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications \\\n  -d '{\"last_read_at\":\"last_read_at\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /notifications', {\n  last_read_at: 'last_read_at'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /notifications'</span>, {\n  <span class=\"hljs-attr\">last_read_at</span>: <span class=\"hljs-string\">'last_read_at'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Mark notifications as read",
    "description": "Marks all notifications as \"read\" removes it from the [default view on GitHub Enterprise Server](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List notifications for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/mark-notifications-as-read",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-notifications-as-read"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "last_read_at": {
                "description": "<p>Describes the last point that notifications were checked.</p>",
                "type": "string",
                "format": "date-time",
                "name": "last_read_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Describes the last point that notifications were checked.",
                "childParamsGroups": []
              },
              "read": {
                "description": "<p>Whether the notification has been read.</p>",
                "type": "boolean",
                "name": "read",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether the notification has been read.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "mark-notifications-as-read",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      },
      {
        "httpStatusCode": "205",
        "httpStatusMessage": "Reset Content",
        "description": "Reset Content"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "descriptionHTML": "<p>Marks all notifications as \"read\" removes it from the <a href=\"https://github.com/notifications\">default view on GitHub Enterprise Server</a>. If the number of notifications is too large to complete in one request, you will receive a <code>202 Accepted</code> status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-notifications-for-the-authenticated-user\">List notifications for the authenticated user</a> endpoint and pass the query parameter <code>all=false</code>.</p>",
    "bodyParameters": [
      {
        "description": "<p>Describes the last point that notifications were checked.</p>",
        "type": "string",
        "format": "date-time",
        "name": "last_read_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Describes the last point that notifications were checked.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether the notification has been read.</p>",
        "type": "boolean",
        "name": "read",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether the notification has been read.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/notifications/threads/{thread_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>thread_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /notifications/threads/{thread_id}', {\n  thread_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /notifications/threads/{thread_id}'</span>, {\n  <span class=\"hljs-attr\">thread_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a thread",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/get-thread",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-thread"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "get-a-thread",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/notifications/threads/{thread_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>thread_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /notifications/threads/{thread_id}', {\n  thread_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /notifications/threads/{thread_id}'</span>, {\n  <span class=\"hljs-attr\">thread_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Mark a thread as read",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/mark-thread-as-read",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-a-thread-as-read"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "mark-a-thread-as-read",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "205",
        "httpStatusMessage": "Reset Content",
        "description": "Reset Content"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/notifications/threads/{thread_id}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>thread_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /notifications/threads/{thread_id}/subscription', {\n  thread_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /notifications/threads/{thread_id}/subscription'</span>, {\n  <span class=\"hljs-attr\">thread_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a thread subscription for the authenticated user",
    "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/get-thread-subscription-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "get-a-thread-subscription-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This checks to see if the current user is subscribed to a thread. You can also <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-repository-subscription\">get a repository subscription</a>.</p>\n<p>Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were <strong>@mentioned</strong>, or manually subscribe to a thread.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/notifications/threads/{thread_id}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>thread_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription \\\n  -d '{\"ignored\":true}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription \\\n  -d '{\"ignored\":true}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /notifications/threads/{thread_id}/subscription', {\n  thread_id: 42,\n  ignored: true\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /notifications/threads/{thread_id}/subscription'</span>, {\n  <span class=\"hljs-attr\">thread_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">ignored</span>: <span class=\"hljs-literal\">true</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set a thread subscription",
    "description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.\n\nYou can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.\n\nUnsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-thread-subscription) endpoint.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/set-thread-subscription",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-thread-subscription"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "ignored": {
                "description": "<p>Whether to block all notifications from a thread.</p>",
                "default": false,
                "type": "boolean",
                "name": "ignored",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether to block all notifications from a thread.",
                "childParamsGroups": []
              }
            },
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "set-a-thread-subscription",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an <strong>@mention</strong>.</p>\n<p>You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.</p>\n<p>Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-thread-subscription\">Delete a thread subscription</a> endpoint.</p>",
    "bodyParameters": [
      {
        "description": "<p>Whether to block all notifications from a thread.</p>",
        "default": false,
        "type": "boolean",
        "name": "ignored",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether to block all notifications from a thread.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"subscribed\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"ignored\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2012-10-06T21:34:12Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/notifications/threads/1/subscription\"</span>,\n  <span class=\"hljs-attr\">\"thread_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/notifications/threads/1\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/notifications/threads/{thread_id}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>thread_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/notifications/threads/42/subscription</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /notifications/threads/{thread_id}/subscription', {\n  thread_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /notifications/threads/{thread_id}/subscription'</span>, {\n  <span class=\"hljs-attr\">thread_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a thread subscription",
    "description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the [Set a thread subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-thread-subscription) endpoint and set `ignore` to `true`.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/delete-thread-subscription",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-thread-subscription"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "delete-a-thread-subscription",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Mutes all future notifications for a conversation until you comment on the thread or get an <strong>@mention</strong>. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-thread-subscription\">Set a thread subscription</a> endpoint and set <code>ignore</code> to <code>true</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/octocat",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "s",
        "in": "query",
        "description": "The words to show in Octocat's speech bubble",
        "schema": {
          "type": "string"
        },
        "required": false,
        "descriptionHTML": "<p>The words to show in Octocat's speech bubble</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/octocat",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/octocat</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /octocat')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /octocat'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get Octocat",
    "description": "Get the octocat as ASCII art",
    "tags": [
      "meta"
    ],
    "operationId": "meta/get-octocat",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/meta#get-octocat"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "meta"
    },
    "slug": "get-octocat",
    "category": "meta",
    "categoryLabel": "Meta",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get the octocat as ASCII art</p>"
  },
  {
    "verb": "get",
    "requestPath": "/organizations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "An organization ID. Only return organizations with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>An organization ID. Only return organizations with an ID greater than this ID.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/organizations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/organizations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /organizations')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /organizations'</span>)\n</code></pre>"
      }
    ],
    "summary": "List organizations",
    "description": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": null
    },
    "slug": "list-organizations",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all organizations, in the order that they were created on GitHub Enterprise Server.</p>\n<p><strong>Note:</strong> Pagination is powered exclusively by the <code>since</code> parameter. Use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header\">Link header</a> to get the URL for the next page of organizations.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an organization",
    "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\"",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "surtur",
          "note": "New repository creation permissions are available to preview. You can now use `members_can_create_public_repositories`, `members_can_create_private_repositories`, and `members_can_create_internal_repositories`. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.\n\nTo access these new parameters during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.surtur-preview+json\n```",
          "html": "<p>New repository creation permissions are available to preview. You can now use <code>members_can_create_public_repositories</code>, <code>members_can_create_private_repositories</code>, and <code>members_can_create_internal_repositories</code>. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.</p>\n<p>To access these new parameters during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.surtur-preview+json</code></pre>"
        }
      ],
      "category": "orgs",
      "subcategory": null
    },
    "slug": "get-an-organization",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>To see many of the organization response values, you need to be an authenticated organization owner with the <code>admin:org</code> scope. When the value of <code>two_factor_requirement_enabled</code> is <code>true</code>, the organization requires all members, billing managers, and outside collaborators to enable <a href=\"https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/\">two-factor authentication</a>.</p>\n<p>GitHub Apps with the <code>Organization plan</code> permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/\">Authenticating with GitHub Apps</a>\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\"</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/orgs/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG \\\n  -d '{\"billing_email\":\"billing_email\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG \\\n  -d '{\"billing_email\":\"billing_email\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /orgs/{org}', {\n  org: 'org',\n  billing_email: 'billing_email'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /orgs/{org}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">billing_email</span>: <span class=\"hljs-string\">'billing_email'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update an organization",
    "description": "**Parameter Deprecation Notice:** GitHub Enterprise Server will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs/#update-an-organization"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "billing_email": {
                "type": "string",
                "description": "<p>Billing email address. This address is not publicized.</p>",
                "name": "billing_email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Billing email address. This address is not publicized.",
                "childParamsGroups": []
              },
              "company": {
                "type": "string",
                "description": "<p>The company name.</p>",
                "name": "company",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The company name.",
                "childParamsGroups": []
              },
              "email": {
                "type": "string",
                "description": "<p>The publicly visible email address.</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The publicly visible email address.",
                "childParamsGroups": []
              },
              "twitter_username": {
                "type": "string",
                "description": "<p>The Twitter username of the company.</p>",
                "name": "twitter_username",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The Twitter username of the company.",
                "childParamsGroups": []
              },
              "location": {
                "type": "string",
                "description": "<p>The location.</p>",
                "name": "location",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The location.",
                "childParamsGroups": []
              },
              "name": {
                "type": "string",
                "description": "<p>The shorthand name of the company.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The shorthand name of the company.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>The description of the company.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The description of the company.",
                "childParamsGroups": []
              },
              "has_organization_projects": {
                "type": "boolean",
                "description": "<p>Toggles whether an organization can use organization projects.</p>",
                "name": "has_organization_projects",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles whether an organization can use organization projects.",
                "childParamsGroups": []
              },
              "has_repository_projects": {
                "type": "boolean",
                "description": "<p>Toggles whether repositories that belong to the organization can use repository projects.</p>",
                "name": "has_repository_projects",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles whether repositories that belong to the organization can use repository projects.",
                "childParamsGroups": []
              },
              "default_repository_permission": {
                "type": "string",
                "description": "<p>Default permission level members have for organization repositories:<br>\n* <code>read</code> - can pull, but not push to or administer this repository.<br>\n* <code>write</code> - can pull and push, but not administer this repository.<br>\n* <code>admin</code> - can pull, push, and administer this repository.<br>\n* <code>none</code> - no permissions granted by default.</p>",
                "enum": [
                  "read",
                  "write",
                  "admin",
                  "none"
                ],
                "default": "read",
                "name": "default_repository_permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
                "childParamsGroups": []
              },
              "members_can_create_repositories": {
                "type": "boolean",
                "description": "<p>Toggles the ability of non-admin organization members to create repositories. Can be one of:<br>\n* <code>true</code> - all organization members can create repositories.<br>\n* <code>false</code> - only organization owners can create repositories.<br>\nDefault: <code>true</code><br>\n<strong>Note:</strong> A parameter can override this parameter. See <code>members_allowed_repository_creation_type</code> in this table for details. <strong>Note:</strong> A parameter can override this parameter. See <code>members_allowed_repository_creation_type</code> in this table for details.</p>",
                "default": true,
                "name": "members_can_create_repositories",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only organization owners can create repositories.  \nDefault: `true`  \n**Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.",
                "childParamsGroups": []
              },
              "members_can_create_internal_repositories": {
                "type": "boolean",
                "description": "<p>Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:<br>\n* <code>true</code> - all organization members can create internal repositories.<br>\n* <code>false</code> - only organization owners can create internal repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
                "name": "members_can_create_internal_repositories",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:  \n\\* `true` - all organization members can create internal repositories.  \n\\* `false` - only organization owners can create internal repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
                "childParamsGroups": []
              },
              "members_can_create_private_repositories": {
                "type": "boolean",
                "description": "<p>Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:<br>\n* <code>true</code> - all organization members can create private repositories.<br>\n* <code>false</code> - only organization owners can create private repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
                "name": "members_can_create_private_repositories",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:  \n\\* `true` - all organization members can create private repositories.  \n\\* `false` - only organization owners can create private repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
                "childParamsGroups": []
              },
              "members_can_create_public_repositories": {
                "type": "boolean",
                "description": "<p>Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:<br>\n* <code>true</code> - all organization members can create public repositories.<br>\n* <code>false</code> - only organization owners can create public repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
                "name": "members_can_create_public_repositories",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:  \n\\* `true` - all organization members can create public repositories.  \n\\* `false` - only organization owners can create public repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
                "childParamsGroups": []
              },
              "members_allowed_repository_creation_type": {
                "type": "string",
                "description": "<p>Specifies which types of repositories non-admin organization members can create. Can be one of:<br>\n* <code>all</code> - all organization members can create public and private repositories.<br>\n* <code>private</code> - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.<br>\n* <code>none</code> - only admin members can create repositories.<br>\n<strong>Note:</strong> This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in <code>members_can_create_repositories</code>. See the parameter deprecation notice in the operation description for details.</p>",
                "enum": [
                  "all",
                  "private",
                  "none"
                ],
                "name": "members_allowed_repository_creation_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n\\* `none` - only admin members can create repositories.  \n**Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.",
                "childParamsGroups": []
              },
              "blog": {
                "type": "string",
                "example": "\"http://github.blog\"",
                "name": "blog",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "billing_email": "mona@github.com",
            "company": "GitHub",
            "email": "mona@github.com",
            "twitter_username": "github",
            "location": "San Francisco",
            "name": "github",
            "description": "GitHub, the company.",
            "default_repository_permission": "read",
            "members_can_create_repositories": true,
            "members_allowed_repository_creation_type": "all"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "surtur",
          "note": "New repository creation permissions are available to preview. You can now use `members_can_create_public_repositories`, `members_can_create_private_repositories`, and `members_can_create_internal_repositories`. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.\n\nTo access these new parameters during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.surtur-preview+json\n```",
          "html": "<p>New repository creation permissions are available to preview. You can now use <code>members_can_create_public_repositories</code>, <code>members_can_create_private_repositories</code>, and <code>members_can_create_internal_repositories</code>. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.</p>\n<p>To access these new parameters during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.surtur-preview+json</code></pre>"
        }
      ],
      "category": "orgs",
      "subcategory": null
    },
    "slug": "update-an-organization",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Parameter Deprecation Notice:</strong> GitHub Enterprise Server will replace and discontinue <code>members_allowed_repository_creation_type</code> in favor of more granular permissions. The new input parameters are <code>members_can_create_public_repositories</code>, <code>members_can_create_private_repositories</code> for all organizations and <code>members_can_create_internal_repositories</code> for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes\">blog post</a>.</p>\n<p>Enables an authenticated organization owner with the <code>admin:org</code> scope to update the organization's profile and member privileges.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>Billing email address. This address is not publicized.</p>",
        "name": "billing_email",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Billing email address. This address is not publicized.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The company name.</p>",
        "name": "company",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The company name.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The publicly visible email address.</p>",
        "name": "email",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The publicly visible email address.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The Twitter username of the company.</p>",
        "name": "twitter_username",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The Twitter username of the company.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The location.</p>",
        "name": "location",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The location.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The shorthand name of the company.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The shorthand name of the company.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The description of the company.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The description of the company.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles whether an organization can use organization projects.</p>",
        "name": "has_organization_projects",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles whether an organization can use organization projects.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles whether repositories that belong to the organization can use repository projects.</p>",
        "name": "has_repository_projects",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles whether repositories that belong to the organization can use repository projects.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Default permission level members have for organization repositories:<br>\n* <code>read</code> - can pull, but not push to or administer this repository.<br>\n* <code>write</code> - can pull and push, but not administer this repository.<br>\n* <code>admin</code> - can pull, push, and administer this repository.<br>\n* <code>none</code> - no permissions granted by default.</p>",
        "enum": [
          "read",
          "write",
          "admin",
          "none"
        ],
        "default": "read",
        "name": "default_repository_permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles the ability of non-admin organization members to create repositories. Can be one of:<br>\n* <code>true</code> - all organization members can create repositories.<br>\n* <code>false</code> - only organization owners can create repositories.<br>\nDefault: <code>true</code><br>\n<strong>Note:</strong> A parameter can override this parameter. See <code>members_allowed_repository_creation_type</code> in this table for details. <strong>Note:</strong> A parameter can override this parameter. See <code>members_allowed_repository_creation_type</code> in this table for details.</p>",
        "default": true,
        "name": "members_can_create_repositories",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only organization owners can create repositories.  \nDefault: `true`  \n**Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:<br>\n* <code>true</code> - all organization members can create internal repositories.<br>\n* <code>false</code> - only organization owners can create internal repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
        "name": "members_can_create_internal_repositories",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:  \n\\* `true` - all organization members can create internal repositories.  \n\\* `false` - only organization owners can create internal repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:<br>\n* <code>true</code> - all organization members can create private repositories.<br>\n* <code>false</code> - only organization owners can create private repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
        "name": "members_can_create_private_repositories",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:  \n\\* `true` - all organization members can create private repositories.  \n\\* `false` - only organization owners can create private repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:<br>\n* <code>true</code> - all organization members can create public repositories.<br>\n* <code>false</code> - only organization owners can create public repositories.<br>\nDefault: <code>true</code>. For more information, see \"<a href=\"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization\">Restricting repository creation in your organization</a>\" in the GitHub Help documentation.</p>",
        "name": "members_can_create_public_repositories",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:  \n\\* `true` - all organization members can create public repositories.  \n\\* `false` - only organization owners can create public repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Specifies which types of repositories non-admin organization members can create. Can be one of:<br>\n* <code>all</code> - all organization members can create public and private repositories.<br>\n* <code>private</code> - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.<br>\n* <code>none</code> - only admin members can create repositories.<br>\n<strong>Note:</strong> This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in <code>members_can_create_repositories</code>. See the parameter deprecation notice in the operation description for details.</p>",
        "enum": [
          "all",
          "private",
          "none"
        ],
        "name": "members_allowed_repository_creation_type",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n\\* `none` - only admin members can create repositories.  \n**Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"http://github.blog\"",
        "name": "blog",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n  <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n  <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n  <span class=\"hljs-attr\">\"company\"</span>: <span class=\"hljs-string\">\"GitHub\"</span>,\n  <span class=\"hljs-attr\">\"blog\"</span>: <span class=\"hljs-string\">\"https://github.com/blog\"</span>,\n  <span class=\"hljs-attr\">\"location\"</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n  <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n  <span class=\"hljs-attr\">\"has_organization_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_repository_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"public_repos\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"public_gists\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"followers\"</span>: <span class=\"hljs-number\">20</span>,\n  <span class=\"hljs-attr\">\"following\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>,\n  <span class=\"hljs-attr\">\"total_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"owned_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"private_gists\"</span>: <span class=\"hljs-number\">81</span>,\n  <span class=\"hljs-attr\">\"disk_usage\"</span>: <span class=\"hljs-number\">10000</span>,\n  <span class=\"hljs-attr\">\"collaborators\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"billing_email\"</span>: <span class=\"hljs-string\">\"mona@github.com\"</span>,\n  <span class=\"hljs-attr\">\"plan\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Medium\"</span>,\n    <span class=\"hljs-attr\">\"space\"</span>: <span class=\"hljs-number\">400</span>,\n    <span class=\"hljs-attr\">\"private_repos\"</span>: <span class=\"hljs-number\">20</span>\n  },\n  <span class=\"hljs-attr\">\"default_repository_permission\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n  <span class=\"hljs-attr\">\"members_can_create_repositories\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"two_factor_requirement_enabled\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"members_allowed_repository_creation_type\"</span>: <span class=\"hljs-string\">\"all\"</span>,\n  <span class=\"hljs-attr\">\"members_can_create_pages\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"members_can_create_public_pages\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"members_can_create_private_pages\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/events', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/events'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public organization events",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-public-org-events",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-organization-events"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-public-organization-events",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/hooks', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/hooks'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organization webhooks",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-webhooks",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-webhooks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "list-organization-webhooks",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/orgs/{org}/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks \\\n  -d '{\"name\":\"name\",\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\",\"username\":\"username\",\"password\":\"password\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks \\\n  -d '{\"name\":\"name\",\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\",\"username\":\"username\",\"password\":\"password\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /orgs/{org}/hooks', {\n  org: 'org',\n  name: 'name',\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl',\n    username: 'username',\n    password: 'password'\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /orgs/{org}/hooks'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">config</span>: {\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'url'</span>,\n    <span class=\"hljs-attr\">content_type</span>: <span class=\"hljs-string\">'content_type'</span>,\n    <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">'secret'</span>,\n    <span class=\"hljs-attr\">insecure_ssl</span>: <span class=\"hljs-string\">'insecure_ssl'</span>,\n    <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-string\">'password'</span>\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create an organization webhook",
    "description": "Here's how you can create a hook that posts payloads in JSON format:",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/create-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-an-organization-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. Must be passed as \"web\".</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Must be passed as \"web\".",
                "childParamsGroups": []
              },
              "config": {
                "type": "object",
                "description": "<p><strong>Required</strong>. Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-hook-config-params\">These are defined below</a>.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                    "example": "https://example.com/webhook",
                    "format": "uri",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "example": "\"json\"",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                    "example": "\"********\"",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "example": "\"0\""
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "name": "insecure_ssl",
                    "in": "body",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "type": "string or number",
                    "childParamsGroups": []
                  },
                  "username": {
                    "type": "string",
                    "example": "\"kdaigle\"",
                    "name": "username",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  },
                  "password": {
                    "type": "string",
                    "example": "\"password\"",
                    "name": "password",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "url"
                ],
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-hook-config-params).",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                        "example": "https://example.com/webhook",
                        "format": "uri",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "example": "\"json\"",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                        "example": "\"********\"",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                        "childParamsGroups": []
                      },
                      {
                        "oneOf": [
                          {
                            "type": "string",
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "example": "\"0\""
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "name": "insecure_ssl",
                        "in": "body",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "type": "string or number",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"kdaigle\"",
                        "name": "username",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"password\"",
                        "name": "password",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
                "default": [
                  "push"
                ],
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name",
              "config"
            ]
          },
          "example": {
            "name": "web",
            "active": true,
            "events": [
              "push",
              "pull_request"
            ],
            "config": {
              "url": "http://example.com/webhook",
              "content_type": "json"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "create-an-organization-webhook",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Here's how you can create a hook that posts payloads in JSON format:</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/hooks/1\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/hooks/1/pings\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"push\"</span>,\n    <span class=\"hljs-string\">\"pull_request\"</span>\n  ],\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://example.com\"</span>,\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"json\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. Must be passed as \"web\".</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Must be passed as \"web\".",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p><strong>Required</strong>. Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-hook-config-params\">These are defined below</a>.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
            "example": "https://example.com/webhook",
            "format": "uri",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "example": "\"json\"",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
            "example": "\"********\"",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "oneOf": [
              {
                "type": "string",
                "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "example": "\"0\""
              },
              {
                "type": "number"
              }
            ],
            "name": "insecure_ssl",
            "in": "body",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "type": "string or number",
            "childParamsGroups": []
          },
          "username": {
            "type": "string",
            "example": "\"kdaigle\"",
            "name": "username",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          },
          "password": {
            "type": "string",
            "example": "\"password\"",
            "name": "password",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          }
        },
        "required": [
          "url"
        ],
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-hook-config-params).",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                "example": "https://example.com/webhook",
                "format": "uri",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "example": "\"json\"",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                "example": "\"********\"",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                "childParamsGroups": []
              },
              {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "example": "\"0\""
                  },
                  {
                    "type": "number"
                  }
                ],
                "name": "insecure_ssl",
                "in": "body",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "type": "string or number",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"kdaigle\"",
                "name": "username",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"password\"",
                "name": "password",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
        "default": [
          "push"
        ],
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/hooks/{hook_id}', {\n  org: 'org',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an organization webhook",
    "description": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook configuration for an organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization).\"",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/get-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "get-an-organization-webhook",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns a webhook configured in an organization. To get only the webhook <code>config</code> properties, see \"<a href=\"/rest/reference/orgs#get-a-webhook-configuration-for-an-organization\">Get a webhook configuration for an organization</a>.\"</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/orgs/{org}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /orgs/{org}/hooks/{hook_id}', {\n  org: 'org',\n  hook_id: 42,\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl'\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /orgs/{org}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">config</span>: {\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'url'</span>,\n    <span class=\"hljs-attr\">content_type</span>: <span class=\"hljs-string\">'content_type'</span>,\n    <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">'secret'</span>,\n    <span class=\"hljs-attr\">insecure_ssl</span>: <span class=\"hljs-string\">'insecure_ssl'</span>\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update an organization webhook",
    "description": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for an organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization).\"",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/update-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-an-organization-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-hook-config-params\">These are defined below</a>.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                    "example": "https://example.com/webhook",
                    "format": "uri",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "example": "\"json\"",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                    "example": "\"********\"",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "example": "\"0\""
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "name": "insecure_ssl",
                    "in": "body",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "type": "string or number",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "url"
                ],
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-hook-config-params).",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                        "example": "https://example.com/webhook",
                        "format": "uri",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "example": "\"json\"",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                        "example": "\"********\"",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                        "childParamsGroups": []
                      },
                      {
                        "oneOf": [
                          {
                            "type": "string",
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "example": "\"0\""
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "name": "insecure_ssl",
                        "in": "body",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "type": "string or number",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
                "default": [
                  "push"
                ],
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              },
              "name": {
                "type": "string",
                "example": "\"web\"",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "active": true,
            "events": [
              "pull_request"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "update-an-organization-webhook",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Updates a webhook configured in an organization. When you update a webhook, the <code>secret</code> will be overwritten. If you previously had a <code>secret</code> set, you must provide the same <code>secret</code> or set a new <code>secret</code> or the secret will be removed. If you are only updating individual webhook <code>config</code> properties, use \"<a href=\"/rest/reference/orgs#update-a-webhook-configuration-for-an-organization\">Update a webhook configuration for an organization</a>.\"</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/hooks/1\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/hooks/1/pings\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"pull_request\"</span>\n  ],\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"http://example.com\"</span>,\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"json\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T20:39:23Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-09-06T17:26:27Z\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "object",
        "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-hook-config-params\">These are defined below</a>.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
            "example": "https://example.com/webhook",
            "format": "uri",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "example": "\"json\"",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
            "example": "\"********\"",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "oneOf": [
              {
                "type": "string",
                "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "example": "\"0\""
              },
              {
                "type": "number"
              }
            ],
            "name": "insecure_ssl",
            "in": "body",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "type": "string or number",
            "childParamsGroups": []
          }
        },
        "required": [
          "url"
        ],
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-hook-config-params).",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                "example": "https://example.com/webhook",
                "format": "uri",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "example": "\"json\"",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                "example": "\"********\"",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                "childParamsGroups": []
              },
              {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "example": "\"0\""
                  },
                  {
                    "type": "number"
                  }
                ],
                "name": "insecure_ssl",
                "in": "body",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "type": "string or number",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
        "default": [
          "push"
        ],
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"web\"",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/hooks/{hook_id}', {\n  org: 'org',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete an organization webhook",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/delete-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#delete-an-organization-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "delete-an-organization-webhook",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/orgs/{org}/hooks/{hook_id}/pings",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42/pings",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/hooks/42/pings</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /orgs/{org}/hooks/{hook_id}/pings', {\n  org: 'org',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /orgs/{org}/hooks/{hook_id}/pings'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Ping an organization webhook",
    "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the hook.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/ping-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#ping-an-organization-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "webhooks"
    },
    "slug": "ping-an-organization-webhook",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This will trigger a <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event\">ping event</a> to be sent to the hook.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/installation",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/installation",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/installation</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/installation', {\n  org: 'org',\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/installation'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get an organization installation for the authenticated app",
    "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-org-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-an-organization-installation-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Enables an authenticated GitHub App to find the organization's installation information.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ],
          "default": "assigned"
        },
        "descriptionHTML": "<p>Indicates which sorts of issues to return. Can be one of:<br>\n* <code>assigned</code>: Issues assigned to you<br>\n* <code>created</code>: Issues created by you<br>\n* <code>mentioned</code>: Issues mentioning you<br>\n* <code>subscribed</code>: Issues you're subscribed to updates for<br>\n* <code>all</code>: All issues the authenticated user can see, regardless of participation or creation</p>"
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the issues to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>A list of comma separated label names. Example: <code>bug,ui,@high</code></p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>What to sort results by. Can be either <code>created</code>, <code>updated</code>, <code>comments</code>.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/issues', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/issues'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organization issues assigned to the authenticated user",
    "description": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-for-org",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues"
    },
    "slug": "list-organization-issues-assigned-to-the-authenticated-user",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List issues in an organization assigned to the authenticated user.</p>\n<p><strong>Note</strong>: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe <code>pull_request</code> key. Be aware that the <code>id</code> of a pull request returned from \"Issues\" endpoints will be an <em>issue id</em>. To find out the pull\nrequest id, use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a>\" endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/members",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "filter",
        "description": "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filter members returned in the list. Can be one of:<br>\n* <code>2fa_disabled</code> - Members without <a href=\"https://github.com/blog/1614-two-factor-authentication\">two-factor authentication</a> enabled. Available for organization owners.<br>\n* <code>all</code> - All members the authenticated user can see.</p>"
      },
      {
        "name": "role",
        "description": "Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "admin",
            "member"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filter members returned by their role. Can be one of:<br>\n* <code>all</code> - All members of the organization, regardless of role.<br>\n* <code>admin</code> - Organization owners.<br>\n* <code>member</code> - Non-owner organization members.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/members', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/members'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organization members",
    "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-members",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-members"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "list-organization-members",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Response if requester is not an organization member"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/members/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/members/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check organization membership for a user",
    "description": "Check if a user is, publicly or privately, a member of the organization.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/check-membership-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#check-organization-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "check-organization-membership-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if requester is an organization member and user is a member"
      },
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Response if requester is not an organization member"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if requester is an organization member and user is not a member"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Check if a user is, publicly or privately, a member of the organization.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/members/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/members/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove an organization member",
    "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/remove-member",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-an-organization-member"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "remove-an-organization-member",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/memberships/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get organization membership for a user",
    "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member. The `state` parameter in the response can be used to identify the user's membership status.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/get-membership-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-organization-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "get-organization-membership-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>In order to get a user's membership with an organization, the authenticated user must be an organization member. The <code>state</code> parameter in the response can be used to identify the user's membership status.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/orgs/{org}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME \\\n  -d '{\"role\":\"role\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME \\\n  -d '{\"role\":\"role\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /orgs/{org}/memberships/{username}', {\n  org: 'org',\n  username: 'username',\n  role: 'role'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /orgs/{org}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">role</span>: <span class=\"hljs-string\">'role'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set organization membership for a user",
    "description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/set-membership-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#set-organization-membership-for-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "<p>The role to give the user in the organization. Can be one of:<br>\n* <code>admin</code> - The user will become an owner of the organization.<br>\n* <code>member</code> - The user will become a non-owner member of the organization.</p>",
                "enum": [
                  "admin",
                  "member"
                ],
                "default": "member",
                "name": "role",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "set-organization-membership-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Only authenticated organization owners can add a member to the organization or update the member's role.</p>\n<ul>\n<li>If the authenticated user is <em>adding</em> a member to the organization, the invited user will receive an email inviting them to the organization. The user's <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-organization-membership-for-a-user\">membership status</a> will be <code>pending</code> until they accept the invitation.</li>\n<li>Authenticated users can <em>update</em> a user's membership by passing the <code>role</code> parameter. If the authenticated user changes a member's role to <code>admin</code>, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to <code>member</code>, no email will be sent.</li>\n</ul>\n<p><strong>Rate limits</strong></p>\n<p>To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The role to give the user in the organization. Can be one of:<br>\n* <code>admin</code> - The user will become an owner of the organization.<br>\n* <code>member</code> - The user will become a non-owner member of the organization.</p>",
        "enum": [
          "admin",
          "member"
        ],
        "default": "member",
        "name": "role",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response if user has an active admin membership with organization",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/memberships/defunkt\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"active\"</span>,\n  <span class=\"hljs-attr\">\"role\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n  <span class=\"hljs-attr\">\"organization_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat\"</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>\n  },\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/memberships/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/memberships/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove organization membership for a user",
    "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/remove-membership-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-organization-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "remove-organization-membership-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>In order to remove a user's membership with an organization, the authenticated user must be an organization owner.</p>\n<p>If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/outside_collaborators",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "filter",
        "description": "Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filter the list of outside collaborators. Can be one of:<br>\n* <code>2fa_disabled</code>: Outside collaborators without <a href=\"https://github.com/blog/1614-two-factor-authentication\">two-factor authentication</a> enabled.<br>\n* <code>all</code>: All outside collaborators.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/outside_collaborators', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/outside_collaborators'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List outside collaborators for an organization",
    "description": "List all users who are outside collaborators of an organization.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-outside-collaborators",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-outside-collaborators-for-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "outside-collaborators"
    },
    "slug": "list-outside-collaborators-for-an-organization",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "outside-collaborators",
    "subcategoryLabel": "Outside collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all users who are outside collaborators of an organization.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/orgs/{org}/outside_collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /orgs/{org}/outside_collaborators/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /orgs/{org}/outside_collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Convert an organization member to outside collaborator",
    "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/convert-member-to-outside-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "outside-collaborators"
    },
    "slug": "convert-an-organization-member-to-outside-collaborator",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "outside-collaborators",
    "subcategoryLabel": "Outside collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "User is getting converted asynchronously"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "User was converted"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden if user is the last owner of the organization or not a member of the organization"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"<a href=\"https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/\">Converting an organization member to an outside collaborator</a>\".</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/outside_collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/outside_collaborators/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/outside_collaborators/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/outside_collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove outside collaborator from an organization",
    "description": "Removing a user from this list will remove them from all the organization's repositories.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/remove-outside-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-outside-collaborator-from-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "outside-collaborators"
    },
    "slug": "remove-outside-collaborator-from-an-organization",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "outside-collaborators",
    "subcategoryLabel": "Outside collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Unprocessable Entity if user is a member of the organization"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removing a user from this list will remove them from all the organization's repositories.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/pre-receive-hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "sort",
        "description": "The sort order for the response collection.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "name"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>The sort order for the response collection.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/pre-receive-hooks', {\n  org: 'org',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/pre-receive-hooks'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List pre-receive hooks for an organization",
    "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.",
    "operationId": "enterprise-admin/list-pre-receive-hooks-for-org",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "org-pre-receive-hooks"
    },
    "slug": "list-pre-receive-hooks-for-an-organization",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "org-pre-receive-hooks",
    "subcategoryLabel": "Org pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}', {\n  org: 'org',\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a pre-receive hook for an organization",
    "description": "",
    "operationId": "enterprise-admin/get-pre-receive-hook-for-org",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "org-pre-receive-hooks"
    },
    "slug": "get-a-pre-receive-hook-for-an-organization",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "org-pre-receive-hooks",
    "subcategoryLabel": "Org pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42 \\\n  -d '{\"enforcement\":\"enforcement\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42 \\\n  -d '{\"enforcement\":\"enforcement\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}', {\n  org: 'org',\n  pre_receive_hook_id: 42,\n  enforcement: 'enforcement',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">enforcement</span>: <span class=\"hljs-string\">'enforcement'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update pre-receive hook enforcement for an organization",
    "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`",
    "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-org",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "enforcement": {
                "description": "<p>The state of enforcement for the hook on this repository.</p>",
                "type": "string",
                "name": "enforcement",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of enforcement for the hook on this repository.",
                "childParamsGroups": []
              },
              "allow_downstream_configuration": {
                "description": "<p>Whether repositories can override enforcement.</p>",
                "type": "boolean",
                "name": "allow_downstream_configuration",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether repositories can override enforcement.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "enforcement": "enabled",
            "allow_downstream_configuration": false
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "org-pre-receive-hooks"
    },
    "slug": "update-pre-receive-hook-enforcement-for-an-organization",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "org-pre-receive-hooks",
    "subcategoryLabel": "Org pre receive hooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>For pre-receive hooks which are allowed to be configured at the org level, you can set <code>enforcement</code> and <code>allow_downstream_configuration</code></p>",
    "bodyParameters": [
      {
        "description": "<p>The state of enforcement for the hook on this repository.</p>",
        "type": "string",
        "name": "enforcement",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of enforcement for the hook on this repository.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether repositories can override enforcement.</p>",
        "type": "boolean",
        "name": "allow_downstream_configuration",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether repositories can override enforcement.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Check Commits\"</span>,\n  <span class=\"hljs-attr\">\"enforcement\"</span>: <span class=\"hljs-string\">\"enabled\"</span>,\n  <span class=\"hljs-attr\">\"configuration_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42\"</span>,\n  <span class=\"hljs-attr\">\"allow_downstream_configuration\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}', {\n  org: 'org',\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Remove pre-receive hook enforcement for an organization",
    "description": "Removes any overrides for this hook at the org level for this org.",
    "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-org",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "org-pre-receive-hooks"
    },
    "slug": "remove-pre-receive-hook-enforcement-for-an-organization",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "org-pre-receive-hooks",
    "subcategoryLabel": "Org pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes any overrides for this hook at the org level for this org.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the projects to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/projects",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/projects</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/projects', {\n  org: 'org',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/projects'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List organization projects",
    "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-for-org",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-organization-projects"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "list-organization-projects",
    "category": "projects",
    "categoryLabel": "Projects",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the projects in an organization. Returns a <code>404 Not Found</code> status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/orgs/{org}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/projects \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/projects \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /orgs/{org}/projects', {\n  org: 'org',\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /orgs/{org}/projects'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create an organization project",
    "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/create-for-org",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-an-organization-project"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the project.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the project.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The description of the project.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The description of the project.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "name": "Organization Roadmap",
            "body": "High-level roadmap for the upcoming year."
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "create-an-organization-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates an organization project board. Returns a <code>404 Not Found</code> status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the project.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the project.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The description of the project.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The description of the project.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"owner_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002605\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/api-playground/projects/1\"</span>,\n  <span class=\"hljs-attr\">\"columns_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002605/columns\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002605</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UHJvamVjdDEwMDI2MDU=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Organization Roadmap\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"High-level roadmap for the upcoming year.\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-11T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-04T18:58:10Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/public_members",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/public_members', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/public_members'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public organization members",
    "description": "Members of an organization can choose to have their membership publicized or not.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-public-members",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-public-organization-members"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "list-public-organization-members",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Members of an organization can choose to have their membership publicized or not.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/public_members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/public_members/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/public_members/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check public organization membership for a user",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/check-public-membership-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#check-public-organization-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "check-public-organization-membership-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if user is a public member"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if user is not a public member"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/orgs/{org}/public_members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /orgs/{org}/public_members/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /orgs/{org}/public_members/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set public organization membership for the authenticated user",
    "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/set-public-membership-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "set-public-organization-membership-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The user can publicize their own membership. (A user cannot publicize the membership for another user.)</p>\n<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/orgs/{org}/public_members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/public_members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /orgs/{org}/public_members/{username}', {\n  org: 'org',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /orgs/{org}/public_members/{username}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove public organization membership for the authenticated user",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/remove-public-membership-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "remove-public-organization-membership-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "type",
        "description": "Specifies the types of repositories you want returned. Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`, `internal`. Note: For GitHub AE, can be one of `all`, `private`, `forks`, `sources`, `member`, `internal`. Default: `all`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also be `internal`. However, the `internal` value is not yet supported when a GitHub App calls this API with an installation access token.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member",
            "internal"
          ]
        },
        "descriptionHTML": "<p>Specifies the types of repositories you want returned. Can be one of <code>all</code>, <code>public</code>, <code>private</code>, <code>forks</code>, <code>sources</code>, <code>member</code>, <code>internal</code>. Note: For GitHub AE, can be one of <code>all</code>, <code>private</code>, <code>forks</code>, <code>sources</code>, <code>member</code>, <code>internal</code>. Default: <code>all</code>. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, <code>type</code> can also be <code>internal</code>. However, the <code>internal</code> value is not yet supported when a GitHub App calls this API with an installation access token.</p>"
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>Can be one of <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>.</p>"
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: when using `full_name`: `asc`, otherwise `desc`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Can be one of <code>asc</code> or <code>desc</code>. Default: when using <code>full_name</code>: <code>asc</code>, otherwise <code>desc</code></p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/repos",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/repos</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/repos', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/repos'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organization repositories",
    "description": "Lists repositories for the specified organization.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-for-org",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-organization-repositories"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "baptiste",
          "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```",
          "html": "<p>The <code>is_template</code> and <code>template_repository</code> keys are currently available for developer to preview. See <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template\">Create a repository using a template</a> to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.baptiste-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-organization-repositories",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories for the specified organization.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/orgs/{org}/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/repos \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/repos \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /orgs/{org}/repos', {\n  org: 'org',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /orgs/{org}/repos'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create an organization repository",
    "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-in-org",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-an-organization-repository"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the repository.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the repository.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the repository.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the repository.",
                "childParamsGroups": []
              },
              "homepage": {
                "type": "string",
                "description": "<p>A URL with more information about the repository.</p>",
                "name": "homepage",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL with more information about the repository.",
                "childParamsGroups": []
              },
              "private": {
                "type": "boolean",
                "description": "<p>Whether the repository is private.</p>",
                "default": false,
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether the repository is private.",
                "childParamsGroups": []
              },
              "visibility": {
                "type": "string",
                "description": "<p>Can be <code>public</code> or <code>private</code>. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, <code>visibility</code> can also be <code>internal</code>. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"<a href=\"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories\">Creating an internal repository</a>\" in the GitHub Help documentation.<br>\nThe <code>visibility</code> parameter overrides the <code>private</code> parameter when you use both parameters with the <code>nebula-preview</code> preview header.</p>",
                "enum": [
                  "public",
                  "private",
                  "visibility",
                  "internal"
                ],
                "name": "visibility",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\" in the GitHub Help documentation.  \nThe `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.",
                "childParamsGroups": []
              },
              "has_issues": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable issues for this repository or <code>false</code> to disable them.</p>",
                "default": true,
                "name": "has_issues",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable issues for this repository or `false` to disable them.",
                "childParamsGroups": []
              },
              "has_projects": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable projects for this repository or <code>false</code> to disable them. <strong>Note:</strong> If you're creating a repository in an organization that has disabled repository projects, the default is <code>false</code>, and if you pass <code>true</code>, the API returns an error.</p>",
                "default": true,
                "name": "has_projects",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                "childParamsGroups": []
              },
              "has_wiki": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable the wiki for this repository or <code>false</code> to disable it.</p>",
                "default": true,
                "name": "has_wiki",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                "childParamsGroups": []
              },
              "is_template": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to make this repo available as a template repository or <code>false</code> to prevent it.</p>",
                "default": false,
                "name": "is_template",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                "childParamsGroups": []
              },
              "team_id": {
                "type": "integer",
                "description": "<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>",
                "name": "team_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
                "childParamsGroups": []
              },
              "auto_init": {
                "type": "boolean",
                "description": "<p>Pass <code>true</code> to create an initial commit with empty README.</p>",
                "default": false,
                "name": "auto_init",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Pass `true` to create an initial commit with empty README.",
                "childParamsGroups": []
              },
              "gitignore_template": {
                "type": "string",
                "description": "<p>Desired language or platform <a href=\"https://github.com/github/gitignore\">.gitignore template</a> to apply. Use the name of the template without the extension. For example, \"Haskell\".</p>",
                "name": "gitignore_template",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
                "childParamsGroups": []
              },
              "license_template": {
                "type": "string",
                "description": "<p>Choose an <a href=\"https://choosealicense.com/\">open source license template</a> that best suits your needs, and then use the <a href=\"https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type\">license keyword</a> as the <code>license_template</code> string. For example, \"mit\" or \"mpl-2.0\".</p>",
                "name": "license_template",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
                "childParamsGroups": []
              },
              "allow_squash_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow squash-merging pull requests, or <code>false</code> to prevent squash-merging.</p>",
                "default": true,
                "name": "allow_squash_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                "childParamsGroups": []
              },
              "allow_merge_commit": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow merging pull requests with a merge commit, or <code>false</code> to prevent merging pull requests with merge commits.</p>",
                "default": true,
                "name": "allow_merge_commit",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                "childParamsGroups": []
              },
              "allow_rebase_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow rebase-merging pull requests, or <code>false</code> to prevent rebase-merging.</p>",
                "default": true,
                "name": "allow_rebase_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                "childParamsGroups": []
              },
              "delete_branch_on_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow automatically deleting head branches when pull requests are merged, or <code>false</code> to prevent automatic deletion.</p>",
                "default": false,
                "name": "delete_branch_on_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "name": "Hello-World",
            "description": "This is your first repository",
            "homepage": "https://github.com",
            "private": false,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "baptiste",
          "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```",
          "html": "<p>The <code>is_template</code> and <code>template_repository</code> keys are currently available for developer to preview. See <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template\">Create a repository using a template</a> to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.baptiste-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "create-an-organization-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new repository in the specified organization. The authenticated user must be a member of the organization.</p>\n<p><strong>OAuth scope requirements</strong></p>\n<p>When using <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">OAuth</a>, authorizations must include:</p>\n<ul>\n<li><code>public_repo</code> scope or <code>repo</code> scope to create a public repository. Note: For GitHub AE, use <code>repo</code> scope to create an internal repository.</li>\n<li><code>repo</code> scope to create a private repository</li>\n</ul>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the repository.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the repository.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A URL with more information about the repository.</p>",
        "name": "homepage",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL with more information about the repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Whether the repository is private.</p>",
        "default": false,
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether the repository is private.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Can be <code>public</code> or <code>private</code>. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, <code>visibility</code> can also be <code>internal</code>. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"<a href=\"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories\">Creating an internal repository</a>\" in the GitHub Help documentation.<br>\nThe <code>visibility</code> parameter overrides the <code>private</code> parameter when you use both parameters with the <code>nebula-preview</code> preview header.</p>",
        "enum": [
          "public",
          "private",
          "visibility",
          "internal"
        ],
        "name": "visibility",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\" in the GitHub Help documentation.  \nThe `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable issues for this repository or <code>false</code> to disable them.</p>",
        "default": true,
        "name": "has_issues",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable issues for this repository or `false` to disable them.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable projects for this repository or <code>false</code> to disable them. <strong>Note:</strong> If you're creating a repository in an organization that has disabled repository projects, the default is <code>false</code>, and if you pass <code>true</code>, the API returns an error.</p>",
        "default": true,
        "name": "has_projects",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable the wiki for this repository or <code>false</code> to disable it.</p>",
        "default": true,
        "name": "has_wiki",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to make this repo available as a template repository or <code>false</code> to prevent it.</p>",
        "default": false,
        "name": "is_template",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>",
        "name": "team_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Pass <code>true</code> to create an initial commit with empty README.</p>",
        "default": false,
        "name": "auto_init",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Pass `true` to create an initial commit with empty README.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Desired language or platform <a href=\"https://github.com/github/gitignore\">.gitignore template</a> to apply. Use the name of the template without the extension. For example, \"Haskell\".</p>",
        "name": "gitignore_template",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Choose an <a href=\"https://choosealicense.com/\">open source license template</a> that best suits your needs, and then use the <a href=\"https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type\">license keyword</a> as the <code>license_template</code> string. For example, \"mit\" or \"mpl-2.0\".</p>",
        "name": "license_template",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow squash-merging pull requests, or <code>false</code> to prevent squash-merging.</p>",
        "default": true,
        "name": "allow_squash_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow merging pull requests with a merge commit, or <code>false</code> to prevent merging pull requests with merge commits.</p>",
        "default": true,
        "name": "allow_merge_commit",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow rebase-merging pull requests, or <code>false</code> to prevent rebase-merging.</p>",
        "default": true,
        "name": "allow_rebase_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow automatically deleting head branches when pull requests are merged, or <code>false</code> to prevent automatic deletion.</p>",
        "default": false,
        "name": "delete_branch_on_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n  },\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/teams', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/teams'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List teams",
    "description": "Lists all teams in an organization that are visible to the authenticated user.",
    "tags": [
      "teams"
    ],
    "operationId": "teams/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-teams"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "list-teams",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all teams in an organization that are visible to the authenticated user.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/orgs/{org}/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /orgs/{org}/teams', {\n  org: 'org',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /orgs/{org}/teams'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a team",
    "description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\".",
    "tags": [
      "teams"
    ],
    "operationId": "teams/create",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-team"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the team.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the team.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>The description of the team.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The description of the team.",
                "childParamsGroups": []
              },
              "maintainers": {
                "type": "array of strings",
                "description": "<p>List GitHub IDs for organization members who will become team maintainers.</p>",
                "items": {
                  "type": "string"
                },
                "name": "maintainers",
                "in": "body",
                "rawType": "array",
                "rawDescription": "List GitHub IDs for organization members who will become team maintainers.",
                "childParamsGroups": []
              },
              "repo_names": {
                "type": "array of strings",
                "description": "<p>The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.</p>",
                "items": {
                  "type": "string"
                },
                "name": "repo_names",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
                "childParamsGroups": []
              },
              "privacy": {
                "type": "string",
                "description": "<p>The level of privacy this team should have. The options are:<br>\n<strong>For a non-nested team:</strong><br>\n* <code>secret</code> - only visible to organization owners and members of this team.<br>\n* <code>closed</code> - visible to all members of this organization.<br>\nDefault: <code>secret</code><br>\n<strong>For a parent or child team:</strong><br>\n* <code>closed</code> - visible to all members of this organization.<br>\nDefault for child team: <code>closed</code></p>",
                "enum": [
                  "secret",
                  "closed"
                ],
                "name": "privacy",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`",
                "childParamsGroups": []
              },
              "permission": {
                "type": "string",
                "description": "<p><strong>Deprecated</strong>. The permission that new repositories will be added to the team with when none is specified. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer newly-added repositories.<br>\n* <code>push</code> - team members can pull and push, but not administer newly-added repositories.<br>\n* <code>admin</code> - team members can pull, push and administer newly-added repositories.</p>",
                "enum": [
                  "pull",
                  "push",
                  "admin"
                ],
                "default": "pull",
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
                "childParamsGroups": []
              },
              "parent_team_id": {
                "type": "integer",
                "description": "<p>The ID of a team to set as the parent team.</p>",
                "name": "parent_team_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The ID of a team to set as the parent team.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "name": "Justice League",
            "description": "A great team",
            "permission": "admin",
            "privacy": "closed"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "create-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>To create a team, the authenticated user must be a member or owner of <code>{org}</code>. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"<a href=\"https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization\">Setting team creation permissions</a>.\"</p>\n<p>When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of <code>maintainers</code>. For more information, see \"<a href=\"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams\">About teams</a>\".</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the team.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the team.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The description of the team.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The description of the team.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>List GitHub IDs for organization members who will become team maintainers.</p>",
        "items": {
          "type": "string"
        },
        "name": "maintainers",
        "in": "body",
        "rawType": "array",
        "rawDescription": "List GitHub IDs for organization members who will become team maintainers.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.</p>",
        "items": {
          "type": "string"
        },
        "name": "repo_names",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The level of privacy this team should have. The options are:<br>\n<strong>For a non-nested team:</strong><br>\n* <code>secret</code> - only visible to organization owners and members of this team.<br>\n* <code>closed</code> - visible to all members of this organization.<br>\nDefault: <code>secret</code><br>\n<strong>For a parent or child team:</strong><br>\n* <code>closed</code> - visible to all members of this organization.<br>\nDefault for child team: <code>closed</code></p>",
        "enum": [
          "secret",
          "closed"
        ],
        "name": "privacy",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Deprecated</strong>. The permission that new repositories will be added to the team with when none is specified. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer newly-added repositories.<br>\n* <code>push</code> - team members can pull and push, but not administer newly-added repositories.<br>\n* <code>admin</code> - team members can pull, push and administer newly-added repositories.</p>",
        "enum": [
          "pull",
          "push",
          "admin"
        ],
        "default": "pull",
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p>The ID of a team to set as the parent team.</p>",
        "name": "parent_team_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The ID of a team to set as the parent team.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n  <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n  <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n  <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n  <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n  <span class=\"hljs-attr\">\"members_count\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"repos_count\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-14T16:53:42Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-08-17T12:37:15Z\"</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"company\"</span>: <span class=\"hljs-string\">\"GitHub\"</span>,\n    <span class=\"hljs-attr\">\"blog\"</span>: <span class=\"hljs-string\">\"https://github.com/blog\"</span>,\n    <span class=\"hljs-attr\">\"location\"</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n    <span class=\"hljs-attr\">\"has_organization_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_repository_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"public_repos\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"public_gists\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"followers\"</span>: <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-attr\">\"following\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-08-17T12:37:15Z\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>\n  },\n  <span class=\"hljs-attr\">\"ldap_dn\"</span>: <span class=\"hljs-string\">\"uid=asdf,ou=users,dc=github,dc=com\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/orgs/{org}/teams/{team_slug}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>team_slug parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams/TEAM_SLUG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/orgs/ORG/teams/TEAM_SLUG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /orgs/{org}/teams/{team_slug}', {\n  org: 'org',\n  team_slug: 'team_slug'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /orgs/{org}/teams/{team_slug}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">team_slug</span>: <span class=\"hljs-string\">'team_slug'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a team by name",
    "description": "Gets a team using the team's `slug`. GitHub Enterprise Server generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.",
    "tags": [
      "teams"
    ],
    "operationId": "teams/get-by-name",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-team-by-name"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "get-a-team-by-name",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets a team using the team's <code>slug</code>. GitHub Enterprise Server generates the <code>slug</code> from the team <code>name</code>.</p>\n<p><strong>Note:</strong> You can also specify a team by <code>org_id</code> and <code>team_id</code> using the route <code>GET /organizations/{org_id}/team/{team_id}</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/projects/columns/cards/{card_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>card_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/columns/cards/{card_id}', {\n  card_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/columns/cards/{card_id}'</span>, {\n  <span class=\"hljs-attr\">card_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a project card",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/get-card",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project-card"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "get-a-project-card",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/projects/columns/cards/{card_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>card_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42 \\\n  -d '{\"note\":\"note\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42 \\\n  -d '{\"note\":\"note\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /projects/columns/cards/{card_id}', {\n  card_id: 42,\n  note: 'note',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /projects/columns/cards/{card_id}'</span>, {\n  <span class=\"hljs-attr\">card_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">note</span>: <span class=\"hljs-string\">'note'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update an existing project card",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/update-card",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project-card"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "note": {
                "description": "<p>The project card's note</p>",
                "example": "Update all gems",
                "type": "string or nullable",
                "nullable": true,
                "name": "note",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The project card's note",
                "childParamsGroups": []
              },
              "archived": {
                "description": "<p>Whether or not the card is archived</p>",
                "example": false,
                "type": "boolean",
                "name": "archived",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether or not the card is archived",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "update-an-existing-project-card",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p>The project card's note</p>",
        "example": "Update all gems",
        "type": "string or nullable",
        "nullable": true,
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The project card's note",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether or not the card is archived</p>",
        "example": false,
        "type": "boolean",
        "name": "archived",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether or not the card is archived",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/cards/1478\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1478</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOlByb2plY3RDYXJkMTQ3OA==\"</span>,\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"Add payload for delete Project column\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:21:06Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:20:22Z\"</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"column_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367\"</span>,\n  <span class=\"hljs-attr\">\"content_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/api-playground/projects-test/issues/3\"</span>,\n  <span class=\"hljs-attr\">\"project_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/120\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/projects/columns/cards/{card_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>card_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /projects/columns/cards/{card_id}', {\n  card_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /projects/columns/cards/{card_id}'</span>, {\n  <span class=\"hljs-attr\">card_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a project card",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/delete-card",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project-card"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "delete-a-project-card",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/projects/columns/cards/{card_id}/moves",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>card_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42/moves \\\n  -d '{\"position\":\"position\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/cards/42/moves \\\n  -d '{\"position\":\"position\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /projects/columns/cards/{card_id}/moves', {\n  card_id: 42,\n  position: 'position',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /projects/columns/cards/{card_id}/moves'</span>, {\n  <span class=\"hljs-attr\">card_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">position</span>: <span class=\"hljs-string\">'position'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Move a project card",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/move-card",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#move-a-project-card"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "position": {
                "description": "<p><strong>Required</strong>. The position of the card in a column. Can be one of: <code>top</code>, <code>bottom</code>, or <code>after:&#x3C;card_id></code> to place after the specified card.</p>",
                "example": "bottom",
                "type": "string",
                "pattern": "^(?:top|bottom|after:\\d+)$",
                "name": "position",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.",
                "childParamsGroups": []
              },
              "column_id": {
                "description": "<p>The unique identifier of the column the card should be moved to</p>",
                "example": 42,
                "type": "integer",
                "name": "column_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The unique identifier of the column the card should be moved to",
                "childParamsGroups": []
              }
            },
            "required": [
              "position"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "move-a-project-card",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Response"
      }
    ],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The position of the card in a column. Can be one of: <code>top</code>, <code>bottom</code>, or <code>after:&#x3C;card_id></code> to place after the specified card.</p>",
        "example": "bottom",
        "type": "string",
        "pattern": "^(?:top|bottom|after:\\d+)$",
        "name": "position",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The unique identifier of the column the card should be moved to</p>",
        "example": 42,
        "type": "integer",
        "name": "column_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The unique identifier of the column the card should be moved to",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/projects/columns/{column_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/columns/{column_id}', {\n  column_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/columns/{column_id}'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a project column",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/get-column",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project-column"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "get-a-project-column",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/projects/columns/{column_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /projects/columns/{column_id}', {\n  column_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /projects/columns/{column_id}'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update an existing project column",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/update-column",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project-column"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "name": {
                "description": "<p><strong>Required</strong>. Name of the project column</p>",
                "example": "Remaining tasks",
                "type": "string",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name of the project column",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "update-an-existing-project-column",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. Name of the project column</p>",
        "example": "Remaining tasks",
        "type": "string",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name of the project column",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367\"</span>,\n  <span class=\"hljs-attr\">\"project_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/120\"</span>,\n  <span class=\"hljs-attr\">\"cards_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367/cards\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">367</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEzOlByb2plY3RDb2x1bW4zNjc=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"To Do\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:18:44Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:22:28Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/projects/columns/{column_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /projects/columns/{column_id}', {\n  column_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /projects/columns/{column_id}'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a project column",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/delete-column",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project-column"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "delete-a-project-column",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/projects/columns/{column_id}/cards",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      },
      {
        "name": "archived_state",
        "description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "archived",
            "not_archived"
          ],
          "default": "not_archived"
        },
        "descriptionHTML": "<p>Filters the project cards that are returned by the card's state. Can be one of <code>all</code>,<code>archived</code>, or <code>not_archived</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/cards",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/cards</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/columns/{column_id}/cards', {\n  column_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/columns/{column_id}/cards'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List project cards",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-cards",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-cards"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "list-project-cards",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/projects/columns/{column_id}/cards",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/cards",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/cards</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /projects/columns/{column_id}/cards', {\n  column_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /projects/columns/{column_id}/cards'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a project card",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/create-card",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-project-card"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "note": {
                    "description": "<p><strong>Required</strong>. The project card's note</p>",
                    "example": "Update all gems",
                    "type": "string or nullable",
                    "nullable": true,
                    "name": "note",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The project card's note",
                    "childParamsGroups": []
                  },
                  "content_id": {
                    "description": "<p><strong>Required</strong>. The unique identifier of the content associated with the card</p>",
                    "example": 42,
                    "type": "integer",
                    "name": "content_id",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The unique identifier of the content associated with the card",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "description": "<p><strong>Required</strong>. The piece of content associated with the card</p>",
                    "example": "PullRequest",
                    "type": "string",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The piece of content associated with the card",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "note"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "content_id": {
                    "description": "<p><strong>Required</strong>. The unique identifier of the content associated with the card</p>",
                    "example": 42,
                    "type": "integer",
                    "name": "content_id",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The unique identifier of the content associated with the card",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "description": "<p><strong>Required</strong>. The piece of content associated with the card</p>",
                    "example": "PullRequest",
                    "type": "string",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The piece of content associated with the card",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "content_id",
                  "content_type"
                ]
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "cards"
    },
    "slug": "create-a-project-card",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "cards",
    "subcategoryLabel": "Cards",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The project card's note</p>",
        "example": "Update all gems",
        "type": "string or nullable",
        "nullable": true,
        "name": "note",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The project card's note",
        "childParamsGroups": []
      },
      {
        "description": "<p><strong>Required</strong>. The unique identifier of the content associated with the card</p>",
        "example": 42,
        "type": "integer",
        "name": "content_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The unique identifier of the content associated with the card",
        "childParamsGroups": []
      },
      {
        "description": "<p><strong>Required</strong>. The piece of content associated with the card</p>",
        "example": "PullRequest",
        "type": "string",
        "name": "content_type",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The piece of content associated with the card",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/cards/1478\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1478</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOlByb2plY3RDYXJkMTQ3OA==\"</span>,\n  <span class=\"hljs-attr\">\"note\"</span>: <span class=\"hljs-string\">\"Add payload for delete Project column\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:21:06Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:20:22Z\"</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"column_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367\"</span>,\n  <span class=\"hljs-attr\">\"content_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/api-playground/projects-test/issues/3\"</span>,\n  <span class=\"hljs-attr\">\"project_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/120\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Response"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/projects/columns/{column_id}/moves",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>column_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/moves \\\n  -d '{\"position\":\"position\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/columns/42/moves \\\n  -d '{\"position\":\"position\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /projects/columns/{column_id}/moves', {\n  column_id: 42,\n  position: 'position',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /projects/columns/{column_id}/moves'</span>, {\n  <span class=\"hljs-attr\">column_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">position</span>: <span class=\"hljs-string\">'position'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Move a project column",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/move-column",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#move-a-project-column"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "position": {
                "description": "<p><strong>Required</strong>. The position of the column in a project. Can be one of: <code>first</code>, <code>last</code>, or <code>after:&#x3C;column_id></code> to place after the specified column.</p>",
                "example": "last",
                "type": "string",
                "pattern": "^(?:first|last|after:\\d+)$",
                "name": "position",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.",
                "childParamsGroups": []
              }
            },
            "required": [
              "position"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "move-a-project-column",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The position of the column in a project. Can be one of: <code>first</code>, <code>last</code>, or <code>after:&#x3C;column_id></code> to place after the specified column.</p>",
        "example": "last",
        "type": "string",
        "pattern": "^(?:first|last|after:\\d+)$",
        "name": "position",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/{project_id}', {\n  project_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a project",
    "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "get-a-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets a project by its <code>id</code>. Returns a <code>404 Not Found</code> status if projects are disabled. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /projects/{project_id}', {\n  project_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a project",
    "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "operationId": "projects/update",
    "tags": [
      "projects"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "name": {
                "description": "<p>Name of the project</p>",
                "example": "Week One Sprint",
                "type": "string",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name of the project",
                "childParamsGroups": []
              },
              "body": {
                "description": "<p>Body of the project</p>",
                "example": "This project represents the sprint of the first week in January",
                "type": "string or nullable",
                "nullable": true,
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Body of the project",
                "childParamsGroups": []
              },
              "state": {
                "description": "<p>State of the project; either 'open' or 'closed'</p>",
                "example": "open",
                "type": "string",
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "State of the project; either 'open' or 'closed'",
                "childParamsGroups": []
              },
              "organization_permission": {
                "description": "<p>The baseline permission that all organization members have on this project</p>",
                "type": "string",
                "enum": [
                  "read",
                  "write",
                  "admin",
                  "none"
                ],
                "name": "organization_permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The baseline permission that all organization members have on this project",
                "childParamsGroups": []
              },
              "private": {
                "description": "<p>Whether or not this project can be seen by everyone.</p>",
                "type": "boolean",
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether or not this project can be seen by everyone.",
                "childParamsGroups": []
              }
            },
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "update-a-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Updates a project board's information. Returns a <code>404 Not Found</code> status if projects are disabled. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>",
    "bodyParameters": [
      {
        "description": "<p>Name of the project</p>",
        "example": "Week One Sprint",
        "type": "string",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name of the project",
        "childParamsGroups": []
      },
      {
        "description": "<p>Body of the project</p>",
        "example": "This project represents the sprint of the first week in January",
        "type": "string or nullable",
        "nullable": true,
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Body of the project",
        "childParamsGroups": []
      },
      {
        "description": "<p>State of the project; either 'open' or 'closed'</p>",
        "example": "open",
        "type": "string",
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "State of the project; either 'open' or 'closed'",
        "childParamsGroups": []
      },
      {
        "description": "<p>The baseline permission that all organization members have on this project</p>",
        "type": "string",
        "enum": [
          "read",
          "write",
          "admin",
          "none"
        ],
        "name": "organization_permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The baseline permission that all organization members have on this project",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether or not this project can be seen by everyone.</p>",
        "type": "boolean",
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether or not this project can be seen by everyone.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"owner_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/api-playground/projects-test\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002604\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/api-playground/projects-test/projects/1\"</span>,\n  <span class=\"hljs-attr\">\"columns_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002604/columns\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UHJvamVjdDEwMDI2MDQ=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Projects Documentation\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Developer documentation project for the developer site.\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if the authenticated user does not have access to the project"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /projects/{project_id}', {\n  project_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a project",
    "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.",
    "operationId": "projects/delete",
    "tags": [
      "projects"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "delete-a-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Delete Success"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deletes a project board. Returns a <code>404 Not Found</code> status if projects are disabled.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/projects/{project_id}/collaborators",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "affiliation",
        "description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filters the collaborators by their affiliation. Can be one of:<br>\n* <code>outside</code>: Outside collaborators of a project that are not a member of the project's organization.<br>\n* <code>direct</code>: Collaborators with permissions to a project, regardless of organization membership status.<br>\n* <code>all</code>: All collaborators the authenticated user can see.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/{project_id}/collaborators', {\n  project_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/{project_id}/collaborators'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List project collaborators",
    "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-collaborators",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-collaborators"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "collaborators"
    },
    "slug": "list-project-collaborators",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project <code>admin</code> to list collaborators.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/projects/{project_id}/collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME \\\n  -d '{\"permission\":\"permission\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME \\\n  -d '{\"permission\":\"permission\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /projects/{project_id}/collaborators/{username}', {\n  project_id: 42,\n  username: 'username',\n  permission: 'permission',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /projects/{project_id}/collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">permission</span>: <span class=\"hljs-string\">'permission'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Add project collaborator",
    "description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/add-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#add-project-collaborator"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "permission": {
                "description": "<p>The permission to grant the collaborator.</p>",
                "enum": [
                  "read",
                  "write",
                  "admin"
                ],
                "default": "write",
                "example": "write",
                "type": "string",
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The permission to grant the collaborator.",
                "childParamsGroups": []
              }
            },
            "nullable": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "collaborators"
    },
    "slug": "add-project-collaborator",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "<p>Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project <code>admin</code> to add a collaborator.</p>",
    "bodyParameters": [
      {
        "description": "<p>The permission to grant the collaborator.</p>",
        "enum": [
          "read",
          "write",
          "admin"
        ],
        "default": "write",
        "example": "write",
        "type": "string",
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The permission to grant the collaborator.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/projects/{project_id}/collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /projects/{project_id}/collaborators/{username}', {\n  project_id: 42,\n  username: 'username',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /projects/{project_id}/collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Remove user as a collaborator",
    "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/remove-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#remove-project-collaborator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "collaborators"
    },
    "slug": "remove-user-as-a-collaborator",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes a collaborator from an organization project. You must be an organization owner or a project <code>admin</code> to remove a collaborator.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/projects/{project_id}/collaborators/{username}/permission",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME/permission",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/collaborators/USERNAME/permission</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/{project_id}/collaborators/{username}/permission', {\n  project_id: 42,\n  username: 'username',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/{project_id}/collaborators/{username}/permission'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get project permission for a user",
    "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/get-permission-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-project-permission-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "collaborators"
    },
    "slug": "get-project-permission-for-a-user",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the collaborator's permission level for an organization project. Possible values for the <code>permission</code> key: <code>admin</code>, <code>write</code>, <code>read</code>, <code>none</code>. You must be an organization owner or a project <code>admin</code> to review a user's permission level.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/projects/{project_id}/columns",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/columns",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/columns</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /projects/{project_id}/columns', {\n  project_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /projects/{project_id}/columns'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List project columns",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-columns",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-columns"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "list-project-columns",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/projects/{project_id}/columns",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/columns \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/projects/42/columns \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /projects/{project_id}/columns', {\n  project_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /projects/{project_id}/columns'</span>, {\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a project column",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/create-column",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-project-column"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "name": {
                "description": "<p><strong>Required</strong>. Name of the project column</p>",
                "example": "Remaining tasks",
                "type": "string",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name of the project column",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": "columns"
    },
    "slug": "create-a-project-column",
    "category": "projects",
    "categoryLabel": "Projects",
    "subcategory": "columns",
    "subcategoryLabel": "Columns",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. Name of the project column</p>",
        "example": "Remaining tasks",
        "type": "string",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name of the project column",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367\"</span>,\n  <span class=\"hljs-attr\">\"project_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/120\"</span>,\n  <span class=\"hljs-attr\">\"cards_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/columns/367/cards\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">367</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEzOlByb2plY3RDb2x1bW4zNjc=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"To Do\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:18:44Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2016-09-05T14:22:28Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/rate_limit",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/rate_limit",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/rate_limit</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /rate_limit')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /rate_limit'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get rate limit status for the authenticated user",
    "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.",
    "tags": [
      "rate-limit"
    ],
    "operationId": "rate-limit/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/rate-limit#get-rate-limit-status-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "rate-limit",
      "subcategory": null
    },
    "slug": "get-rate-limit-status-for-the-authenticated-user",
    "category": "rate-limit",
    "categoryLabel": "Rate limit",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> Accessing this endpoint does not count against your REST API rate limit.</p>\n<p><strong>Note:</strong> The <code>rate</code> object is deprecated. If you're writing new API client code or updating existing code, you should use the <code>core</code> object instead of the <code>rate</code> object. The <code>core</code> object contains the same information that is present in the <code>rate</code> object.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/reactions/{reaction_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "reaction_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/reactions/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/reactions/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /reactions/{reaction_id}', {\n  reaction_id: 42,\n  mediaType: {\n    previews: [\n      'echo',\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /reactions/{reaction_id}'</span>, {\n  <span class=\"hljs-attr\">reaction_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>,\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a reaction",
    "description": "OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments).",
    "operationId": "reactions/delete",
    "tags": [
      "reactions"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#delete-a-reaction-legacy"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "delete-a-reaction",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>, when deleting a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions\">team discussion</a> or <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments\">team discussion comment</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository",
    "description": "When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.\n\nThe `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "scarlet-witch",
          "note": "The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.scarlet-witch-preview+json\n```",
          "html": "<p>The Codes of Conduct API is currently available for developers to preview.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.scarlet-witch-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "get-a-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>When you pass the <code>scarlet-witch-preview</code> media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.</p>\n<p>The <code>parent</code> and <code>source</code> objects are present when the repository is a fork. <code>parent</code> is the repository this repository was forked from, <code>source</code> is the ultimate source for the network.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a repository",
    "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#replace-all-repository-topics) endpoint.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos/#update-a-repository"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>The name of the repository.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the repository.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the repository.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the repository.",
                "childParamsGroups": []
              },
              "homepage": {
                "type": "string",
                "description": "<p>A URL with more information about the repository.</p>",
                "name": "homepage",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL with more information about the repository.",
                "childParamsGroups": []
              },
              "private": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to make the repository private or <code>false</code> to make it public. Default: <code>false</code>.<br>\n<strong>Note</strong>: You will get a <code>422</code> error if the organization restricts <a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories\">changing repository visibility</a> to organization owners and a non-owner tries to change the value of private. <strong>Note</strong>: You will get a <code>422</code> error if the organization restricts <a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories\">changing repository visibility</a> to organization owners and a non-owner tries to change the value of private.</p>",
                "default": false,
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
                "childParamsGroups": []
              },
              "visibility": {
                "type": "string",
                "description": "<p>Can be <code>public</code> or <code>private</code>. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, <code>visibility</code> can also be <code>internal</code>. The <code>visibility</code> parameter overrides the <code>private</code> parameter when you use both along with the <code>nebula-preview</code> preview header.</p>",
                "enum": [
                  "public",
                  "private",
                  "visibility",
                  "internal"
                ],
                "name": "visibility",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. The `visibility` parameter overrides the `private` parameter when you use both along with the `nebula-preview` preview header.",
                "childParamsGroups": []
              },
              "has_issues": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable issues for this repository or <code>false</code> to disable them.</p>",
                "default": true,
                "name": "has_issues",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable issues for this repository or `false` to disable them.",
                "childParamsGroups": []
              },
              "has_projects": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable projects for this repository or <code>false</code> to disable them. <strong>Note:</strong> If you're creating a repository in an organization that has disabled repository projects, the default is <code>false</code>, and if you pass <code>true</code>, the API returns an error.</p>",
                "default": true,
                "name": "has_projects",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                "childParamsGroups": []
              },
              "has_wiki": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to enable the wiki for this repository or <code>false</code> to disable it.</p>",
                "default": true,
                "name": "has_wiki",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                "childParamsGroups": []
              },
              "is_template": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to make this repo available as a template repository or <code>false</code> to prevent it.</p>",
                "default": false,
                "name": "is_template",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                "childParamsGroups": []
              },
              "default_branch": {
                "type": "string",
                "description": "<p>Updates the default branch for this repository.</p>",
                "name": "default_branch",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Updates the default branch for this repository.",
                "childParamsGroups": []
              },
              "allow_squash_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow squash-merging pull requests, or <code>false</code> to prevent squash-merging.</p>",
                "default": true,
                "name": "allow_squash_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                "childParamsGroups": []
              },
              "allow_merge_commit": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow merging pull requests with a merge commit, or <code>false</code> to prevent merging pull requests with merge commits.</p>",
                "default": true,
                "name": "allow_merge_commit",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                "childParamsGroups": []
              },
              "allow_rebase_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow rebase-merging pull requests, or <code>false</code> to prevent rebase-merging.</p>",
                "default": true,
                "name": "allow_rebase_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                "childParamsGroups": []
              },
              "delete_branch_on_merge": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to allow automatically deleting head branches when pull requests are merged, or <code>false</code> to prevent automatic deletion.</p>",
                "default": false,
                "name": "delete_branch_on_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
                "childParamsGroups": []
              },
              "archived": {
                "type": "boolean",
                "description": "<p><code>true</code> to archive this repository. <strong>Note</strong>: You cannot unarchive repositories through the API.</p>",
                "default": false,
                "name": "archived",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "name": "Hello-World",
            "description": "This is your first repository",
            "homepage": "https://github.com",
            "private": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "baptiste",
          "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```",
          "html": "<p>The <code>is_template</code> and <code>template_repository</code> keys are currently available for developer to preview. See <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template\">Create a repository using a template</a> to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.baptiste-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "update-a-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note</strong>: To edit a repository's topics, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#replace-all-repository-topics\">Replace all repository topics</a> endpoint.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The name of the repository.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the repository.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A URL with more information about the repository.</p>",
        "name": "homepage",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL with more information about the repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to make the repository private or <code>false</code> to make it public. Default: <code>false</code>.<br>\n<strong>Note</strong>: You will get a <code>422</code> error if the organization restricts <a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories\">changing repository visibility</a> to organization owners and a non-owner tries to change the value of private. <strong>Note</strong>: You will get a <code>422</code> error if the organization restricts <a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories\">changing repository visibility</a> to organization owners and a non-owner tries to change the value of private.</p>",
        "default": false,
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Can be <code>public</code> or <code>private</code>. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, <code>visibility</code> can also be <code>internal</code>. The <code>visibility</code> parameter overrides the <code>private</code> parameter when you use both along with the <code>nebula-preview</code> preview header.</p>",
        "enum": [
          "public",
          "private",
          "visibility",
          "internal"
        ],
        "name": "visibility",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. The `visibility` parameter overrides the `private` parameter when you use both along with the `nebula-preview` preview header.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable issues for this repository or <code>false</code> to disable them.</p>",
        "default": true,
        "name": "has_issues",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable issues for this repository or `false` to disable them.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable projects for this repository or <code>false</code> to disable them. <strong>Note:</strong> If you're creating a repository in an organization that has disabled repository projects, the default is <code>false</code>, and if you pass <code>true</code>, the API returns an error.</p>",
        "default": true,
        "name": "has_projects",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to enable the wiki for this repository or <code>false</code> to disable it.</p>",
        "default": true,
        "name": "has_wiki",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to make this repo available as a template repository or <code>false</code> to prevent it.</p>",
        "default": false,
        "name": "is_template",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Updates the default branch for this repository.</p>",
        "name": "default_branch",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Updates the default branch for this repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow squash-merging pull requests, or <code>false</code> to prevent squash-merging.</p>",
        "default": true,
        "name": "allow_squash_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow merging pull requests with a merge commit, or <code>false</code> to prevent merging pull requests with merge commits.</p>",
        "default": true,
        "name": "allow_merge_commit",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow rebase-merging pull requests, or <code>false</code> to prevent rebase-merging.</p>",
        "default": true,
        "name": "allow_rebase_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to allow automatically deleting head branches when pull requests are merged, or <code>false</code> to prevent automatic deletion.</p>",
        "default": false,
        "name": "delete_branch_on_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p><code>true</code> to archive this repository. <strong>Note</strong>: You cannot unarchive repositories through the API.</p>",
        "default": false,
        "name": "archived",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/licenses/mit\"</span>\n  },\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"template_repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"temp_clone_token\"</span>: <span class=\"hljs-string\">\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\"</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"delete_branch_on_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>\n  },\n  <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"parent\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"source\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "307",
        "httpStatusMessage": "Temporary Redirect",
        "description": "Temporary Redirect"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a repository",
    "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a `403 Forbidden` response.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "delete-a-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "307",
        "httpStatusMessage": "Temporary Redirect",
        "description": "Temporary Redirect"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deleting a repository requires admin access. If OAuth is used, the <code>delete_repo</code> scope is required.</p>\n<p>If an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a <code>403 Forbidden</code> response.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/assignees",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/assignees",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/assignees</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/assignees', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/assignees'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List assignees",
    "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-assignees",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-assignees"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "assignees"
    },
    "slug": "list-assignees",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "assignees",
    "subcategoryLabel": "Assignees",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the <a href=\"https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/\">available assignees</a> for issues in a repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/assignees/{assignee}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "assignee",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/assignees/ASSIGNEE",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/assignees/ASSIGNEE</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/assignees/{assignee}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  assignee: 'assignee'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/assignees/{assignee}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">assignee</span>: <span class=\"hljs-string\">'assignee'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a user can be assigned",
    "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/check-user-can-be-assigned",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#check-if-a-user-can-be-assigned"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "assignees"
    },
    "slug": "check-if-a-user-can-be-assigned",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "assignees",
    "subcategoryLabel": "Assignees",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned."
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Otherwise a `404` status code is returned."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Checks if a user has permission to be assigned to an issue in this repository.</p>\n<p>If the <code>assignee</code> can be assigned to issues in the repository, a <code>204</code> header with no content is returned.</p>\n<p>Otherwise a <code>404</code> status code is returned.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "protected",
        "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "descriptionHTML": "<p>Setting to <code>true</code> returns only protected branches. When set to <code>false</code>, only unprotected branches are returned. Omitting this parameter returns all branches.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List branches",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-branches",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-branches"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "list-branches",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a branch",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-branch",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-branch"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-a-branch",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-branch-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "luke-cage",
          "note": "The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.luke-cage-preview+json\n```",
          "html": "<p>The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.luke-cage-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection \\\n  -d '{\"required_status_checks\":{\"strict\":true,\"contexts\":[\"contexts\"]},\"enforce_admins\":true,\"required_pull_request_reviews\":{\"dismissal_restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":42},\"restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"],\"apps\":[\"apps\"]}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection \\\n  -d '{\"required_status_checks\":{\"strict\":true,\"contexts\":[\"contexts\"]},\"enforce_admins\":true,\"required_pull_request_reviews\":{\"dismissal_restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":42},\"restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"],\"apps\":[\"apps\"]}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/branches/{branch}/protection', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  required_status_checks: {\n    strict: true,\n    contexts: [\n      'contexts'\n    ]\n  },\n  enforce_admins: true,\n  required_pull_request_reviews: {\n    dismissal_restrictions: {\n      users: [\n        'users'\n      ],\n      teams: [\n        'teams'\n      ]\n    },\n    dismiss_stale_reviews: true,\n    require_code_owner_reviews: true,\n    required_approving_review_count: 42\n  },\n  restrictions: {\n    users: [\n      'users'\n    ],\n    teams: [\n      'teams'\n    ],\n    apps: [\n      'apps'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/branches/{branch}/protection'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">required_status_checks</span>: {\n    <span class=\"hljs-attr\">strict</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">contexts</span>: [\n      <span class=\"hljs-string\">'contexts'</span>\n    ]\n  },\n  <span class=\"hljs-attr\">enforce_admins</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">required_pull_request_reviews</span>: {\n    <span class=\"hljs-attr\">dismissal_restrictions</span>: {\n      <span class=\"hljs-attr\">users</span>: [\n        <span class=\"hljs-string\">'users'</span>\n      ],\n      <span class=\"hljs-attr\">teams</span>: [\n        <span class=\"hljs-string\">'teams'</span>\n      ]\n    },\n    <span class=\"hljs-attr\">dismiss_stale_reviews</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">require_code_owner_reviews</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">required_approving_review_count</span>: <span class=\"hljs-number\">42</span>\n  },\n  <span class=\"hljs-attr\">restrictions</span>: {\n    <span class=\"hljs-attr\">users</span>: [\n      <span class=\"hljs-string\">'users'</span>\n    ],\n    <span class=\"hljs-attr\">teams</span>: [\n      <span class=\"hljs-string\">'teams'</span>\n    ],\n    <span class=\"hljs-attr\">apps</span>: [\n      <span class=\"hljs-string\">'apps'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users, apps, and teams in total is limited to 100 items.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-branch-protection"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "required_status_checks": {
                "type": "object or nullable",
                "description": "<p><strong>Required</strong>. Require status checks to pass before merging. Set to <code>null</code> to disable.</p>",
                "nullable": true,
                "properties": {
                  "strict": {
                    "type": "boolean",
                    "description": "<p><strong>Required</strong>. Require branches to be up to date before merging.</p>",
                    "name": "strict",
                    "in": "body",
                    "rawType": "boolean",
                    "rawDescription": "Require branches to be up to date before merging.",
                    "childParamsGroups": []
                  },
                  "contexts": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. The list of status checks to require in order to merge into this branch</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "contexts",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of status checks to require in order to merge into this branch",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "strict",
                  "contexts"
                ],
                "name": "required_status_checks",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Require status checks to pass before merging. Set to `null` to disable.",
                "childParamsGroups": [
                  {
                    "parentName": "required_status_checks",
                    "parentType": "object",
                    "id": "required_status_checks-object",
                    "params": [
                      {
                        "type": "boolean",
                        "description": "<p><strong>Required</strong>. Require branches to be up to date before merging.</p>",
                        "name": "strict",
                        "in": "body",
                        "rawType": "boolean",
                        "rawDescription": "Require branches to be up to date before merging.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p><strong>Required</strong>. The list of status checks to require in order to merge into this branch</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "contexts",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of status checks to require in order to merge into this branch",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "enforce_admins": {
                "type": "boolean or nullable",
                "description": "<p><strong>Required</strong>. Enforce all configured restrictions for administrators. Set to <code>true</code> to enforce required status checks for repository administrators. Set to <code>null</code> to disable.</p>",
                "nullable": true,
                "name": "enforce_admins",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
                "childParamsGroups": []
              },
              "required_pull_request_reviews": {
                "type": "object or nullable",
                "description": "<p><strong>Required</strong>. Require at least one approving review on a pull request, before merging. Set to <code>null</code> to disable.</p>",
                "nullable": true,
                "properties": {
                  "dismissal_restrictions": {
                    "type": "object",
                    "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
                    "properties": {
                      "users": {
                        "type": "array of strings",
                        "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "users",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of user `login`s with dismissal access",
                        "childParamsGroups": []
                      },
                      "teams": {
                        "type": "array of strings",
                        "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "teams",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of team `slug`s with dismissal access",
                        "childParamsGroups": []
                      }
                    },
                    "name": "dismissal_restrictions",
                    "in": "body",
                    "rawType": "object",
                    "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
                    "childParamsGroups": [
                      {
                        "parentName": "dismissal_restrictions",
                        "parentType": "object",
                        "id": "dismissal_restrictions-object",
                        "params": [
                          {
                            "type": "array of strings",
                            "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                            "items": {
                              "type": "string"
                            },
                            "name": "users",
                            "in": "body",
                            "rawType": "array",
                            "rawDescription": "The list of user `login`s with dismissal access",
                            "childParamsGroups": []
                          },
                          {
                            "type": "array of strings",
                            "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                            "items": {
                              "type": "string"
                            },
                            "name": "teams",
                            "in": "body",
                            "rawType": "array",
                            "rawDescription": "The list of team `slug`s with dismissal access",
                            "childParamsGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "dismiss_stale_reviews": {
                    "type": "boolean",
                    "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
                    "name": "dismiss_stale_reviews",
                    "in": "body",
                    "rawType": "boolean",
                    "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
                    "childParamsGroups": []
                  },
                  "require_code_owner_reviews": {
                    "type": "boolean",
                    "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> review them.</p>",
                    "name": "require_code_owner_reviews",
                    "in": "body",
                    "rawType": "boolean",
                    "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
                    "childParamsGroups": []
                  },
                  "required_approving_review_count": {
                    "type": "integer",
                    "description": "<p>Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
                    "name": "required_approving_review_count",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
                    "childParamsGroups": []
                  }
                },
                "name": "required_pull_request_reviews",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
                "childParamsGroups": [
                  {
                    "parentName": "required_pull_request_reviews",
                    "parentType": "object",
                    "id": "required_pull_request_reviews-object",
                    "params": [
                      {
                        "type": "object",
                        "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
                        "properties": {
                          "users": {
                            "type": "array of strings",
                            "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                            "items": {
                              "type": "string"
                            },
                            "name": "users",
                            "in": "body",
                            "rawType": "array",
                            "rawDescription": "The list of user `login`s with dismissal access",
                            "childParamsGroups": []
                          },
                          "teams": {
                            "type": "array of strings",
                            "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                            "items": {
                              "type": "string"
                            },
                            "name": "teams",
                            "in": "body",
                            "rawType": "array",
                            "rawDescription": "The list of team `slug`s with dismissal access",
                            "childParamsGroups": []
                          }
                        },
                        "name": "dismissal_restrictions",
                        "in": "body",
                        "rawType": "object",
                        "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
                        "childParamsGroups": [
                          {
                            "parentName": "dismissal_restrictions",
                            "parentType": "object",
                            "id": "dismissal_restrictions-object",
                            "params": [
                              {
                                "type": "array of strings",
                                "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                                "items": {
                                  "type": "string"
                                },
                                "name": "users",
                                "in": "body",
                                "rawType": "array",
                                "rawDescription": "The list of user `login`s with dismissal access",
                                "childParamsGroups": []
                              },
                              {
                                "type": "array of strings",
                                "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                                "items": {
                                  "type": "string"
                                },
                                "name": "teams",
                                "in": "body",
                                "rawType": "array",
                                "rawDescription": "The list of team `slug`s with dismissal access",
                                "childParamsGroups": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "boolean",
                        "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
                        "name": "dismiss_stale_reviews",
                        "in": "body",
                        "rawType": "boolean",
                        "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "boolean",
                        "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> review them.</p>",
                        "name": "require_code_owner_reviews",
                        "in": "body",
                        "rawType": "boolean",
                        "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
                        "name": "required_approving_review_count",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
                        "childParamsGroups": []
                      }
                    ]
                  },
                  {
                    "parentName": "dismissal_restrictions",
                    "parentType": "object",
                    "id": "dismissal_restrictions-object",
                    "params": [
                      {
                        "type": "array of strings",
                        "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "users",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of user `login`s with dismissal access",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "teams",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of team `slug`s with dismissal access",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "restrictions": {
                "type": "object or nullable",
                "description": "<p><strong>Required</strong>. Restrict who can push to the protected branch. User, app, and team <code>restrictions</code> are only available for organization-owned repositories. Set to <code>null</code> to disable.</p>",
                "nullable": true,
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. The list of user <code>login</code>s with push access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of user `login`s with push access",
                    "childParamsGroups": []
                  },
                  "teams": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. The list of team <code>slug</code>s with push access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of team `slug`s with push access",
                    "childParamsGroups": []
                  },
                  "apps": {
                    "type": "array of strings",
                    "description": "<p>The list of app <code>slug</code>s with push access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "apps",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of app `slug`s with push access",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "users",
                  "teams"
                ],
                "name": "restrictions",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
                "childParamsGroups": [
                  {
                    "parentName": "restrictions",
                    "parentType": "object",
                    "id": "restrictions-object",
                    "params": [
                      {
                        "type": "array of strings",
                        "description": "<p><strong>Required</strong>. The list of user <code>login</code>s with push access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "users",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of user `login`s with push access",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p><strong>Required</strong>. The list of team <code>slug</code>s with push access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "teams",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of team `slug`s with push access",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p>The list of app <code>slug</code>s with push access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "apps",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of app `slug`s with push access",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "required_linear_history": {
                "type": "boolean",
                "description": "<p>Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to <code>true</code> to enforce a linear commit history. Set to <code>false</code> to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history\">Requiring a linear commit history</a>\" in the GitHub Help documentation.</p>",
                "name": "required_linear_history",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.",
                "childParamsGroups": []
              },
              "allow_force_pushes": {
                "type": "boolean or nullable",
                "description": "<p>Permits force pushes to the protected branch by anyone with write access to the repository. Set to <code>true</code> to allow force pushes. Set to <code>false</code> or <code>null</code> to block force pushes. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch\">Enabling force pushes to a protected branch</a>\" in the GitHub Help documentation.\"</p>",
                "nullable": true,
                "name": "allow_force_pushes",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"",
                "childParamsGroups": []
              },
              "allow_deletions": {
                "type": "boolean",
                "description": "<p>Allows deletion of the protected branch by anyone with write access to the repository. Set to <code>false</code> to prevent deletion of the protected branch. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch\">Enabling force pushes to a protected branch</a>\" in the GitHub Help documentation.</p>",
                "name": "allow_deletions",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.",
                "childParamsGroups": []
              },
              "required_conversation_resolution": {
                "type": "boolean",
                "description": "<p>Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to <code>false</code> to disable. Default: <code>false</code>.</p>",
                "name": "required_conversation_resolution",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.",
                "childParamsGroups": []
              }
            },
            "required": [
              "required_status_checks",
              "enforce_admins",
              "required_pull_request_reviews",
              "restrictions"
            ]
          },
          "example": {
            "required_status_checks": {
              "strict": true,
              "contexts": [
                "continuous-integration/travis-ci"
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismissal_restrictions": {
                "users": [
                  "octocat"
                ],
                "teams": [
                  "justice-league"
                ]
              },
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            },
            "restrictions": {
              "users": [
                "octocat"
              ],
              "teams": [
                "justice-league"
              ],
              "apps": [
                "super-ci"
              ]
            },
            "required_linear_history": true,
            "allow_force_pushes": true,
            "allow_deletions": true,
            "required_conversation_resolution": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "luke-cage",
          "note": "The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.luke-cage-preview+json\n```",
          "html": "<p>The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.luke-cage-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "update-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Protecting a branch requires admin or owner permissions to the repository.</p>\n<p><strong>Note</strong>: Passing new arrays of <code>users</code> and <code>teams</code> replaces their previous values.</p>\n<p><strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</p>",
    "bodyParameters": [
      {
        "type": "object or nullable",
        "description": "<p><strong>Required</strong>. Require status checks to pass before merging. Set to <code>null</code> to disable.</p>",
        "nullable": true,
        "properties": {
          "strict": {
            "type": "boolean",
            "description": "<p><strong>Required</strong>. Require branches to be up to date before merging.</p>",
            "name": "strict",
            "in": "body",
            "rawType": "boolean",
            "rawDescription": "Require branches to be up to date before merging.",
            "childParamsGroups": []
          },
          "contexts": {
            "type": "array of strings",
            "description": "<p><strong>Required</strong>. The list of status checks to require in order to merge into this branch</p>",
            "items": {
              "type": "string"
            },
            "name": "contexts",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of status checks to require in order to merge into this branch",
            "childParamsGroups": []
          }
        },
        "required": [
          "strict",
          "contexts"
        ],
        "name": "required_status_checks",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Require status checks to pass before merging. Set to `null` to disable.",
        "childParamsGroups": [
          {
            "parentName": "required_status_checks",
            "parentType": "object",
            "id": "required_status_checks-object",
            "params": [
              {
                "type": "boolean",
                "description": "<p><strong>Required</strong>. Require branches to be up to date before merging.</p>",
                "name": "strict",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Require branches to be up to date before merging.",
                "childParamsGroups": []
              },
              {
                "type": "array of strings",
                "description": "<p><strong>Required</strong>. The list of status checks to require in order to merge into this branch</p>",
                "items": {
                  "type": "string"
                },
                "name": "contexts",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of status checks to require in order to merge into this branch",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "boolean or nullable",
        "description": "<p><strong>Required</strong>. Enforce all configured restrictions for administrators. Set to <code>true</code> to enforce required status checks for repository administrators. Set to <code>null</code> to disable.</p>",
        "nullable": true,
        "name": "enforce_admins",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
        "childParamsGroups": []
      },
      {
        "type": "object or nullable",
        "description": "<p><strong>Required</strong>. Require at least one approving review on a pull request, before merging. Set to <code>null</code> to disable.</p>",
        "nullable": true,
        "properties": {
          "dismissal_restrictions": {
            "type": "object",
            "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
            "properties": {
              "users": {
                "type": "array of strings",
                "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "users",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of user `login`s with dismissal access",
                "childParamsGroups": []
              },
              "teams": {
                "type": "array of strings",
                "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "teams",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of team `slug`s with dismissal access",
                "childParamsGroups": []
              }
            },
            "name": "dismissal_restrictions",
            "in": "body",
            "rawType": "object",
            "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
            "childParamsGroups": [
              {
                "parentName": "dismissal_restrictions",
                "parentType": "object",
                "id": "dismissal_restrictions-object",
                "params": [
                  {
                    "type": "array of strings",
                    "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of user `login`s with dismissal access",
                    "childParamsGroups": []
                  },
                  {
                    "type": "array of strings",
                    "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of team `slug`s with dismissal access",
                    "childParamsGroups": []
                  }
                ]
              }
            ]
          },
          "dismiss_stale_reviews": {
            "type": "boolean",
            "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
            "name": "dismiss_stale_reviews",
            "in": "body",
            "rawType": "boolean",
            "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
            "childParamsGroups": []
          },
          "require_code_owner_reviews": {
            "type": "boolean",
            "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> review them.</p>",
            "name": "require_code_owner_reviews",
            "in": "body",
            "rawType": "boolean",
            "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
            "childParamsGroups": []
          },
          "required_approving_review_count": {
            "type": "integer",
            "description": "<p>Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
            "name": "required_approving_review_count",
            "in": "body",
            "rawType": "integer",
            "rawDescription": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
            "childParamsGroups": []
          }
        },
        "name": "required_pull_request_reviews",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
        "childParamsGroups": [
          {
            "parentName": "required_pull_request_reviews",
            "parentType": "object",
            "id": "required_pull_request_reviews-object",
            "params": [
              {
                "type": "object",
                "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of user `login`s with dismissal access",
                    "childParamsGroups": []
                  },
                  "teams": {
                    "type": "array of strings",
                    "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of team `slug`s with dismissal access",
                    "childParamsGroups": []
                  }
                },
                "name": "dismissal_restrictions",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
                "childParamsGroups": [
                  {
                    "parentName": "dismissal_restrictions",
                    "parentType": "object",
                    "id": "dismissal_restrictions-object",
                    "params": [
                      {
                        "type": "array of strings",
                        "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "users",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of user `login`s with dismissal access",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "teams",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of team `slug`s with dismissal access",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              {
                "type": "boolean",
                "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
                "name": "dismiss_stale_reviews",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
                "childParamsGroups": []
              },
              {
                "type": "boolean",
                "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> review them.</p>",
                "name": "require_code_owner_reviews",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
                "name": "required_approving_review_count",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
                "childParamsGroups": []
              }
            ]
          },
          {
            "parentName": "dismissal_restrictions",
            "parentType": "object",
            "id": "dismissal_restrictions-object",
            "params": [
              {
                "type": "array of strings",
                "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "users",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of user `login`s with dismissal access",
                "childParamsGroups": []
              },
              {
                "type": "array of strings",
                "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "teams",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of team `slug`s with dismissal access",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "object or nullable",
        "description": "<p><strong>Required</strong>. Restrict who can push to the protected branch. User, app, and team <code>restrictions</code> are only available for organization-owned repositories. Set to <code>null</code> to disable.</p>",
        "nullable": true,
        "properties": {
          "users": {
            "type": "array of strings",
            "description": "<p><strong>Required</strong>. The list of user <code>login</code>s with push access</p>",
            "items": {
              "type": "string"
            },
            "name": "users",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of user `login`s with push access",
            "childParamsGroups": []
          },
          "teams": {
            "type": "array of strings",
            "description": "<p><strong>Required</strong>. The list of team <code>slug</code>s with push access</p>",
            "items": {
              "type": "string"
            },
            "name": "teams",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of team `slug`s with push access",
            "childParamsGroups": []
          },
          "apps": {
            "type": "array of strings",
            "description": "<p>The list of app <code>slug</code>s with push access</p>",
            "items": {
              "type": "string"
            },
            "name": "apps",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of app `slug`s with push access",
            "childParamsGroups": []
          }
        },
        "required": [
          "users",
          "teams"
        ],
        "name": "restrictions",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
        "childParamsGroups": [
          {
            "parentName": "restrictions",
            "parentType": "object",
            "id": "restrictions-object",
            "params": [
              {
                "type": "array of strings",
                "description": "<p><strong>Required</strong>. The list of user <code>login</code>s with push access</p>",
                "items": {
                  "type": "string"
                },
                "name": "users",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of user `login`s with push access",
                "childParamsGroups": []
              },
              {
                "type": "array of strings",
                "description": "<p><strong>Required</strong>. The list of team <code>slug</code>s with push access</p>",
                "items": {
                  "type": "string"
                },
                "name": "teams",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of team `slug`s with push access",
                "childParamsGroups": []
              },
              {
                "type": "array of strings",
                "description": "<p>The list of app <code>slug</code>s with push access</p>",
                "items": {
                  "type": "string"
                },
                "name": "apps",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of app `slug`s with push access",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "description": "<p>Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to <code>true</code> to enforce a linear commit history. Set to <code>false</code> to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history\">Requiring a linear commit history</a>\" in the GitHub Help documentation.</p>",
        "name": "required_linear_history",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.",
        "childParamsGroups": []
      },
      {
        "type": "boolean or nullable",
        "description": "<p>Permits force pushes to the protected branch by anyone with write access to the repository. Set to <code>true</code> to allow force pushes. Set to <code>false</code> or <code>null</code> to block force pushes. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch\">Enabling force pushes to a protected branch</a>\" in the GitHub Help documentation.\"</p>",
        "nullable": true,
        "name": "allow_force_pushes",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Allows deletion of the protected branch by anyone with write access to the repository. Set to <code>false</code> to prevent deletion of the protected branch. Default: <code>false</code>. For more information, see \"<a href=\"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch\">Enabling force pushes to a protected branch</a>\" in the GitHub Help documentation.</p>",
        "name": "allow_deletions",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to <code>false</code> to disable. Default: <code>false</code>.</p>",
        "name": "required_conversation_resolution",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-branch-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "delete-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get admin branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-admin-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-admin-branch-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-admin-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set admin branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/set-admin-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-admin-branch-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "set-admin-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/enforce_admins</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete admin branch protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-admin-branch-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-admin-branch-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "delete-admin-branch-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get pull request review protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-pull-request-review-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-pull-request-review-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "luke-cage",
          "note": "The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.luke-cage-preview+json\n```",
          "html": "<p>The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.luke-cage-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-pull-request-review-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews \\\n  -d '{\"dismissal_restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"]}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews \\\n  -d '{\"dismissal_restrictions\":{\"users\":[\"users\"],\"teams\":[\"teams\"]}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  dismissal_restrictions: {\n    users: [\n      'users'\n    ],\n    teams: [\n      'teams'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">dismissal_restrictions</span>: {\n    <span class=\"hljs-attr\">users</span>: [\n      <span class=\"hljs-string\">'users'</span>\n    ],\n    <span class=\"hljs-attr\">teams</span>: [\n      <span class=\"hljs-string\">'teams'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update pull request review protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-pull-request-review-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-pull-request-review-protection"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "dismissal_restrictions": {
                "type": "object",
                "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of user `login`s with dismissal access",
                    "childParamsGroups": []
                  },
                  "teams": {
                    "type": "array of strings",
                    "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The list of team `slug`s with dismissal access",
                    "childParamsGroups": []
                  }
                },
                "name": "dismissal_restrictions",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
                "childParamsGroups": [
                  {
                    "parentName": "dismissal_restrictions",
                    "parentType": "object",
                    "id": "dismissal_restrictions-object",
                    "params": [
                      {
                        "type": "array of strings",
                        "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "users",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of user `login`s with dismissal access",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of strings",
                        "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                        "items": {
                          "type": "string"
                        },
                        "name": "teams",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "The list of team `slug`s with dismissal access",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "dismiss_stale_reviews": {
                "type": "boolean",
                "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
                "name": "dismiss_stale_reviews",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
                "childParamsGroups": []
              },
              "require_code_owner_reviews": {
                "type": "boolean",
                "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> have reviewed.</p>",
                "name": "require_code_owner_reviews",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
                "childParamsGroups": []
              },
              "required_approving_review_count": {
                "type": "integer",
                "description": "<p>Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
                "name": "required_approving_review_count",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "dismissal_restrictions": {
              "users": [
                "octocat"
              ],
              "teams": [
                "justice-league"
              ]
            },
            "dismiss_stale_reviews": true,
            "require_code_owner_reviews": true,
            "required_approving_review_count": 2
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "luke-cage",
          "note": "The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.luke-cage-preview+json\n```",
          "html": "<p>The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.luke-cage-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "update-pull-request-review-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.</p>\n<p><strong>Note</strong>: Passing new arrays of <code>users</code> and <code>teams</code> replaces their previous values.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\"</span>,\n  <span class=\"hljs-attr\">\"dismissal_restrictions\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\"</span>,\n    <span class=\"hljs-attr\">\"users_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\"</span>,\n    <span class=\"hljs-attr\">\"users\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      }\n    ],\n    <span class=\"hljs-attr\">\"teams\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n        <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n        <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n        <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n        <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n        <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n        <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n        <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n      }\n    ]\n  },\n  <span class=\"hljs-attr\">\"dismiss_stale_reviews\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"require_code_owner_reviews\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"required_approving_review_count\"</span>: <span class=\"hljs-number\">2</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "object",
        "description": "<p>Specify which users and teams can dismiss pull request reviews. Pass an empty <code>dismissal_restrictions</code> object to disable. User and team <code>dismissal_restrictions</code> are only available for organization-owned repositories. Omit this parameter for personal repositories.</p>",
        "properties": {
          "users": {
            "type": "array of strings",
            "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
            "items": {
              "type": "string"
            },
            "name": "users",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of user `login`s with dismissal access",
            "childParamsGroups": []
          },
          "teams": {
            "type": "array of strings",
            "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
            "items": {
              "type": "string"
            },
            "name": "teams",
            "in": "body",
            "rawType": "array",
            "rawDescription": "The list of team `slug`s with dismissal access",
            "childParamsGroups": []
          }
        },
        "name": "dismissal_restrictions",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "childParamsGroups": [
          {
            "parentName": "dismissal_restrictions",
            "parentType": "object",
            "id": "dismissal_restrictions-object",
            "params": [
              {
                "type": "array of strings",
                "description": "<p>The list of user <code>login</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "users",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of user `login`s with dismissal access",
                "childParamsGroups": []
              },
              {
                "type": "array of strings",
                "description": "<p>The list of team <code>slug</code>s with dismissal access</p>",
                "items": {
                  "type": "string"
                },
                "name": "teams",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of team `slug`s with dismissal access",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "description": "<p>Set to <code>true</code> if you want to automatically dismiss approving reviews when someone pushes a new commit.</p>",
        "name": "dismiss_stale_reviews",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Blocks merging pull requests until <a href=\"https://help.github.com/articles/about-code-owners/\">code owners</a> have reviewed.</p>",
        "name": "require_code_owner_reviews",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p>Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.</p>",
        "name": "required_approving_review_count",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_pull_request_reviews</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete pull request review protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-pull-request-review-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-pull-request-review-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "delete-pull-request-review-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  mediaType: {\n    previews: [\n      'zzzax'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'zzzax'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get commit signature protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-commit-signature-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-commit-signature-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "zzzax",
          "note": "Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.zzzax-preview+json\n```",
          "html": "<p>Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.zzzax-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-commit-signature-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of <code>true</code> indicates you must sign commits on this branch. For more information, see <a href=\"https://help.github.com/articles/signing-commits-with-gpg\">Signing commits with GPG</a> in GitHub Help.</p>\n<p><strong>Note</strong>: You must enable branch protection to require signed commits.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  mediaType: {\n    previews: [\n      'zzzax'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'zzzax'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create commit signature protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-commit-signature-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-commit-signature-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "zzzax",
          "note": "Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.zzzax-preview+json\n```",
          "html": "<p>Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.zzzax-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "create-commit-signature-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.zzzax-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_signatures</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  mediaType: {\n    previews: [\n      'zzzax'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'zzzax'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete commit signature protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-commit-signature-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-commit-signature-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "zzzax",
          "note": "Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.zzzax-preview+json\n```",
          "html": "<p>Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.zzzax-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "delete-commit-signature-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get status checks protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-status-checks-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-status-checks-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-status-checks-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks \\\n  -d '{\"strict\":true}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks \\\n  -d '{\"strict\":true}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch',\n  strict: true\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n  <span class=\"hljs-attr\">strict</span>: <span class=\"hljs-literal\">true</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update status check protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-status-check-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-status-check-potection"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "strict": {
                "type": "boolean",
                "description": "<p>Require branches to be up to date before merging.</p>",
                "name": "strict",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Require branches to be up to date before merging.",
                "childParamsGroups": []
              },
              "contexts": {
                "type": "array of strings",
                "description": "<p>The list of status checks to require in order to merge into this branch</p>",
                "items": {
                  "type": "string"
                },
                "name": "contexts",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The list of status checks to require in order to merge into this branch",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "strict": true,
            "contexts": [
              "continuous-integration/travis-ci"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "update-status-check-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.</p>",
    "bodyParameters": [
      {
        "type": "boolean",
        "description": "<p>Require branches to be up to date before merging.</p>",
        "name": "strict",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Require branches to be up to date before merging.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>The list of status checks to require in order to merge into this branch</p>",
        "items": {
          "type": "string"
        },
        "name": "contexts",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The list of status checks to require in order to merge into this branch",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\"</span>,\n  <span class=\"hljs-attr\">\"strict\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"contexts\"</span>: [\n    <span class=\"hljs-string\">\"continuous-integration/travis-ci\"</span>\n  ],\n  <span class=\"hljs-attr\">\"contexts_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove status check protection",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/remove-status-check-protection",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-status-check-protection"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "remove-status-check-protection",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get all status check contexts",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-all-status-check-contexts",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-status-check-contexts"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-all-status-check-contexts",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add status check contexts",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/add-status-check-contexts",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-status-check-contexts"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "contexts": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. contexts parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "contexts",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "contexts parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "contexts"
                ],
                "example": {
                  "contexts": [
                    "contexts"
                  ]
                }
              },
              {
                "type": "array",
                "description": "contexts parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "contexts",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "add-status-check-contexts",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. contexts parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "contexts",
        "in": "body",
        "rawType": "array",
        "rawDescription": "contexts parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  <span class=\"hljs-string\">\"continuous-integration/travis-ci\"</span>,\n  <span class=\"hljs-string\">\"continuous-integration/jenkins\"</span>\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set status check contexts",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/set-status-check-contexts",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-status-check-contexts"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "contexts": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. contexts parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "contexts",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "contexts parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "contexts"
                ],
                "example": {
                  "contexts": [
                    "contexts"
                  ]
                }
              },
              {
                "type": "array",
                "description": "contexts parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "contexts",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "set-status-check-contexts",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. contexts parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "contexts",
        "in": "body",
        "rawType": "array",
        "rawDescription": "contexts parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  <span class=\"hljs-string\">\"continuous-integration/travis-ci\"</span>\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/required_status_checks/contexts</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove status check contexts",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/remove-status-check-contexts",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-status-check-contexts"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "contexts": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. contexts parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "contexts",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "contexts parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "contexts"
                ],
                "example": {
                  "contexts": [
                    "contexts"
                  ]
                }
              },
              {
                "type": "array",
                "description": "contexts parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "contexts",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "remove-status-check-contexts",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. contexts parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "contexts",
        "in": "body",
        "rawType": "array",
        "rawDescription": "contexts parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  <span class=\"hljs-string\">\"continuous-integration/travis-ci\"</span>\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists who has access to this protected branch.\n\n**Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-access-restrictions"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Lists who has access to this protected branch.</p>\n<p><strong>Note</strong>: Users, apps, and teams <code>restrictions</code> are only available for organization-owned repositories.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-access-restrictions"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "delete-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Disables the ability to restrict who can push to this branch.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get teams with access to the protected branch",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. The list includes child teams.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-teams-with-access-to-protected-branch",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-teams-with-access-to-the-protected-branch"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-teams-with-access-to-the-protected-branch",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Lists the teams who have push access to this branch. The list includes child teams.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add team access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/add-team-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-team-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. teams parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "teams parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "teams"
                ],
                "example": {
                  "teams": [
                    "my-team"
                  ]
                }
              },
              {
                "type": "array",
                "description": "teams parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "teams",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "add-team-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Grants the specified teams push access for this branch. You can also give push access to child teams.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>The teams that can have push access. Use the team's <code>slug</code>. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. teams parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "teams",
        "in": "body",
        "rawType": "array",
        "rawDescription": "teams parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n    <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n    <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n    <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set team access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/set-team-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-team-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. teams parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "teams parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "teams"
                ],
                "example": {
                  "teams": [
                    "my-team"
                  ]
                }
              },
              {
                "type": "array",
                "description": "teams parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "teams",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "set-team-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>The teams that can have push access. Use the team's <code>slug</code>. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. teams parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "teams",
        "in": "body",
        "rawType": "array",
        "rawDescription": "teams parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n    <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n    <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n    <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove team access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. You can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                         |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/remove-team-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-team-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. teams parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "teams",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "teams parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "teams"
                ],
                "example": {
                  "teams": [
                    "my-team"
                  ]
                }
              },
              {
                "type": "array",
                "description": "teams parameter",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "teams",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "remove-team-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Removes the ability of a team to push to this branch. You can also remove push access for child teams.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>Teams that should no longer have push access. Use the team's <code>slug</code>. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. teams parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "teams",
        "in": "body",
        "rawType": "array",
        "rawDescription": "teams parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n    <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n    <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n    <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get users with access to the protected branch",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-users-with-access-to-protected-branch",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-users-with-access-to-the-protected-branch"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "get-users-with-access-to-the-protected-branch",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Lists the people who have push access to this branch.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add user access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/add-user-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-user-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. users parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "users parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "users"
                ],
                "example": {
                  "users": [
                    "mona"
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "users",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "add-user-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Grants the specified people push access for this branch.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>Usernames for people who can have push access. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. users parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "users",
        "in": "body",
        "rawType": "array",
        "rawDescription": "users parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set user access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/set-user-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-user-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. users parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "users parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "users"
                ],
                "example": {
                  "users": [
                    "mona"
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "users",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "set-user-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>Usernames for people who can have push access. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. users parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "users",
        "in": "body",
        "rawType": "array",
        "rawDescription": "users parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The name of the branch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/branches/BRANCH/protection/restrictions/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  branch: 'branch'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove user access restrictions",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                                   |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/remove-user-access-restrictions",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-user-access-restrictions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array of strings",
                    "description": "<p><strong>Required</strong>. users parameter</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "users",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "users parameter",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "users"
                ],
                "example": {
                  "users": [
                    "mona"
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "requestBodyParameterName": "users",
      "category": "repos",
      "subcategory": "branches"
    },
    "slug": "remove-user-access-restrictions",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "branches",
    "subcategoryLabel": "Branches",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Removes the ability of a user to push to this branch.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>array</code></td><td>Usernames of the people who should no longer have push access. <strong>Note</strong>: The list of users, apps, and teams in total is limited to 100 items.</td></tr></tbody></table>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. users parameter</p>",
        "items": {
          "type": "string"
        },
        "name": "users",
        "in": "body",
        "rawType": "array",
        "rawDescription": "users parameter",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/check-runs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs \\\n  -d '{\"name\":\"name\",\"head_sha\":\"head_sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs \\\n  -d '{\"name\":\"name\",\"head_sha\":\"head_sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/check-runs', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name',\n  head_sha: 'head_sha',\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/check-runs'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">head_sha</span>: <span class=\"hljs-string\">'head_sha'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a check run",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\nIn a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/create",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-run"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the check. For example, \"code-coverage\".</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the check. For example, \"code-coverage\".",
                "childParamsGroups": []
              },
              "head_sha": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The SHA of the commit.</p>",
                "name": "head_sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA of the commit.",
                "childParamsGroups": []
              },
              "details_url": {
                "type": "string",
                "description": "<p>The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.</p>",
                "name": "details_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.",
                "childParamsGroups": []
              },
              "external_id": {
                "type": "string",
                "description": "<p>A reference for the run on the integrator's system.</p>",
                "name": "external_id",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A reference for the run on the integrator's system.",
                "childParamsGroups": []
              },
              "status": {
                "type": "string",
                "description": "<p>The current status. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>",
                "enum": [
                  "queued",
                  "in_progress",
                  "completed"
                ],
                "default": "queued",
                "name": "status",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
                "childParamsGroups": []
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "description": "<p>The time that the check run began. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "started_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              },
              "conclusion": {
                "type": "string",
                "description": "<p><strong>Required if you provide <code>completed_at</code> or a <code>status</code> of <code>completed</code></strong>. The final conclusion of the check. Can be one of <code>action_required</code>, <code>cancelled</code>, <code>failure</code>, <code>neutral</code>, <code>success</code>, <code>skipped</code>, <code>stale</code>, or <code>timed_out</code>. When the conclusion is <code>action_required</code>, additional details should be provided on the site specified by <code>details_url</code>.<br>\n<strong>Note:</strong> Providing <code>conclusion</code> will automatically set the <code>status</code> parameter to <code>completed</code>. You cannot change a check run conclusion to <code>stale</code>, only GitHub can set this.</p>",
                "enum": [
                  "action_required",
                  "cancelled",
                  "failure",
                  "neutral",
                  "success",
                  "skipped",
                  "stale",
                  "timed_out"
                ],
                "name": "conclusion",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.",
                "childParamsGroups": []
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "description": "<p>The time the check completed. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "completed_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              },
              "output": {
                "type": "object",
                "description": "<p>Check runs can accept a variety of data in the <code>output</code> object, including a <code>title</code> and <code>summary</code> and can optionally provide descriptive details about the run. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object\"><code>output</code> object</a> description.</p>",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The title of the check run.</p>",
                    "name": "title",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The title of the check run.",
                    "childParamsGroups": []
                  },
                  "summary": {
                    "type": "string",
                    "maxLength": 65535,
                    "description": "<p><strong>Required</strong>. The summary of the check run. This parameter supports Markdown.</p>",
                    "name": "summary",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The summary of the check run. This parameter supports Markdown.",
                    "childParamsGroups": []
                  },
                  "text": {
                    "type": "string",
                    "maxLength": 65535,
                    "description": "<p>The details of the check run. This parameter supports Markdown.</p>",
                    "name": "text",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The details of the check run. This parameter supports Markdown.",
                    "childParamsGroups": []
                  },
                  "annotations": {
                    "type": "array of objects",
                    "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the <strong>Checks</strong> and <strong>Files changed</strong> tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object\"><code>annotations</code> object</a> description for details about how to use this parameter.</p>",
                    "maxItems": 50,
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                          "name": "path",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                          "childParamsGroups": []
                        },
                        "start_line": {
                          "type": "integer",
                          "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                          "name": "start_line",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The start line of the annotation.",
                          "childParamsGroups": []
                        },
                        "end_line": {
                          "type": "integer",
                          "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                          "name": "end_line",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The end line of the annotation.",
                          "childParamsGroups": []
                        },
                        "start_column": {
                          "type": "integer",
                          "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                          "name": "start_column",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                          "childParamsGroups": []
                        },
                        "end_column": {
                          "type": "integer",
                          "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                          "name": "end_column",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                          "childParamsGroups": []
                        },
                        "annotation_level": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                          "enum": [
                            "notice",
                            "warning",
                            "failure"
                          ],
                          "name": "annotation_level",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                          "childParamsGroups": []
                        },
                        "message": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                          "name": "message",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                          "childParamsGroups": []
                        },
                        "title": {
                          "type": "string",
                          "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                          "name": "title",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                          "childParamsGroups": []
                        },
                        "raw_details": {
                          "type": "string",
                          "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                          "name": "raw_details",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                          "childParamsGroups": []
                        }
                      },
                      "required": [
                        "path",
                        "start_line",
                        "end_line",
                        "annotation_level",
                        "message"
                      ]
                    },
                    "name": "annotations",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object) description for details about how to use this parameter.",
                    "childParamsGroups": [
                      {
                        "parentName": "annotations",
                        "parentType": "items",
                        "id": "annotations-items",
                        "params": [
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                            "name": "path",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                            "name": "start_line",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The start line of the annotation.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                            "name": "end_line",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The end line of the annotation.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                            "name": "start_column",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                            "name": "end_column",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                            "enum": [
                              "notice",
                              "warning",
                              "failure"
                            ],
                            "name": "annotation_level",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                            "name": "message",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                            "name": "title",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                            "name": "raw_details",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                            "childParamsGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "images": {
                    "type": "array of objects",
                    "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object\"><code>images</code> object</a> description for details.</p>",
                    "items": {
                      "type": "object",
                      "properties": {
                        "alt": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                          "name": "alt",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The alternative text for the image.",
                          "childParamsGroups": []
                        },
                        "image_url": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                          "name": "image_url",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The full URL of the image.",
                          "childParamsGroups": []
                        },
                        "caption": {
                          "type": "string",
                          "description": "<p>A short image description.</p>",
                          "name": "caption",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "A short image description.",
                          "childParamsGroups": []
                        }
                      },
                      "required": [
                        "alt",
                        "image_url"
                      ]
                    },
                    "name": "images",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object) description for details.",
                    "childParamsGroups": [
                      {
                        "parentName": "images",
                        "parentType": "items",
                        "id": "images-items",
                        "params": [
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                            "name": "alt",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The alternative text for the image.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                            "name": "image_url",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The full URL of the image.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>A short image description.</p>",
                            "name": "caption",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "A short image description.",
                            "childParamsGroups": []
                          }
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "title",
                  "summary"
                ],
                "name": "output",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object) description.",
                "childParamsGroups": [
                  {
                    "parentName": "output",
                    "parentType": "object",
                    "id": "output-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The title of the check run.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The title of the check run.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 65535,
                        "description": "<p><strong>Required</strong>. The summary of the check run. This parameter supports Markdown.</p>",
                        "name": "summary",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The summary of the check run. This parameter supports Markdown.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 65535,
                        "description": "<p>The details of the check run. This parameter supports Markdown.</p>",
                        "name": "text",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The details of the check run. This parameter supports Markdown.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of objects",
                        "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the <strong>Checks</strong> and <strong>Files changed</strong> tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object\"><code>annotations</code> object</a> description for details about how to use this parameter.</p>",
                        "maxItems": 50,
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                              "name": "path",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                              "childParamsGroups": []
                            },
                            "start_line": {
                              "type": "integer",
                              "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                              "name": "start_line",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The start line of the annotation.",
                              "childParamsGroups": []
                            },
                            "end_line": {
                              "type": "integer",
                              "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                              "name": "end_line",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The end line of the annotation.",
                              "childParamsGroups": []
                            },
                            "start_column": {
                              "type": "integer",
                              "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                              "name": "start_column",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                              "childParamsGroups": []
                            },
                            "end_column": {
                              "type": "integer",
                              "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                              "name": "end_column",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                              "childParamsGroups": []
                            },
                            "annotation_level": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                              "enum": [
                                "notice",
                                "warning",
                                "failure"
                              ],
                              "name": "annotation_level",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                              "childParamsGroups": []
                            },
                            "message": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                              "name": "message",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                              "childParamsGroups": []
                            },
                            "title": {
                              "type": "string",
                              "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                              "name": "title",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                              "childParamsGroups": []
                            },
                            "raw_details": {
                              "type": "string",
                              "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                              "name": "raw_details",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                              "childParamsGroups": []
                            }
                          },
                          "required": [
                            "path",
                            "start_line",
                            "end_line",
                            "annotation_level",
                            "message"
                          ]
                        },
                        "name": "annotations",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object) description for details about how to use this parameter.",
                        "childParamsGroups": [
                          {
                            "parentName": "annotations",
                            "parentType": "items",
                            "id": "annotations-items",
                            "params": [
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                                "name": "path",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                                "name": "start_line",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The start line of the annotation.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                                "name": "end_line",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The end line of the annotation.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                                "name": "start_column",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                                "name": "end_column",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                                "enum": [
                                  "notice",
                                  "warning",
                                  "failure"
                                ],
                                "name": "annotation_level",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                                "name": "message",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                                "name": "title",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                                "name": "raw_details",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                                "childParamsGroups": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "array of objects",
                        "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object\"><code>images</code> object</a> description for details.</p>",
                        "items": {
                          "type": "object",
                          "properties": {
                            "alt": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                              "name": "alt",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The alternative text for the image.",
                              "childParamsGroups": []
                            },
                            "image_url": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                              "name": "image_url",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The full URL of the image.",
                              "childParamsGroups": []
                            },
                            "caption": {
                              "type": "string",
                              "description": "<p>A short image description.</p>",
                              "name": "caption",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "A short image description.",
                              "childParamsGroups": []
                            }
                          },
                          "required": [
                            "alt",
                            "image_url"
                          ]
                        },
                        "name": "images",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object) description for details.",
                        "childParamsGroups": [
                          {
                            "parentName": "images",
                            "parentType": "items",
                            "id": "images-items",
                            "params": [
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                                "name": "alt",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The alternative text for the image.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                                "name": "image_url",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The full URL of the image.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>A short image description.</p>",
                                "name": "caption",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "A short image description.",
                                "childParamsGroups": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "parentName": "annotations",
                    "parentType": "items",
                    "id": "annotations-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                        "name": "start_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                        "name": "end_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "start_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "end_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                        "enum": [
                          "notice",
                          "warning",
                          "failure"
                        ],
                        "name": "annotation_level",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                        "name": "message",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                        "name": "raw_details",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      }
                    ]
                  },
                  {
                    "parentName": "images",
                    "parentType": "items",
                    "id": "images-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                        "name": "alt",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The alternative text for the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                        "name": "image_url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The full URL of the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>A short image description.</p>",
                        "name": "caption",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short image description.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "actions": {
                "type": "array of objects",
                "description": "<p>Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_run\"><code>check_run.requested_action</code> webhook</a> to your app. Each action includes a <code>label</code>, <code>identifier</code> and <code>description</code>. A maximum of three actions are accepted. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object\"><code>actions</code> object</a> description. To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\" To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\"</p>",
                "maxItems": 3,
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "maxLength": 20,
                      "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                      "name": "label",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                      "childParamsGroups": []
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 40,
                      "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                      "name": "description",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                      "childParamsGroups": []
                    },
                    "identifier": {
                      "type": "string",
                      "maxLength": 20,
                      "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                      "name": "identifier",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "label",
                    "description",
                    "identifier"
                  ]
                },
                "name": "actions",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\" To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\"",
                "childParamsGroups": [
                  {
                    "parentName": "actions",
                    "parentType": "items",
                    "id": "actions-items",
                    "params": [
                      {
                        "type": "string",
                        "maxLength": 20,
                        "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                        "name": "label",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 40,
                        "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                        "name": "description",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 20,
                        "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                        "name": "identifier",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "name",
              "head_sha"
            ],
            "oneOf": [
              {
                "properties": {
                  "status": {
                    "enum": [
                      "completed"
                    ]
                  }
                },
                "required": [
                  "status",
                  "conclusion"
                ],
                "additionalProperties": true
              },
              {
                "properties": {
                  "status": {
                    "enum": [
                      "queued",
                      "in_progress"
                    ]
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "examples": {
            "example-of-in-progress-conclusion": {
              "summary": "Response for in_progress conclusion",
              "value": {
                "name": "mighty_readme",
                "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
                "status": "in_progress",
                "external_id": "42",
                "started_at": "2018-05-04T01:14:52Z",
                "output": {
                  "title": "Mighty Readme report",
                  "summary": "",
                  "text": ""
                }
              }
            },
            "example-of-completed-conclusion": {
              "summary": "Response for completed conclusion",
              "value": {
                "name": "mighty_readme",
                "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
                "status": "completed",
                "started_at": "2017-11-30T19:39:10Z",
                "conclusion": "success",
                "completed_at": "2017-11-30T19:49:10Z",
                "output": {
                  "title": "Mighty Readme report",
                  "summary": "There are 0 failures, 2 warnings, and 1 notices.",
                  "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                  "annotations": [
                    {
                      "path": "README.md",
                      "annotation_level": "warning",
                      "title": "Spell Checker",
                      "message": "Check your spelling for 'banaas'.",
                      "raw_details": "Do you mean 'bananas' or 'banana'?",
                      "start_line": 2,
                      "end_line": 2
                    },
                    {
                      "path": "README.md",
                      "annotation_level": "warning",
                      "title": "Spell Checker",
                      "message": "Check your spelling for 'aples'",
                      "raw_details": "Do you mean 'apples' or 'Naples'",
                      "start_line": 4,
                      "end_line": 4
                    }
                  ],
                  "images": [
                    {
                      "alt": "Super bananas",
                      "image_url": "http://example.com/images/42"
                    }
                  ]
                },
                "actions": [
                  {
                    "label": "Fix",
                    "identifier": "fix_errors",
                    "description": "Allow us to fix these errors for you"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "create-a-check-run",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array.</p>\n<p>Creates a new check run for a specific commit in a repository. Your GitHub App must have the <code>checks:write</code> permission to create check runs.</p>\n<p>In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response for completed conclusion",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"head_sha\"</span>: <span class=\"hljs-string\">\"ce587453ced02b1526dfb4cb910479d431683101\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6Q2hlY2tSdW40\"</span>,\n  <span class=\"hljs-attr\">\"external_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-runs/4\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/github/hello-world/runs/4\"</span>,\n  <span class=\"hljs-attr\">\"details_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n  <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"completed\"</span>,\n  <span class=\"hljs-attr\">\"conclusion\"</span>: <span class=\"hljs-string\">\"neutral\"</span>,\n  <span class=\"hljs-attr\">\"started_at\"</span>: <span class=\"hljs-string\">\"2018-05-04T01:14:52Z\"</span>,\n  <span class=\"hljs-attr\">\"completed_at\"</span>: <span class=\"hljs-string\">\"2018-05-04T01:14:52Z\"</span>,\n  <span class=\"hljs-attr\">\"output\"</span>: {\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Mighty Readme report\"</span>,\n    <span class=\"hljs-attr\">\"summary\"</span>: <span class=\"hljs-string\">\"There are 0 failures, 2 warnings, and 1 notice.\"</span>,\n    <span class=\"hljs-attr\">\"text\"</span>: <span class=\"hljs-string\">\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\"</span>,\n    <span class=\"hljs-attr\">\"annotations_count\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"annotations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"</span>\n  },\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mighty_readme\"</span>,\n  <span class=\"hljs-attr\">\"check_suite\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">5</span>\n  },\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"octoapp\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkludGVncmF0aW9uMQ==\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Octocat App\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"external_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/apps/octoapp\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"metadata\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n      <span class=\"hljs-attr\">\"single_file\"</span>: <span class=\"hljs-string\">\"write\"</span>\n    },\n    <span class=\"hljs-attr\">\"events\"</span>: [\n      <span class=\"hljs-string\">\"push\"</span>,\n      <span class=\"hljs-string\">\"pull_request\"</span>\n    ]\n  },\n  <span class=\"hljs-attr\">\"pull_requests\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/pulls/1\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1934</span>,\n      <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">3956</span>,\n      <span class=\"hljs-attr\">\"head\"</span>: {\n        <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"say-hello\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\"</span>,\n        <span class=\"hljs-attr\">\"repo\"</span>: {\n          <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">526</span>,\n          <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world\"</span>,\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello-world\"</span>\n        }\n      },\n      <span class=\"hljs-attr\">\"base\"</span>: {\n        <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\"</span>,\n        <span class=\"hljs-attr\">\"repo\"</span>: {\n          <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">526</span>,\n          <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world\"</span>,\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello-world\"</span>\n        }\n      }\n    }\n  ]\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the check. For example, \"code-coverage\".</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the check. For example, \"code-coverage\".",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The SHA of the commit.</p>",
        "name": "head_sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA of the commit.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.</p>",
        "name": "details_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A reference for the run on the integrator's system.</p>",
        "name": "external_id",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A reference for the run on the integrator's system.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The current status. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>",
        "enum": [
          "queued",
          "in_progress",
          "completed"
        ],
        "default": "queued",
        "name": "status",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>The time that the check run began. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "started_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required if you provide <code>completed_at</code> or a <code>status</code> of <code>completed</code></strong>. The final conclusion of the check. Can be one of <code>action_required</code>, <code>cancelled</code>, <code>failure</code>, <code>neutral</code>, <code>success</code>, <code>skipped</code>, <code>stale</code>, or <code>timed_out</code>. When the conclusion is <code>action_required</code>, additional details should be provided on the site specified by <code>details_url</code>.<br>\n<strong>Note:</strong> Providing <code>conclusion</code> will automatically set the <code>status</code> parameter to <code>completed</code>. You cannot change a check run conclusion to <code>stale</code>, only GitHub can set this.</p>",
        "enum": [
          "action_required",
          "cancelled",
          "failure",
          "neutral",
          "success",
          "skipped",
          "stale",
          "timed_out"
        ],
        "name": "conclusion",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>The time the check completed. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "completed_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>Check runs can accept a variety of data in the <code>output</code> object, including a <code>title</code> and <code>summary</code> and can optionally provide descriptive details about the run. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object\"><code>output</code> object</a> description.</p>",
        "properties": {
          "title": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The title of the check run.</p>",
            "name": "title",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The title of the check run.",
            "childParamsGroups": []
          },
          "summary": {
            "type": "string",
            "maxLength": 65535,
            "description": "<p><strong>Required</strong>. The summary of the check run. This parameter supports Markdown.</p>",
            "name": "summary",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The summary of the check run. This parameter supports Markdown.",
            "childParamsGroups": []
          },
          "text": {
            "type": "string",
            "maxLength": 65535,
            "description": "<p>The details of the check run. This parameter supports Markdown.</p>",
            "name": "text",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The details of the check run. This parameter supports Markdown.",
            "childParamsGroups": []
          },
          "annotations": {
            "type": "array of objects",
            "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the <strong>Checks</strong> and <strong>Files changed</strong> tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object\"><code>annotations</code> object</a> description for details about how to use this parameter.</p>",
            "maxItems": 50,
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                  "name": "path",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                  "childParamsGroups": []
                },
                "start_line": {
                  "type": "integer",
                  "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                  "name": "start_line",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The start line of the annotation.",
                  "childParamsGroups": []
                },
                "end_line": {
                  "type": "integer",
                  "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                  "name": "end_line",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The end line of the annotation.",
                  "childParamsGroups": []
                },
                "start_column": {
                  "type": "integer",
                  "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                  "name": "start_column",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                  "childParamsGroups": []
                },
                "end_column": {
                  "type": "integer",
                  "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                  "name": "end_column",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                  "childParamsGroups": []
                },
                "annotation_level": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                  "enum": [
                    "notice",
                    "warning",
                    "failure"
                  ],
                  "name": "annotation_level",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                  "childParamsGroups": []
                },
                "message": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                  "name": "message",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                  "childParamsGroups": []
                },
                "title": {
                  "type": "string",
                  "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                  "name": "title",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                  "childParamsGroups": []
                },
                "raw_details": {
                  "type": "string",
                  "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                  "name": "raw_details",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                  "childParamsGroups": []
                }
              },
              "required": [
                "path",
                "start_line",
                "end_line",
                "annotation_level",
                "message"
              ]
            },
            "name": "annotations",
            "in": "body",
            "rawType": "array",
            "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object) description for details about how to use this parameter.",
            "childParamsGroups": [
              {
                "parentName": "annotations",
                "parentType": "items",
                "id": "annotations-items",
                "params": [
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                    "name": "path",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                    "name": "start_line",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The start line of the annotation.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                    "name": "end_line",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The end line of the annotation.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                    "name": "start_column",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                    "name": "end_column",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                    "enum": [
                      "notice",
                      "warning",
                      "failure"
                    ],
                    "name": "annotation_level",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                    "name": "message",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                    "name": "title",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                    "name": "raw_details",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                    "childParamsGroups": []
                  }
                ]
              }
            ]
          },
          "images": {
            "type": "array of objects",
            "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object\"><code>images</code> object</a> description for details.</p>",
            "items": {
              "type": "object",
              "properties": {
                "alt": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                  "name": "alt",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The alternative text for the image.",
                  "childParamsGroups": []
                },
                "image_url": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                  "name": "image_url",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The full URL of the image.",
                  "childParamsGroups": []
                },
                "caption": {
                  "type": "string",
                  "description": "<p>A short image description.</p>",
                  "name": "caption",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "A short image description.",
                  "childParamsGroups": []
                }
              },
              "required": [
                "alt",
                "image_url"
              ]
            },
            "name": "images",
            "in": "body",
            "rawType": "array",
            "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object) description for details.",
            "childParamsGroups": [
              {
                "parentName": "images",
                "parentType": "items",
                "id": "images-items",
                "params": [
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                    "name": "alt",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The alternative text for the image.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                    "name": "image_url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The full URL of the image.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>A short image description.</p>",
                    "name": "caption",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "A short image description.",
                    "childParamsGroups": []
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "title",
          "summary"
        ],
        "name": "output",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object) description.",
        "childParamsGroups": [
          {
            "parentName": "output",
            "parentType": "object",
            "id": "output-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The title of the check run.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the check run.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 65535,
                "description": "<p><strong>Required</strong>. The summary of the check run. This parameter supports Markdown.</p>",
                "name": "summary",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The summary of the check run. This parameter supports Markdown.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 65535,
                "description": "<p>The details of the check run. This parameter supports Markdown.</p>",
                "name": "text",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The details of the check run. This parameter supports Markdown.",
                "childParamsGroups": []
              },
              {
                "type": "array of objects",
                "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the <strong>Checks</strong> and <strong>Files changed</strong> tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object\"><code>annotations</code> object</a> description for details about how to use this parameter.</p>",
                "maxItems": 50,
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                      "name": "path",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                      "childParamsGroups": []
                    },
                    "start_line": {
                      "type": "integer",
                      "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                      "name": "start_line",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The start line of the annotation.",
                      "childParamsGroups": []
                    },
                    "end_line": {
                      "type": "integer",
                      "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                      "name": "end_line",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The end line of the annotation.",
                      "childParamsGroups": []
                    },
                    "start_column": {
                      "type": "integer",
                      "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                      "name": "start_column",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                      "childParamsGroups": []
                    },
                    "end_column": {
                      "type": "integer",
                      "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                      "name": "end_column",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                      "childParamsGroups": []
                    },
                    "annotation_level": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                      "enum": [
                        "notice",
                        "warning",
                        "failure"
                      ],
                      "name": "annotation_level",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                      "childParamsGroups": []
                    },
                    "message": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                      "name": "message",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                      "childParamsGroups": []
                    },
                    "title": {
                      "type": "string",
                      "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                      "name": "title",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                      "childParamsGroups": []
                    },
                    "raw_details": {
                      "type": "string",
                      "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                      "name": "raw_details",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "path",
                    "start_line",
                    "end_line",
                    "annotation_level",
                    "message"
                  ]
                },
                "name": "annotations",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object) description for details about how to use this parameter.",
                "childParamsGroups": [
                  {
                    "parentName": "annotations",
                    "parentType": "items",
                    "id": "annotations-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                        "name": "start_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                        "name": "end_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "start_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "end_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                        "enum": [
                          "notice",
                          "warning",
                          "failure"
                        ],
                        "name": "annotation_level",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                        "name": "message",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                        "name": "raw_details",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              {
                "type": "array of objects",
                "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object\"><code>images</code> object</a> description for details.</p>",
                "items": {
                  "type": "object",
                  "properties": {
                    "alt": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                      "name": "alt",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The alternative text for the image.",
                      "childParamsGroups": []
                    },
                    "image_url": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                      "name": "image_url",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The full URL of the image.",
                      "childParamsGroups": []
                    },
                    "caption": {
                      "type": "string",
                      "description": "<p>A short image description.</p>",
                      "name": "caption",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short image description.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "alt",
                    "image_url"
                  ]
                },
                "name": "images",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#images-object) description for details.",
                "childParamsGroups": [
                  {
                    "parentName": "images",
                    "parentType": "items",
                    "id": "images-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                        "name": "alt",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The alternative text for the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                        "name": "image_url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The full URL of the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>A short image description.</p>",
                        "name": "caption",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short image description.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "parentName": "annotations",
            "parentType": "items",
            "id": "annotations-items",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                "name": "start_line",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The start line of the annotation.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                "name": "end_line",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The end line of the annotation.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                "name": "start_column",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                "name": "end_column",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                "enum": [
                  "notice",
                  "warning",
                  "failure"
                ],
                "name": "annotation_level",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                "name": "raw_details",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                "childParamsGroups": []
              }
            ]
          },
          {
            "parentName": "images",
            "parentType": "items",
            "id": "images-items",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                "name": "alt",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The alternative text for the image.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                "name": "image_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The full URL of the image.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>A short image description.</p>",
                "name": "caption",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short image description.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of objects",
        "description": "<p>Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_run\"><code>check_run.requested_action</code> webhook</a> to your app. Each action includes a <code>label</code>, <code>identifier</code> and <code>description</code>. A maximum of three actions are accepted. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object\"><code>actions</code> object</a> description. To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\" To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\"</p>",
        "maxItems": 3,
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "maxLength": 20,
              "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
              "name": "label",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
              "childParamsGroups": []
            },
            "description": {
              "type": "string",
              "maxLength": 40,
              "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
              "name": "description",
              "in": "body",
              "rawType": "string",
              "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
              "childParamsGroups": []
            },
            "identifier": {
              "type": "string",
              "maxLength": 20,
              "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
              "name": "identifier",
              "in": "body",
              "rawType": "string",
              "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
              "childParamsGroups": []
            }
          },
          "required": [
            "label",
            "description",
            "identifier"
          ]
        },
        "name": "actions",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\" To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\"",
        "childParamsGroups": [
          {
            "parentName": "actions",
            "parentType": "items",
            "id": "actions-items",
            "params": [
              {
                "type": "string",
                "maxLength": 20,
                "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                "name": "label",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 40,
                "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 20,
                "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                "name": "identifier",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_run_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/check-runs/{check_run_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_run_id: 42,\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/check-runs/{check_run_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_run_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a check run",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#get-a-check-run"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "get-a-check-run",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array.</p>\n<p>Gets a single check run using its <code>id</code>. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the <code>repo</code> scope to get check runs in a private repository.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_run_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_run_id: 42,\n  name: 'name',\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_run_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a check run",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>The name of the check. For example, \"code-coverage\".</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the check. For example, \"code-coverage\".",
                "childParamsGroups": []
              },
              "details_url": {
                "type": "string",
                "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
                "name": "details_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL of the integrator's site that has the full details of the check.",
                "childParamsGroups": []
              },
              "external_id": {
                "type": "string",
                "description": "<p>A reference for the run on the integrator's system.</p>",
                "name": "external_id",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A reference for the run on the integrator's system.",
                "childParamsGroups": []
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "description": "<p>This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "started_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              },
              "status": {
                "type": "string",
                "description": "<p>The current status. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>",
                "enum": [
                  "queued",
                  "in_progress",
                  "completed"
                ],
                "name": "status",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
                "childParamsGroups": []
              },
              "conclusion": {
                "type": "string",
                "description": "<p><strong>Required if you provide <code>completed_at</code> or a <code>status</code> of <code>completed</code></strong>. The final conclusion of the check. Can be one of <code>action_required</code>, <code>cancelled</code>, <code>failure</code>, <code>neutral</code>, <code>success</code>, <code>skipped</code>, <code>stale</code>, or <code>timed_out</code>.<br>\n<strong>Note:</strong> Providing <code>conclusion</code> will automatically set the <code>status</code> parameter to <code>completed</code>. You cannot change a check run conclusion to <code>stale</code>, only GitHub can set this.</p>",
                "enum": [
                  "action_required",
                  "cancelled",
                  "failure",
                  "neutral",
                  "success",
                  "skipped",
                  "stale",
                  "timed_out"
                ],
                "name": "conclusion",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.",
                "childParamsGroups": []
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "description": "<p>The time the check completed. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "completed_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              },
              "output": {
                "type": "object",
                "description": "<p>Check runs can accept a variety of data in the <code>output</code> object, including a <code>title</code> and <code>summary</code> and can optionally provide descriptive details about the run. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object-1\"><code>output</code> object</a> description.</p>",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>.</p>",
                    "name": "title",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "**Required**.",
                    "childParamsGroups": []
                  },
                  "summary": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. Can contain Markdown.</p>",
                    "maxLength": 65535,
                    "name": "summary",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Can contain Markdown.",
                    "childParamsGroups": []
                  },
                  "text": {
                    "type": "string",
                    "description": "<p>Can contain Markdown.</p>",
                    "maxLength": 65535,
                    "name": "text",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Can contain Markdown.",
                    "childParamsGroups": []
                  },
                  "annotations": {
                    "type": "array of objects",
                    "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>annotations</code> object</a> description for details.</p>",
                    "maxItems": 50,
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                          "name": "path",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                          "childParamsGroups": []
                        },
                        "start_line": {
                          "type": "integer",
                          "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                          "name": "start_line",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The start line of the annotation.",
                          "childParamsGroups": []
                        },
                        "end_line": {
                          "type": "integer",
                          "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                          "name": "end_line",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The end line of the annotation.",
                          "childParamsGroups": []
                        },
                        "start_column": {
                          "type": "integer",
                          "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                          "name": "start_column",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                          "childParamsGroups": []
                        },
                        "end_column": {
                          "type": "integer",
                          "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                          "name": "end_column",
                          "in": "body",
                          "rawType": "integer",
                          "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                          "childParamsGroups": []
                        },
                        "annotation_level": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                          "enum": [
                            "notice",
                            "warning",
                            "failure"
                          ],
                          "name": "annotation_level",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                          "childParamsGroups": []
                        },
                        "message": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                          "name": "message",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                          "childParamsGroups": []
                        },
                        "title": {
                          "type": "string",
                          "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                          "name": "title",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                          "childParamsGroups": []
                        },
                        "raw_details": {
                          "type": "string",
                          "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                          "name": "raw_details",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                          "childParamsGroups": []
                        }
                      },
                      "required": [
                        "path",
                        "start_line",
                        "end_line",
                        "annotation_level",
                        "message"
                      ]
                    },
                    "name": "annotations",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                    "childParamsGroups": [
                      {
                        "parentName": "annotations",
                        "parentType": "items",
                        "id": "annotations-items",
                        "params": [
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                            "name": "path",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                            "name": "start_line",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The start line of the annotation.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                            "name": "end_line",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The end line of the annotation.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                            "name": "start_column",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "integer",
                            "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                            "name": "end_column",
                            "in": "body",
                            "rawType": "integer",
                            "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                            "enum": [
                              "notice",
                              "warning",
                              "failure"
                            ],
                            "name": "annotation_level",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                            "name": "message",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                            "name": "title",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                            "name": "raw_details",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                            "childParamsGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "images": {
                    "type": "array of objects",
                    "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>images</code> object</a> description for details.</p>",
                    "items": {
                      "type": "object",
                      "properties": {
                        "alt": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                          "name": "alt",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The alternative text for the image.",
                          "childParamsGroups": []
                        },
                        "image_url": {
                          "type": "string",
                          "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                          "name": "image_url",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "The full URL of the image.",
                          "childParamsGroups": []
                        },
                        "caption": {
                          "type": "string",
                          "description": "<p>A short image description.</p>",
                          "name": "caption",
                          "in": "body",
                          "rawType": "string",
                          "rawDescription": "A short image description.",
                          "childParamsGroups": []
                        }
                      },
                      "required": [
                        "alt",
                        "image_url"
                      ]
                    },
                    "name": "images",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                    "childParamsGroups": [
                      {
                        "parentName": "images",
                        "parentType": "items",
                        "id": "images-items",
                        "params": [
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                            "name": "alt",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The alternative text for the image.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                            "name": "image_url",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "The full URL of the image.",
                            "childParamsGroups": []
                          },
                          {
                            "type": "string",
                            "description": "<p>A short image description.</p>",
                            "name": "caption",
                            "in": "body",
                            "rawType": "string",
                            "rawDescription": "A short image description.",
                            "childParamsGroups": []
                          }
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "summary"
                ],
                "name": "output",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object-1) description.",
                "childParamsGroups": [
                  {
                    "parentName": "output",
                    "parentType": "object",
                    "id": "output-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "**Required**.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. Can contain Markdown.</p>",
                        "maxLength": 65535,
                        "name": "summary",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Can contain Markdown.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Can contain Markdown.</p>",
                        "maxLength": 65535,
                        "name": "text",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Can contain Markdown.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "array of objects",
                        "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>annotations</code> object</a> description for details.</p>",
                        "maxItems": 50,
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                              "name": "path",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                              "childParamsGroups": []
                            },
                            "start_line": {
                              "type": "integer",
                              "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                              "name": "start_line",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The start line of the annotation.",
                              "childParamsGroups": []
                            },
                            "end_line": {
                              "type": "integer",
                              "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                              "name": "end_line",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The end line of the annotation.",
                              "childParamsGroups": []
                            },
                            "start_column": {
                              "type": "integer",
                              "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                              "name": "start_column",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                              "childParamsGroups": []
                            },
                            "end_column": {
                              "type": "integer",
                              "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                              "name": "end_column",
                              "in": "body",
                              "rawType": "integer",
                              "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                              "childParamsGroups": []
                            },
                            "annotation_level": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                              "enum": [
                                "notice",
                                "warning",
                                "failure"
                              ],
                              "name": "annotation_level",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                              "childParamsGroups": []
                            },
                            "message": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                              "name": "message",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                              "childParamsGroups": []
                            },
                            "title": {
                              "type": "string",
                              "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                              "name": "title",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                              "childParamsGroups": []
                            },
                            "raw_details": {
                              "type": "string",
                              "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                              "name": "raw_details",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                              "childParamsGroups": []
                            }
                          },
                          "required": [
                            "path",
                            "start_line",
                            "end_line",
                            "annotation_level",
                            "message"
                          ]
                        },
                        "name": "annotations",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                        "childParamsGroups": [
                          {
                            "parentName": "annotations",
                            "parentType": "items",
                            "id": "annotations-items",
                            "params": [
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                                "name": "path",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                                "name": "start_line",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The start line of the annotation.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                                "name": "end_line",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The end line of the annotation.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                                "name": "start_column",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "integer",
                                "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                                "name": "end_column",
                                "in": "body",
                                "rawType": "integer",
                                "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                                "enum": [
                                  "notice",
                                  "warning",
                                  "failure"
                                ],
                                "name": "annotation_level",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                                "name": "message",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                                "name": "title",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                                "name": "raw_details",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                                "childParamsGroups": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "array of objects",
                        "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>images</code> object</a> description for details.</p>",
                        "items": {
                          "type": "object",
                          "properties": {
                            "alt": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                              "name": "alt",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The alternative text for the image.",
                              "childParamsGroups": []
                            },
                            "image_url": {
                              "type": "string",
                              "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                              "name": "image_url",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "The full URL of the image.",
                              "childParamsGroups": []
                            },
                            "caption": {
                              "type": "string",
                              "description": "<p>A short image description.</p>",
                              "name": "caption",
                              "in": "body",
                              "rawType": "string",
                              "rawDescription": "A short image description.",
                              "childParamsGroups": []
                            }
                          },
                          "required": [
                            "alt",
                            "image_url"
                          ]
                        },
                        "name": "images",
                        "in": "body",
                        "rawType": "array",
                        "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                        "childParamsGroups": [
                          {
                            "parentName": "images",
                            "parentType": "items",
                            "id": "images-items",
                            "params": [
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                                "name": "alt",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The alternative text for the image.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                                "name": "image_url",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "The full URL of the image.",
                                "childParamsGroups": []
                              },
                              {
                                "type": "string",
                                "description": "<p>A short image description.</p>",
                                "name": "caption",
                                "in": "body",
                                "rawType": "string",
                                "rawDescription": "A short image description.",
                                "childParamsGroups": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "parentName": "annotations",
                    "parentType": "items",
                    "id": "annotations-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                        "name": "start_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                        "name": "end_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "start_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "end_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                        "enum": [
                          "notice",
                          "warning",
                          "failure"
                        ],
                        "name": "annotation_level",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                        "name": "message",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                        "name": "raw_details",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      }
                    ]
                  },
                  {
                    "parentName": "images",
                    "parentType": "items",
                    "id": "images-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                        "name": "alt",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The alternative text for the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                        "name": "image_url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The full URL of the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>A short image description.</p>",
                        "name": "caption",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short image description.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "actions": {
                "type": "array of objects",
                "description": "<p>Possible further actions the integrator can perform, which a user may trigger. Each action includes a <code>label</code>, <code>identifier</code> and <code>description</code>. A maximum of three actions are accepted. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object\"><code>actions</code> object</a> description. To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\"</p>",
                "maxItems": 3,
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "maxLength": 20,
                      "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                      "name": "label",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                      "childParamsGroups": []
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 40,
                      "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                      "name": "description",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                      "childParamsGroups": []
                    },
                    "identifier": {
                      "type": "string",
                      "maxLength": 20,
                      "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                      "name": "identifier",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "label",
                    "description",
                    "identifier"
                  ]
                },
                "name": "actions",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\"",
                "childParamsGroups": [
                  {
                    "parentName": "actions",
                    "parentType": "items",
                    "id": "actions-items",
                    "params": [
                      {
                        "type": "string",
                        "maxLength": 20,
                        "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                        "name": "label",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 40,
                        "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                        "name": "description",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "maxLength": 20,
                        "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                        "name": "identifier",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "anyOf": [
              {
                "properties": {
                  "status": {
                    "enum": [
                      "completed"
                    ]
                  }
                },
                "required": [
                  "conclusion"
                ],
                "additionalProperties": true
              },
              {
                "properties": {
                  "status": {
                    "enum": [
                      "queued",
                      "in_progress"
                    ]
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "example": {
            "name": "mighty_readme",
            "started_at": "2018-05-04T01:14:52Z",
            "status": "completed",
            "conclusion": "success",
            "completed_at": "2018-05-04T01:14:52Z",
            "output": {
              "title": "Mighty Readme report",
              "summary": "There are 0 failures, 2 warnings, and 1 notices.",
              "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
              "annotations": [
                {
                  "path": "README.md",
                  "annotation_level": "warning",
                  "title": "Spell Checker",
                  "message": "Check your spelling for 'banaas'.",
                  "raw_details": "Do you mean 'bananas' or 'banana'?",
                  "start_line": 2,
                  "end_line": 2
                },
                {
                  "path": "README.md",
                  "annotation_level": "warning",
                  "title": "Spell Checker",
                  "message": "Check your spelling for 'aples'",
                  "raw_details": "Do you mean 'apples' or 'Naples'",
                  "start_line": 4,
                  "end_line": 4
                }
              ],
              "images": [
                {
                  "alt": "Super bananas",
                  "image_url": "http://example.com/images/42"
                }
              ]
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "update-a-check-run",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array.</p>\n<p>Updates a check run for a specific commit in a repository. Your GitHub App must have the <code>checks:write</code> permission to edit check runs.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"head_sha\"</span>: <span class=\"hljs-string\">\"ce587453ced02b1526dfb4cb910479d431683101\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6Q2hlY2tSdW40\"</span>,\n  <span class=\"hljs-attr\">\"external_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-runs/4\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/github/hello-world/runs/4\"</span>,\n  <span class=\"hljs-attr\">\"details_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n  <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"completed\"</span>,\n  <span class=\"hljs-attr\">\"conclusion\"</span>: <span class=\"hljs-string\">\"neutral\"</span>,\n  <span class=\"hljs-attr\">\"started_at\"</span>: <span class=\"hljs-string\">\"2018-05-04T01:14:52Z\"</span>,\n  <span class=\"hljs-attr\">\"completed_at\"</span>: <span class=\"hljs-string\">\"2018-05-04T01:14:52Z\"</span>,\n  <span class=\"hljs-attr\">\"output\"</span>: {\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Mighty Readme report\"</span>,\n    <span class=\"hljs-attr\">\"summary\"</span>: <span class=\"hljs-string\">\"There are 0 failures, 2 warnings, and 1 notice.\"</span>,\n    <span class=\"hljs-attr\">\"text\"</span>: <span class=\"hljs-string\">\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\"</span>,\n    <span class=\"hljs-attr\">\"annotations_count\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"annotations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"</span>\n  },\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mighty_readme\"</span>,\n  <span class=\"hljs-attr\">\"check_suite\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">5</span>\n  },\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"octoapp\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkludGVncmF0aW9uMQ==\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Octocat App\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"external_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/apps/octoapp\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"metadata\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n      <span class=\"hljs-attr\">\"single_file\"</span>: <span class=\"hljs-string\">\"write\"</span>\n    },\n    <span class=\"hljs-attr\">\"events\"</span>: [\n      <span class=\"hljs-string\">\"push\"</span>,\n      <span class=\"hljs-string\">\"pull_request\"</span>\n    ]\n  },\n  <span class=\"hljs-attr\">\"pull_requests\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/pulls/1\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1934</span>,\n      <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">3956</span>,\n      <span class=\"hljs-attr\">\"head\"</span>: {\n        <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"say-hello\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\"</span>,\n        <span class=\"hljs-attr\">\"repo\"</span>: {\n          <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">526</span>,\n          <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world\"</span>,\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello-world\"</span>\n        }\n      },\n      <span class=\"hljs-attr\">\"base\"</span>: {\n        <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\"</span>,\n        <span class=\"hljs-attr\">\"repo\"</span>: {\n          <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">526</span>,\n          <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world\"</span>,\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello-world\"</span>\n        }\n      }\n    }\n  ]\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The name of the check. For example, \"code-coverage\".</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the check. For example, \"code-coverage\".",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
        "name": "details_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The URL of the integrator's site that has the full details of the check.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A reference for the run on the integrator's system.</p>",
        "name": "external_id",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A reference for the run on the integrator's system.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "started_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The current status. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>",
        "enum": [
          "queued",
          "in_progress",
          "completed"
        ],
        "name": "status",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required if you provide <code>completed_at</code> or a <code>status</code> of <code>completed</code></strong>. The final conclusion of the check. Can be one of <code>action_required</code>, <code>cancelled</code>, <code>failure</code>, <code>neutral</code>, <code>success</code>, <code>skipped</code>, <code>stale</code>, or <code>timed_out</code>.<br>\n<strong>Note:</strong> Providing <code>conclusion</code> will automatically set the <code>status</code> parameter to <code>completed</code>. You cannot change a check run conclusion to <code>stale</code>, only GitHub can set this.</p>",
        "enum": [
          "action_required",
          "cancelled",
          "failure",
          "neutral",
          "success",
          "skipped",
          "stale",
          "timed_out"
        ],
        "name": "conclusion",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>The time the check completed. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "completed_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>Check runs can accept a variety of data in the <code>output</code> object, including a <code>title</code> and <code>summary</code> and can optionally provide descriptive details about the run. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object-1\"><code>output</code> object</a> description.</p>",
        "properties": {
          "title": {
            "type": "string",
            "description": "<p><strong>Required</strong>.</p>",
            "name": "title",
            "in": "body",
            "rawType": "string",
            "rawDescription": "**Required**.",
            "childParamsGroups": []
          },
          "summary": {
            "type": "string",
            "description": "<p><strong>Required</strong>. Can contain Markdown.</p>",
            "maxLength": 65535,
            "name": "summary",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Can contain Markdown.",
            "childParamsGroups": []
          },
          "text": {
            "type": "string",
            "description": "<p>Can contain Markdown.</p>",
            "maxLength": 65535,
            "name": "text",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Can contain Markdown.",
            "childParamsGroups": []
          },
          "annotations": {
            "type": "array of objects",
            "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>annotations</code> object</a> description for details.</p>",
            "maxItems": 50,
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                  "name": "path",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                  "childParamsGroups": []
                },
                "start_line": {
                  "type": "integer",
                  "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                  "name": "start_line",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The start line of the annotation.",
                  "childParamsGroups": []
                },
                "end_line": {
                  "type": "integer",
                  "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                  "name": "end_line",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The end line of the annotation.",
                  "childParamsGroups": []
                },
                "start_column": {
                  "type": "integer",
                  "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                  "name": "start_column",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                  "childParamsGroups": []
                },
                "end_column": {
                  "type": "integer",
                  "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                  "name": "end_column",
                  "in": "body",
                  "rawType": "integer",
                  "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                  "childParamsGroups": []
                },
                "annotation_level": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                  "enum": [
                    "notice",
                    "warning",
                    "failure"
                  ],
                  "name": "annotation_level",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                  "childParamsGroups": []
                },
                "message": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                  "name": "message",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                  "childParamsGroups": []
                },
                "title": {
                  "type": "string",
                  "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                  "name": "title",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                  "childParamsGroups": []
                },
                "raw_details": {
                  "type": "string",
                  "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                  "name": "raw_details",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                  "childParamsGroups": []
                }
              },
              "required": [
                "path",
                "start_line",
                "end_line",
                "annotation_level",
                "message"
              ]
            },
            "name": "annotations",
            "in": "body",
            "rawType": "array",
            "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
            "childParamsGroups": [
              {
                "parentName": "annotations",
                "parentType": "items",
                "id": "annotations-items",
                "params": [
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                    "name": "path",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                    "name": "start_line",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The start line of the annotation.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                    "name": "end_line",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The end line of the annotation.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                    "name": "start_column",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "integer",
                    "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                    "name": "end_column",
                    "in": "body",
                    "rawType": "integer",
                    "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                    "enum": [
                      "notice",
                      "warning",
                      "failure"
                    ],
                    "name": "annotation_level",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                    "name": "message",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                    "name": "title",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                    "name": "raw_details",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                    "childParamsGroups": []
                  }
                ]
              }
            ]
          },
          "images": {
            "type": "array of objects",
            "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>images</code> object</a> description for details.</p>",
            "items": {
              "type": "object",
              "properties": {
                "alt": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                  "name": "alt",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The alternative text for the image.",
                  "childParamsGroups": []
                },
                "image_url": {
                  "type": "string",
                  "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                  "name": "image_url",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "The full URL of the image.",
                  "childParamsGroups": []
                },
                "caption": {
                  "type": "string",
                  "description": "<p>A short image description.</p>",
                  "name": "caption",
                  "in": "body",
                  "rawType": "string",
                  "rawDescription": "A short image description.",
                  "childParamsGroups": []
                }
              },
              "required": [
                "alt",
                "image_url"
              ]
            },
            "name": "images",
            "in": "body",
            "rawType": "array",
            "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
            "childParamsGroups": [
              {
                "parentName": "images",
                "parentType": "items",
                "id": "images-items",
                "params": [
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                    "name": "alt",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The alternative text for the image.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                    "name": "image_url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The full URL of the image.",
                    "childParamsGroups": []
                  },
                  {
                    "type": "string",
                    "description": "<p>A short image description.</p>",
                    "name": "caption",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "A short image description.",
                    "childParamsGroups": []
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "summary"
        ],
        "name": "output",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#output-object-1) description.",
        "childParamsGroups": [
          {
            "parentName": "output",
            "parentType": "object",
            "id": "output-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required**.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. Can contain Markdown.</p>",
                "maxLength": 65535,
                "name": "summary",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Can contain Markdown.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Can contain Markdown.</p>",
                "maxLength": 65535,
                "name": "text",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Can contain Markdown.",
                "childParamsGroups": []
              },
              {
                "type": "array of objects",
                "description": "<p>Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run\">Update a check run</a> endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"<a href=\"https://help.github.com/articles/about-status-checks#checks\">About status checks</a>\". See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>annotations</code> object</a> description for details.</p>",
                "maxItems": 50,
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                      "name": "path",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                      "childParamsGroups": []
                    },
                    "start_line": {
                      "type": "integer",
                      "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                      "name": "start_line",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The start line of the annotation.",
                      "childParamsGroups": []
                    },
                    "end_line": {
                      "type": "integer",
                      "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                      "name": "end_line",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The end line of the annotation.",
                      "childParamsGroups": []
                    },
                    "start_column": {
                      "type": "integer",
                      "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                      "name": "start_column",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                      "childParamsGroups": []
                    },
                    "end_column": {
                      "type": "integer",
                      "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                      "name": "end_column",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                      "childParamsGroups": []
                    },
                    "annotation_level": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                      "enum": [
                        "notice",
                        "warning",
                        "failure"
                      ],
                      "name": "annotation_level",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                      "childParamsGroups": []
                    },
                    "message": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                      "name": "message",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                      "childParamsGroups": []
                    },
                    "title": {
                      "type": "string",
                      "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                      "name": "title",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                      "childParamsGroups": []
                    },
                    "raw_details": {
                      "type": "string",
                      "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                      "name": "raw_details",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "path",
                    "start_line",
                    "end_line",
                    "annotation_level",
                    "message"
                  ]
                },
                "name": "annotations",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                "childParamsGroups": [
                  {
                    "parentName": "annotations",
                    "parentType": "items",
                    "id": "annotations-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                        "name": "start_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                        "name": "end_line",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end line of the annotation.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "start_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                        "name": "end_column",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                        "enum": [
                          "notice",
                          "warning",
                          "failure"
                        ],
                        "name": "annotation_level",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                        "name": "message",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                        "name": "title",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                        "name": "raw_details",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              {
                "type": "array of objects",
                "description": "<p>Adds images to the output displayed in the GitHub pull request UI. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1\"><code>images</code> object</a> description for details.</p>",
                "items": {
                  "type": "object",
                  "properties": {
                    "alt": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                      "name": "alt",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The alternative text for the image.",
                      "childParamsGroups": []
                    },
                    "image_url": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                      "name": "image_url",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The full URL of the image.",
                      "childParamsGroups": []
                    },
                    "caption": {
                      "type": "string",
                      "description": "<p>A short image description.</p>",
                      "name": "caption",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "A short image description.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "alt",
                    "image_url"
                  ]
                },
                "name": "images",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#annotations-object-1) description for details.",
                "childParamsGroups": [
                  {
                    "parentName": "images",
                    "parentType": "items",
                    "id": "images-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                        "name": "alt",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The alternative text for the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                        "name": "image_url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The full URL of the image.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>A short image description.</p>",
                        "name": "caption",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "A short image description.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "parentName": "annotations",
            "parentType": "items",
            "id": "annotations-items",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The path of the file to add an annotation to. For example, <code>assets/css/main.css</code>.</p>",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p><strong>Required</strong>. The start line of the annotation.</p>",
                "name": "start_line",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The start line of the annotation.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p><strong>Required</strong>. The end line of the annotation.</p>",
                "name": "end_line",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The end line of the annotation.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>The start column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                "name": "start_column",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>The end column of the annotation. Annotations only support <code>start_column</code> and <code>end_column</code> on the same line. Omit this parameter if <code>start_line</code> and <code>end_line</code> have different values.</p>",
                "name": "end_column",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The level of the annotation. Can be one of <code>notice</code>, <code>warning</code>, or <code>failure</code>.</p>",
                "enum": [
                  "notice",
                  "warning",
                  "failure"
                ],
                "name": "annotation_level",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. A short description of the feedback for these lines of code. The maximum size is 64 KB.</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The title that represents the annotation. The maximum size is 255 characters.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title that represents the annotation. The maximum size is 255 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Details about this annotation. The maximum size is 64 KB.</p>",
                "name": "raw_details",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Details about this annotation. The maximum size is 64 KB.",
                "childParamsGroups": []
              }
            ]
          },
          {
            "parentName": "images",
            "parentType": "items",
            "id": "images-items",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The alternative text for the image.</p>",
                "name": "alt",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The alternative text for the image.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The full URL of the image.</p>",
                "name": "image_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The full URL of the image.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>A short image description.</p>",
                "name": "caption",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short image description.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of objects",
        "description": "<p>Possible further actions the integrator can perform, which a user may trigger. Each action includes a <code>label</code>, <code>identifier</code> and <code>description</code>. A maximum of three actions are accepted. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object\"><code>actions</code> object</a> description. To learn more about check runs and requested actions, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions\">Check runs and requested actions</a>.\"</p>",
        "maxItems": 3,
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "maxLength": 20,
              "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
              "name": "label",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
              "childParamsGroups": []
            },
            "description": {
              "type": "string",
              "maxLength": 40,
              "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
              "name": "description",
              "in": "body",
              "rawType": "string",
              "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
              "childParamsGroups": []
            },
            "identifier": {
              "type": "string",
              "maxLength": 20,
              "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
              "name": "identifier",
              "in": "body",
              "rawType": "string",
              "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
              "childParamsGroups": []
            }
          },
          "required": [
            "label",
            "description",
            "identifier"
          ]
        },
        "name": "actions",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs-and-requested-actions).\"",
        "childParamsGroups": [
          {
            "parentName": "actions",
            "parentType": "items",
            "id": "actions-items",
            "params": [
              {
                "type": "string",
                "maxLength": 20,
                "description": "<p><strong>Required</strong>. The text to be displayed on a button in the web UI. The maximum size is 20 characters.</p>",
                "name": "label",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 40,
                "description": "<p><strong>Required</strong>. A short explanation of what this action would do. The maximum size is 40 characters.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short explanation of what this action would do. The maximum size is 40 characters.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "maxLength": 20,
                "description": "<p><strong>Required</strong>. A reference for the action on the integrator's system. The maximum size is 20 characters.</p>",
                "name": "identifier",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_run_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42/annotations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-runs/42/annotations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_run_id: 42,\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_run_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List check run annotations",
    "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/list-annotations",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-run-annotations"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "list-check-run-annotations",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists annotations for a check run using the annotation <code>id</code>. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the <code>repo</code> scope to get annotations for a check run in a private repository.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/check-suites",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites \\\n  -d '{\"head_sha\":\"head_sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites \\\n  -d '{\"head_sha\":\"head_sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/check-suites', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  head_sha: 'head_sha',\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/check-suites'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">head_sha</span>: <span class=\"hljs-string\">'head_sha'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a check suite",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/create-suite",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-suite"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "head_sha": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The sha of the head commit.</p>",
                "name": "head_sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The sha of the head commit.",
                "childParamsGroups": []
              }
            },
            "required": [
              "head_sha"
            ]
          },
          "example": {
            "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "suites"
    },
    "slug": "create-a-check-suite",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "suites",
    "subcategoryLabel": "Suites",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array and a <code>null</code> value for <code>head_branch</code>.</p>\n<p>By default, check suites are automatically created when you create a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs\">check run</a>. You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-repository-preferences-for-check-suites\">Update repository preferences for check suites</a>\". Your GitHub App must have the <code>checks:write</code> permission to create check suites.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The sha of the head commit.</p>",
        "name": "head_sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The sha of the head commit.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "when the suite already existed",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">5</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOkNoZWNrU3VpdGU1\"</span>,\n  <span class=\"hljs-attr\">\"head_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"head_sha\"</span>: <span class=\"hljs-string\">\"d6fde92930d4715a2b49857d24b940956b26d2d3\"</span>,\n  <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"completed\"</span>,\n  <span class=\"hljs-attr\">\"conclusion\"</span>: <span class=\"hljs-string\">\"neutral\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-suites/5\"</span>,\n  <span class=\"hljs-attr\">\"before\"</span>: <span class=\"hljs-string\">\"146e867f55c26428e5f9fade55a9bbf5e95a7912\"</span>,\n  <span class=\"hljs-attr\">\"after\"</span>: <span class=\"hljs-string\">\"d6fde92930d4715a2b49857d24b940956b26d2d3\"</span>,\n  <span class=\"hljs-attr\">\"pull_requests\"</span>: [],\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"octoapp\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkludGVncmF0aW9uMQ==\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Octocat App\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"external_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/apps/octoapp\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"metadata\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n      <span class=\"hljs-attr\">\"single_file\"</span>: <span class=\"hljs-string\">\"write\"</span>\n    },\n    <span class=\"hljs-attr\">\"events\"</span>: [\n      <span class=\"hljs-string\">\"push\"</span>,\n      <span class=\"hljs-string\">\"pull_request\"</span>\n    ]\n  },\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"template_repository\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n      },\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"temp_clone_token\"</span>: <span class=\"hljs-string\">\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\"</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"delete_branch_on_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>\n    },\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"head_commit\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-string\">\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\"</span>,\n    <span class=\"hljs-attr\">\"tree_id\"</span>: <span class=\"hljs-string\">\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\"</span>,\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\"</span>,\n    <span class=\"hljs-attr\">\"timestamp\"</span>: <span class=\"hljs-string\">\"2016-10-10T00:00:00Z\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"The Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@nowhere.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"The Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@nowhere.com\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"latest_check_runs_count\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"check_runs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response when the suite was created",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">5</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOkNoZWNrU3VpdGU1\"</span>,\n  <span class=\"hljs-attr\">\"head_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"head_sha\"</span>: <span class=\"hljs-string\">\"d6fde92930d4715a2b49857d24b940956b26d2d3\"</span>,\n  <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"completed\"</span>,\n  <span class=\"hljs-attr\">\"conclusion\"</span>: <span class=\"hljs-string\">\"neutral\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/hello-world/check-suites/5\"</span>,\n  <span class=\"hljs-attr\">\"before\"</span>: <span class=\"hljs-string\">\"146e867f55c26428e5f9fade55a9bbf5e95a7912\"</span>,\n  <span class=\"hljs-attr\">\"after\"</span>: <span class=\"hljs-string\">\"d6fde92930d4715a2b49857d24b940956b26d2d3\"</span>,\n  <span class=\"hljs-attr\">\"pull_requests\"</span>: [],\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n  <span class=\"hljs-attr\">\"app\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"octoapp\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOkludGVncmF0aW9uMQ==\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Octocat App\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"external_url\"</span>: <span class=\"hljs-string\">\"https://example.com\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/apps/octoapp\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-07-08T16:18:44-04:00\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"metadata\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"contents\"</span>: <span class=\"hljs-string\">\"read\"</span>,\n      <span class=\"hljs-attr\">\"issues\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n      <span class=\"hljs-attr\">\"single_file\"</span>: <span class=\"hljs-string\">\"write\"</span>\n    },\n    <span class=\"hljs-attr\">\"events\"</span>: [\n      <span class=\"hljs-string\">\"push\"</span>,\n      <span class=\"hljs-string\">\"pull_request\"</span>\n    ]\n  },\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"template_repository\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n      },\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"temp_clone_token\"</span>: <span class=\"hljs-string\">\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\"</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"delete_branch_on_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>\n    },\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"head_commit\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-string\">\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\"</span>,\n    <span class=\"hljs-attr\">\"tree_id\"</span>: <span class=\"hljs-string\">\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\"</span>,\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\"</span>,\n    <span class=\"hljs-attr\">\"timestamp\"</span>: <span class=\"hljs-string\">\"2016-10-10T00:00:00Z\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"The Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@nowhere.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"The Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@nowhere.com\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"latest_check_runs_count\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"check_runs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/check-suites/preferences",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/preferences \\\n  -d '{\"auto_trigger_checks\":[{\"app_id\":42,\"setting\":true}]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/preferences \\\n  -d '{\"auto_trigger_checks\":[{\"app_id\":42,\"setting\":true}]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/check-suites/preferences', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  auto_trigger_checks: [\n    {\n      app_id: 42,\n      setting: true\n    }\n  ],\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/check-suites/preferences'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">auto_trigger_checks</span>: [\n    {\n      <span class=\"hljs-attr\">app_id</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">setting</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update repository preferences for check suites",
    "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/set-suites-preferences",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-repository-preferences-for-check-suites"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "auto_trigger_checks": {
                "type": "array of objects",
                "description": "<p>Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#auto_trigger_checks-object\"><code>auto_trigger_checks</code> object</a> description for details.</p>",
                "items": {
                  "type": "object",
                  "properties": {
                    "app_id": {
                      "type": "integer",
                      "description": "<p><strong>Required</strong>. The <code>id</code> of the GitHub App.</p>",
                      "name": "app_id",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The `id` of the GitHub App.",
                      "childParamsGroups": []
                    },
                    "setting": {
                      "type": "boolean",
                      "description": "<p><strong>Required</strong>. Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository, or <code>false</code> to disable them.</p>",
                      "default": true,
                      "name": "setting",
                      "in": "body",
                      "rawType": "boolean",
                      "rawDescription": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "app_id",
                    "setting"
                  ]
                },
                "name": "auto_trigger_checks",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#auto_trigger_checks-object) description for details.",
                "childParamsGroups": [
                  {
                    "parentName": "auto_trigger_checks",
                    "parentType": "items",
                    "id": "auto_trigger_checks-items",
                    "params": [
                      {
                        "type": "integer",
                        "description": "<p><strong>Required</strong>. The <code>id</code> of the GitHub App.</p>",
                        "name": "app_id",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The `id` of the GitHub App.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "boolean",
                        "description": "<p><strong>Required</strong>. Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository, or <code>false</code> to disable them.</p>",
                        "default": true,
                        "name": "setting",
                        "in": "body",
                        "rawType": "boolean",
                        "rawDescription": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            }
          },
          "example": {
            "auto_trigger_checks": [
              {
                "app_id": 4,
                "setting": false
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "suites"
    },
    "slug": "update-repository-preferences-for-check-suites",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "suites",
    "subcategoryLabel": "Suites",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-suite\">Create a check suite</a>. You must have admin permissions in the repository to set preferences for check suites.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"preferences\"</span>: {\n    <span class=\"hljs-attr\">\"auto_trigger_checks\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"app_id\"</span>: <span class=\"hljs-number\">2</span>,\n        <span class=\"hljs-attr\">\"setting\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">\"app_id\"</span>: <span class=\"hljs-number\">4</span>,\n        <span class=\"hljs-attr\">\"setting\"</span>: <span class=\"hljs-literal\">false</span>\n      }\n    ]\n  },\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"template_repository\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World-Template\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n      },\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"temp_clone_token\"</span>: <span class=\"hljs-string\">\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\"</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"delete_branch_on_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>\n    },\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      }
    ],
    "bodyParameters": [
      {
        "type": "array of objects",
        "description": "<p>Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/checks#auto_trigger_checks-object\"><code>auto_trigger_checks</code> object</a> description for details.</p>",
        "items": {
          "type": "object",
          "properties": {
            "app_id": {
              "type": "integer",
              "description": "<p><strong>Required</strong>. The <code>id</code> of the GitHub App.</p>",
              "name": "app_id",
              "in": "body",
              "rawType": "integer",
              "rawDescription": "The `id` of the GitHub App.",
              "childParamsGroups": []
            },
            "setting": {
              "type": "boolean",
              "description": "<p><strong>Required</strong>. Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository, or <code>false</code> to disable them.</p>",
              "default": true,
              "name": "setting",
              "in": "body",
              "rawType": "boolean",
              "rawDescription": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
              "childParamsGroups": []
            }
          },
          "required": [
            "app_id",
            "setting"
          ]
        },
        "name": "auto_trigger_checks",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#auto_trigger_checks-object) description for details.",
        "childParamsGroups": [
          {
            "parentName": "auto_trigger_checks",
            "parentType": "items",
            "id": "auto_trigger_checks-items",
            "params": [
              {
                "type": "integer",
                "description": "<p><strong>Required</strong>. The <code>id</code> of the GitHub App.</p>",
                "name": "app_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The `id` of the GitHub App.",
                "childParamsGroups": []
              },
              {
                "type": "boolean",
                "description": "<p><strong>Required</strong>. Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository, or <code>false</code> to disable them.</p>",
                "default": true,
                "name": "setting",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/check-suites/{check_suite_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_suite_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/check-suites/{check_suite_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_suite_id: 42,\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/check-suites/{check_suite_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_suite_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a check suite",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/get-suite",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#get-a-check-suite"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "suites"
    },
    "slug": "get-a-check-suite",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "suites",
    "subcategoryLabel": "Suites",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array and a <code>null</code> value for <code>head_branch</code>.</p>\n<p>Gets a single check suite using its <code>id</code>. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the <code>repo</code> scope to get check suites in a private repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_suite_id parameter</p>"
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Returns check runs with the specified <code>name</code>.</p>"
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ]
        },
        "descriptionHTML": "<p>Returns check runs with the specified <code>status</code>. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>"
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "latest",
            "all"
          ],
          "default": "latest"
        },
        "descriptionHTML": "<p>Filters check runs by their <code>completed_at</code> timestamp. Can be one of <code>latest</code> (returning the most recent check runs) or <code>all</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42/check-runs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42/check-runs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_suite_id: 42,\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_suite_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List check runs in a check suite",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/list-for-suite",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-runs-in-a-check-suite"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "list-check-runs-in-a-check-suite",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array.</p>\n<p>Lists check runs for a check suite using its <code>id</code>. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the <code>repo</code> scope to get check runs in a private repository.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>check_suite_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42/rerequest",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/check-suites/42/rerequest</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  check_suite_id: 42,\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">check_suite_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Rerequest a check suite",
    "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/rerequest-suite",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#rerequest-a-check-suite"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "suites"
    },
    "slug": "rerequest-a-check-suite",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "suites",
    "subcategoryLabel": "Suites",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_suite\"><code>check_suite</code> webhook</a> event with the action <code>rerequested</code>. When a check suite is <code>rerequested</code>, its <code>status</code> is reset to <code>queued</code> and the <code>conclusion</code> is cleared.</p>\n<p>To rerequest a check suite, your GitHub App must have the <code>checks:read</code> permission on a private repository or pull access to a public repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/collaborators",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "affiliation",
        "description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filter collaborators returned by their affiliation. Can be one of:<br>\n* <code>outside</code>: All outside collaborators of an organization-owned repository.<br>\n* <code>direct</code>: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.<br>\n* <code>all</code>: All collaborators the authenticated user can see.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/collaborators', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/collaborators'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository collaborators",
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-collaborators",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-collaborators"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "collaborators"
    },
    "slug": "list-repository-collaborators",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.</p>\n<p>Team members will include the members of child teams.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/collaborators/{username}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a user is a repository collaborator",
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/check-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#check-if-a-user-is-a-repository-collaborator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "collaborators"
    },
    "slug": "check-if-a-user-is-a-repository-collaborator",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if user is a collaborator"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if user is not a collaborator"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.</p>\n<p>Team members will include the members of child teams.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME \\\n  -d '{\"permission\":\"permission\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME \\\n  -d '{\"permission\":\"permission\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/collaborators/{username}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  username: 'username',\n  permission: 'permission'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">permission</span>: <span class=\"hljs-string\">'permission'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add a repository collaborator",
    "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nFor more information the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#invitations).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/add-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-a-repository-collaborator"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "permission": {
                "type": "string",
                "description": "<p>The permission to grant the collaborator. <strong>Only valid on organization-owned repositories.</strong> Can be one of:<br>\n* <code>pull</code> - can pull, but not push to or administer this repository.<br>\n* <code>push</code> - can pull and push, but not administer this repository.<br>\n* <code>admin</code> - can pull, push and administer this repository.<br>\n* <code>maintain</code> - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.<br>\n* <code>triage</code> - Recommended for contributors who need to proactively manage issues and pull requests without write access.</p>",
                "enum": [
                  "pull",
                  "push",
                  "admin",
                  "maintain",
                  "triage"
                ],
                "default": "push",
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.  \n\\* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  \n\\* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.",
                "childParamsGroups": []
              },
              "permissions": {
                "type": "string",
                "example": "\"push\"",
                "name": "permissions",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "collaborators"
    },
    "slug": "add-a-repository-collaborator",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>\n<p>For more information the permission levels, see \"<a href=\"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization\">Repository permission levels for an organization</a>\".</p>\n<p>Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>\n<p>The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#invitations\">repository invitations API endpoints</a>.</p>\n<p><strong>Rate limits</strong></p>\n<p>To prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The permission to grant the collaborator. <strong>Only valid on organization-owned repositories.</strong> Can be one of:<br>\n* <code>pull</code> - can pull, but not push to or administer this repository.<br>\n* <code>push</code> - can pull and push, but not administer this repository.<br>\n* <code>admin</code> - can pull, push and administer this repository.<br>\n* <code>maintain</code> - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.<br>\n* <code>triage</code> - Recommended for contributors who need to proactively manage issues and pull requests without write access.</p>",
        "enum": [
          "pull",
          "push",
          "admin",
          "maintain",
          "triage"
        ],
        "default": "push",
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.  \n\\* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  \n\\* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"push\"",
        "name": "permissions",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response when a new invitation is created",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"http://api.github.com/repos/octocat/Hello-World/hooks\"</span>\n  },\n  <span class=\"hljs-attr\">\"invitee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"inviter\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"permissions\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-06-13T14:52:50-05:00\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/user/repository_invitations/1296269\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/invitations\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response when person is already a collaborator"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/collaborators/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/collaborators/{username}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/collaborators/{username}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove a repository collaborator",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/remove-collaborator",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-a-repository-collaborator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "collaborators"
    },
    "slug": "remove-a-repository-collaborator",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/collaborators/{username}/permission",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME/permission",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/collaborators/USERNAME/permission</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/collaborators/{username}/permission', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/collaborators/{username}/permission'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get repository permissions for a user",
    "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-collaborator-permission-level",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-permissions-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "collaborators"
    },
    "slug": "get-repository-permissions-for-a-user",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "collaborators",
    "subcategoryLabel": "Collaborators",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if user has admin permissions"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Checks the repository permission of a collaborator. The possible repository permissions are <code>admin</code>, <code>write</code>, <code>read</code>, and <code>none</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List commit comments for a repository",
    "description": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/).\n\nComments are ordered by ascending ID.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-commit-comments-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-comments-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "list-commit-comments-for-a-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Commit Comments use <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types\">these custom media types</a>. You can read more about the use of media types in the API <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">here</a>.</p>\n<p>Comments are ordered by ascending ID.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a commit comment",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-commit-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "get-a-commit-comment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a commit comment",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-commit-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The contents of the comment</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the comment",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Nice change"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "update-a-commit-comment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The contents of the comment</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the comment",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEzOkNvbW1pdENvbW1lbnQx\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Nice change\"</span>,\n  <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n  <span class=\"hljs-attr\">\"position\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"line\"</span>: <span class=\"hljs-number\">14</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a commit comment",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-commit-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "delete-a-commit-comment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a commit comment.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to a commit comment.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for a commit comment",
    "description": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments).",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/list-for-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-a-commit-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-a-commit-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments\">commit comment</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for a commit comment",
    "description": "Create a reaction to a [commit comment](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/create-for-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-a-commit-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the commit comment.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the commit comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-a-commit-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments\">commit comment</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this commit comment.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the commit comment.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the commit comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Reaction exists",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Reaction created",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sha",
        "description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>SHA or branch to start listing commits from. Default: the repository’s default branch (usually <code>master</code>).</p>"
      },
      {
        "name": "path",
        "description": "Only commits containing this file path will be returned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Only commits containing this file path will be returned.</p>"
      },
      {
        "name": "author",
        "description": "GitHub login or email address by which to filter by commit author.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>GitHub login or email address by which to filter by commit author.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "until",
        "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only commits before this date will be returned. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List commits",
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-commits",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "commits"
    },
    "slug": "list-commits",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "400",
        "httpStatusMessage": "Bad Request",
        "description": "Bad Request"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "500",
        "httpStatusMessage": "Internal Server Error",
        "description": "Internal Error"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>commit_sha parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.groot-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/branches-where-head",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.groot-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/branches-where-head</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha',\n  mediaType: {\n    previews: [\n      'groot'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">commit_sha</span>: <span class=\"hljs-string\">'commit_sha'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'groot'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List branches for HEAD commit",
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-branches-for-head-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-branches-for-head-commit"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "groot",
          "note": "Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.groot-preview+json\n```",
          "html": "<p>Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/\">blog post</a> for more details. To access the new endpoints during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.groot-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "commits"
    },
    "slug": "list-branches-for-head-commit",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>commit_sha parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{commit_sha}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{commit_sha}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">commit_sha</span>: <span class=\"hljs-string\">'commit_sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List commit comments",
    "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-comments-for-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-comments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "list-commit-comments",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Use the <code>:commit_sha</code> to specify the commit that will have its comments listed.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>commit_sha parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/comments \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/comments \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/commits/{commit_sha}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha',\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/commits/{commit_sha}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">commit_sha</span>: <span class=\"hljs-string\">'commit_sha'</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a commit comment",
    "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-commit-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-commit-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the comment.",
                "childParamsGroups": []
              },
              "path": {
                "type": "string",
                "description": "<p>Relative path of the file to comment on.</p>",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Relative path of the file to comment on.",
                "childParamsGroups": []
              },
              "position": {
                "type": "integer",
                "description": "<p>Line index in the diff to comment on.</p>",
                "name": "position",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "Line index in the diff to comment on.",
                "childParamsGroups": []
              },
              "line": {
                "type": "integer",
                "description": "<p><strong>Deprecated</strong>. Use <strong>position</strong> parameter instead. Line number in the file to comment on.</p>",
                "name": "line",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Great stuff",
            "path": "file1.txt",
            "position": 4,
            "line": 1
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "comments"
    },
    "slug": "create-a-commit-comment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a comment for a commit using its <code>:commit_sha</code>.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the comment.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Relative path of the file to comment on.</p>",
        "name": "path",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Relative path of the file to comment on.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p>Line index in the diff to comment on.</p>",
        "name": "position",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "Line index in the diff to comment on.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p><strong>Deprecated</strong>. Use <strong>position</strong> parameter instead. Line number in the file to comment on.</p>",
        "name": "line",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEzOkNvbW1pdENvbW1lbnQx\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Great stuff\"</span>,\n  <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n  <span class=\"hljs-attr\">\"position\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"line\"</span>: <span class=\"hljs-number\">14</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{commit_sha}/pulls",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>commit_sha parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.groot-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/pulls",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.groot-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/COMMIT_SHA/pulls</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha',\n  mediaType: {\n    previews: [\n      'groot'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">commit_sha</span>: <span class=\"hljs-string\">'commit_sha'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'groot'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List pull requests associated with a commit",
    "description": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests) endpoint.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-pull-requests-associated-with-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-pull-requests-associated-with-a-commit"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "groot",
          "note": "Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.groot-preview+json\n```",
          "html": "<p>Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/\">blog post</a> for more details. To access the new endpoints during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.groot-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "commits"
    },
    "slug": "list-pull-requests-associated-with-a-commit",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a> endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{ref}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{ref}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{ref}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a commit",
    "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-commit"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "commits"
    },
    "slug": "get-a-commit",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "500",
        "httpStatusMessage": "Internal Server Error",
        "description": "Internal Error"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the contents of a single commit reference. You must have <code>read</code> access for the repository to use this endpoint.</p>\n<p><strong>Note:</strong> If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.</p>\n<p>You can pass the appropriate <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests\">media type</a> to  fetch <code>diff</code> and <code>patch</code> formats. Diffs with binary data will have no <code>patch</code> property.</p>\n<p>To return only the SHA-1 hash of the commit reference, you can provide the <code>sha</code> custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests\">media type</a> in the <code>Accept</code> header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.</p>\n<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{ref}/check-runs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Returns check runs with the specified <code>name</code>.</p>"
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ]
        },
        "descriptionHTML": "<p>Returns check runs with the specified <code>status</code>. Can be one of <code>queued</code>, <code>in_progress</code>, or <code>completed</code>.</p>"
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "latest",
            "all"
          ],
          "default": "latest"
        },
        "descriptionHTML": "<p>Filters check runs by their <code>completed_at</code> timestamp. Can be one of <code>latest</code> (returning the most recent check runs) or <code>all</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "app_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/check-runs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/check-runs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{ref}/check-runs', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref',\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{ref}/check-runs'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List check runs for a Git reference",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/list-for-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-runs-for-a-git-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "runs"
    },
    "slug": "list-check-runs-for-a-git-reference",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "runs",
    "subcategoryLabel": "Runs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array.</p>\n<p>Lists check runs for a commit ref. The <code>ref</code> can be a SHA, branch name, or a tag name. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the <code>repo</code> scope to get check runs in a private repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{ref}/check-suites",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      },
      {
        "name": "app_id",
        "description": "Filters check suites by GitHub App `id`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 1,
        "descriptionHTML": "<p>Filters check suites by GitHub App <code>id</code>.</p>"
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Returns check runs with the specified <code>name</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/check-suites",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/check-suites</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{ref}/check-suites', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref',\n  mediaType: {\n    previews: [\n      'antiope'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{ref}/check-suites'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'antiope'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List check suites for a Git reference",
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "tags": [
      "checks"
    ],
    "operationId": "checks/list-suites-for-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-suites-for-a-git-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "antiope",
          "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```",
          "html": "<p>The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.antiope-preview+json</code></pre>"
        }
      ],
      "category": "checks",
      "subcategory": "suites"
    },
    "slug": "list-check-suites-for-a-git-reference",
    "category": "checks",
    "categoryLabel": "Checks",
    "subcategory": "suites",
    "subcategoryLabel": "Suites",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty <code>pull_requests</code> array and a <code>null</code> value for <code>head_branch</code>.</p>\n<p>Lists check suites for a commit <code>ref</code>. The <code>ref</code> can be a SHA, branch name, or a tag name. GitHub Apps must have the <code>checks:read</code> permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the <code>repo</code> scope to get check suites in a private repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{ref}/status",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/status",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/status</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{ref}/status', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{ref}/status'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the combined status for a specific reference",
    "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-combined-status-for-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-combined-status-for-a-specific-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statuses"
    },
    "slug": "get-the-combined-status-for-a-specific-reference",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statuses",
    "subcategoryLabel": "Statuses",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.</p>\n<p>The most recent status for each context is returned, up to 100. This field <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">paginates</a> if there are over 100 contexts.</p>\n<p>Additionally, a combined <code>state</code> is returned. The <code>state</code> is one of:</p>\n<ul>\n<li><strong>failure</strong> if any of the contexts report as <code>error</code> or <code>failure</code></li>\n<li><strong>pending</strong> if there are no statuses or a context is <code>pending</code></li>\n<li><strong>success</strong> if the latest status for all contexts is <code>success</code></li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/commits/{ref}/statuses",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/statuses",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/commits/REF/statuses</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/commits/{ref}/statuses', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/commits/{ref}/statuses'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List commit statuses for a reference",
    "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-commit-statuses-for-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-statuses-for-a-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statuses"
    },
    "slug": "list-commit-statuses-for-a-reference",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statuses",
    "subcategoryLabel": "Statuses",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.</p>\n<p>This resource is also available via a legacy route: <code>GET /repos/:owner/:repo/statuses/:ref</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/compare/{basehead}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "basehead",
        "description": "The base branch and head branch to compare. This parameter expects the format `{base}...{head}`.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The base branch and head branch to compare. This parameter expects the format <code>{base}...{head}</code>.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/compare/BASEHEAD",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/compare/BASEHEAD</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/compare/{basehead}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  basehead: 'basehead'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/compare/{basehead}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">basehead</span>: <span class=\"hljs-string\">'basehead'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Compare two commits",
    "description": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "repos"
    ],
    "operationId": "repos/compare-commits",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#compare-two-commits"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "commits"
    },
    "slug": "compare-two-commits",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "500",
        "httpStatusMessage": "Internal Server Error",
        "description": "Internal Error"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The <code>basehead</code> param is comprised of two parts: <code>base</code> and <code>head</code>. Both must be branch names in <code>repo</code>. To compare branches across other repositories in the same network as <code>repo</code>, use the format <code>&lt;USERNAME&gt;:branch</code>.</p>\n<p>The response from the API is equivalent to running the <code>git log base..head</code> command; however, commits are returned in chronological order. Pass the appropriate <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests\">media type</a> to fetch diff and patch formats.</p>\n<p>The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a <code>renamed</code> status have a <code>previous_filename</code> field showing the previous filename of the file, and files with a <code>modified</code> status have a <code>patch</code> field showing the changes made to the file.</p>\n<p><strong>Working with large comparisons</strong></p>\n<p>The response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits\">List commits</a> to enumerate all commits in the range.</p>\n<p>For comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.</p>\n<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/content_references/{content_reference_id}/attachments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "description": "The owner of the repository. Determined from the `repository` `full_name` of the `content_reference` event.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The owner of the repository. Determined from the <code>repository</code> <code>full_name</code> of the <code>content_reference</code> event.</p>"
      },
      {
        "name": "repo",
        "description": "The name of the repository. Determined from the `repository` `full_name` of the `content_reference` event.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The name of the repository. Determined from the <code>repository</code> <code>full_name</code> of the <code>content_reference</code> event.</p>"
      },
      {
        "name": "content_reference_id",
        "description": "The `id` of the `content_reference` event.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>The <code>id</code> of the <code>content_reference</code> event.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.corsair-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/content_references/42/attachments \\\n  -d '{\"title\":\"title\",\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.corsair-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/content_references/42/attachments \\\n  -d '{\"title\":\"title\",\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  content_reference_id: 42,\n  title: 'title',\n  body: 'body',\n  mediaType: {\n    previews: [\n      'corsair'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">content_reference_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'corsair'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a content attachment",
    "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` and `repository` `full_name` of the content reference from the [`content_reference` event](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/enterprise-server@2.18/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/create-content-attachment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#create-a-content-attachment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "title": {
                "description": "<p><strong>Required</strong>. The title of the attachment</p>",
                "example": "Title of the attachment",
                "type": "string",
                "maxLength": 1024,
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the attachment",
                "childParamsGroups": []
              },
              "body": {
                "description": "<p><strong>Required</strong>. The body of the attachment</p>",
                "example": "Body of the attachment",
                "type": "string",
                "maxLength": 262144,
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The body of the attachment",
                "childParamsGroups": []
              }
            },
            "required": [
              "title",
              "body"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "corsair",
          "note": "To access the Content Attachments API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.corsair-preview+json\n```",
          "html": "<p>To access the Content Attachments API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.corsair-preview+json</code></pre>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "create-a-content-attachment",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the <code>id</code> and <code>repository</code> <code>full_name</code> of the content reference from the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#content_reference\"><code>content_reference</code> event</a> to create an attachment.</p>\n<p>The app must create a content attachment within six hours of the content reference URL being posted. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/apps/using-content-attachments/\">Using content attachments</a>\" for details about content attachments.</p>\n<p>You must use an <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation\">installation access token</a> to access this endpoint.</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The title of the attachment</p>",
        "example": "Title of the attachment",
        "type": "string",
        "maxLength": 1024,
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The title of the attachment",
        "childParamsGroups": []
      },
      {
        "description": "<p><strong>Required</strong>. The body of the attachment</p>",
        "example": "Body of the attachment",
        "type": "string",
        "maxLength": 262144,
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The body of the attachment",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">101</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"[A-1234] Error found in core/models.py file'\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"You have used an email that already exists for the user_email_uniq field.\\n ## DETAILS:\\n\\nThe (email)=(Octocat@github.com) already exists.\\n\\n The error was found in core/models.py in get_or_create_user at line 62.\\n\\n self.save()\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/contents/{path}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>path parameter</p>"
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The name of the commit/branch/tag. Default: the repository’s default branch (usually <code>master</code>)</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  path: 'path'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/contents/{path}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'path'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get repository content",
    "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.18/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-content",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-content"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "get-repository-content",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Found"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets the contents of a file or directory in a repository. Specify the file path or directory in <code>:path</code>. If you omit\n<code>:path</code>, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. </p>\n<p>Files and symlinks support <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types\">a custom media type</a> for\nretrieving the raw content or rendered HTML (when supported). All content types support <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types\">a custom media\ntype</a> to ensure the content is returned in a consistent\nobject format.</p>\n<p><strong>Note</strong>:</p>\n<ul>\n<li>To get a repository's contents recursively, you can <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#trees\">recursively get the tree</a>.</li>\n<li>This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tree\">Git Trees\nAPI</a>.</li>\n<li>This API supports files up to 1 megabyte in size.</li>\n</ul>\n<h4 id=\"if-the-content-is-a-directory\"><a href=\"#if-the-content-is-a-directory\">If the content is a directory</a></h4>\n<p>The response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n<em>should</em> be \"submodule\". This behavior exists in API v3 <a href=\"https://git.io/v1YCW\">for backwards compatibility purposes</a>.\nIn the next major version of the API, the type will be returned as \"submodule\".</p>\n<h4 id=\"if-the-content-is-a-symlink\"><a href=\"#if-the-content-is-a-symlink\">If the content is a symlink</a></h4>\n<p>If the requested <code>:path</code> points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object\ndescribing the symlink itself.</p>\n<h4 id=\"if-the-content-is-a-submodule\"><a href=\"#if-the-content-is-a-submodule\">If the content is a submodule</a></h4>\n<p>The <code>submodule_git_url</code> identifies the location of the submodule repository, and the <code>sha</code> identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.</p>\n<p>If the submodule repository is not hosted on github.com, the Git URLs (<code>git_url</code> and <code>_links[\"git\"]</code>) and the\ngithub.com URLs (<code>html_url</code> and <code>_links[\"html\"]</code>) will have null values.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/contents/{path}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>path parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH \\\n  -d '{\"message\":\"message\",\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH \\\n  -d '{\"message\":\"message\",\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/contents/{path}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  path: 'path',\n  message: 'message',\n  content: 'content'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/contents/{path}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'path'</span>,\n  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'message'</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create or update file contents",
    "description": "Creates a new file or replaces an existing file in a repository.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-or-update-file-contents",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-or-update-file-contents"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The commit message.</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The commit message.",
                "childParamsGroups": []
              },
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The new file content, using Base64 encoding.</p>",
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new file content, using Base64 encoding.",
                "childParamsGroups": []
              },
              "sha": {
                "type": "string",
                "description": "<p><strong>Required if you are updating a file</strong>. The blob SHA of the file being replaced.</p>",
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
                "childParamsGroups": []
              },
              "branch": {
                "type": "string",
                "description": "<p>The branch name. Default: the repository’s default branch (usually <code>master</code>)</p>",
                "name": "branch",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The branch name. Default: the repository’s default branch (usually `master`)",
                "childParamsGroups": []
              },
              "committer": {
                "type": "object",
                "description": "<p>The person that committed the file. Default: the authenticated user.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                    "childParamsGroups": []
                  },
                  "date": {
                    "type": "string",
                    "example": "\"2013-01-05T13:13:22+05:00\"",
                    "name": "date",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "name": "committer",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The person that committed the file. Default: the authenticated user.",
                "childParamsGroups": [
                  {
                    "parentName": "committer",
                    "parentType": "object",
                    "id": "committer-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"2013-01-05T13:13:22+05:00\"",
                        "name": "date",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "author": {
                "type": "object",
                "description": "<p>The author of the file. Default: The <code>committer</code> or the authenticated user if you omit <code>committer</code>.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                    "childParamsGroups": []
                  },
                  "date": {
                    "type": "string",
                    "example": "\"2013-01-15T17:13:22+05:00\"",
                    "name": "date",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "name": "author",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
                "childParamsGroups": [
                  {
                    "parentName": "author",
                    "parentType": "object",
                    "id": "author-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"2013-01-15T17:13:22+05:00\"",
                        "name": "date",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "message",
              "content"
            ]
          },
          "examples": {
            "example-for-creating-a-file": {
              "summary": "Example for creating a file",
              "value": {
                "message": "my commit message",
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "octocat@github.com"
                },
                "content": "bXkgbmV3IGZpbGUgY29udGVudHM="
              }
            },
            "example-for-updating-a-file": {
              "summary": "Example for updating a file",
              "value": {
                "message": "a new commit message",
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "octocat@github.com"
                },
                "content": "bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz",
                "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3"
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "create-or-update-file-contents",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new file or replaces an existing file in a repository.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"content\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"a56507ed892d05a37c6d6128c260937ea4d287bd\"</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\"</span>,\n    <span class=\"hljs-attr\">\"download_url\"</span>: <span class=\"hljs-string\">\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"file\"</span>,\n    <span class=\"hljs-attr\">\"_links\"</span>: {\n      <span class=\"hljs-attr\">\"self\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\"</span>,\n      <span class=\"hljs-attr\">\"git\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\"</span>,\n      <span class=\"hljs-attr\">\"html\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"commit\"</span>: {\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"my commit message\"</span>,\n    <span class=\"hljs-attr\">\"tree\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"</span>\n    },\n    <span class=\"hljs-attr\">\"parents\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"da5a433788da5c255edad7979b328b67d79f53f6\"</span>\n      }\n    ],\n    <span class=\"hljs-attr\">\"verification\"</span>: {\n      <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n      <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"content\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\"</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\"</span>,\n    <span class=\"hljs-attr\">\"download_url\"</span>: <span class=\"hljs-string\">\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"file\"</span>,\n    <span class=\"hljs-attr\">\"_links\"</span>: {\n      <span class=\"hljs-attr\">\"self\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\"</span>,\n      <span class=\"hljs-attr\">\"git\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\"</span>,\n      <span class=\"hljs-attr\">\"html\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"commit\"</span>: {\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"my commit message\"</span>,\n    <span class=\"hljs-attr\">\"tree\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"691272480426f78a0138979dd3ce63b77f706feb\"</span>\n    },\n    <span class=\"hljs-attr\">\"parents\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>\n      }\n    ],\n    <span class=\"hljs-attr\">\"verification\"</span>: {\n      <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n      <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The commit message.</p>",
        "name": "message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The commit message.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The new file content, using Base64 encoding.</p>",
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new file content, using Base64 encoding.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required if you are updating a file</strong>. The blob SHA of the file being replaced.</p>",
        "name": "sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The branch name. Default: the repository’s default branch (usually <code>master</code>)</p>",
        "name": "branch",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The branch name. Default: the repository’s default branch (usually `master`)",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>The person that committed the file. Default: the authenticated user.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
            "childParamsGroups": []
          },
          "date": {
            "type": "string",
            "example": "\"2013-01-05T13:13:22+05:00\"",
            "name": "date",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          }
        },
        "required": [
          "name",
          "email"
        ],
        "name": "committer",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The person that committed the file. Default: the authenticated user.",
        "childParamsGroups": [
          {
            "parentName": "committer",
            "parentType": "object",
            "id": "committer-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"2013-01-05T13:13:22+05:00\"",
                "name": "date",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "object",
        "description": "<p>The author of the file. Default: The <code>committer</code> or the authenticated user if you omit <code>committer</code>.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
            "childParamsGroups": []
          },
          "date": {
            "type": "string",
            "example": "\"2013-01-15T17:13:22+05:00\"",
            "name": "date",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          }
        },
        "required": [
          "name",
          "email"
        ],
        "name": "author",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
        "childParamsGroups": [
          {
            "parentName": "author",
            "parentType": "object",
            "id": "author-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>name</code> is omitted.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The email of the author or committer of the commit. You'll receive a <code>422</code> status code if <code>email</code> is omitted.</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"2013-01-15T17:13:22+05:00\"",
                "name": "date",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/contents/{path}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>path parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH \\\n  -d '{\"message\":\"message\",\"sha\":\"sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contents/PATH \\\n  -d '{\"message\":\"message\",\"sha\":\"sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/contents/{path}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  path: 'path',\n  message: 'message',\n  sha: 'sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/contents/{path}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'path'</span>,\n  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'message'</span>,\n  <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a file",
    "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-file",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-file"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The commit message.</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The commit message.",
                "childParamsGroups": []
              },
              "sha": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The blob SHA of the file being replaced.</p>",
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The blob SHA of the file being replaced.",
                "childParamsGroups": []
              },
              "branch": {
                "type": "string",
                "description": "<p>The branch name. Default: the repository’s default branch (usually <code>master</code>)</p>",
                "name": "branch",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The branch name. Default: the repository’s default branch (usually `master`)",
                "childParamsGroups": []
              },
              "committer": {
                "type": "object",
                "description": "<p>object containing information about the committer.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p>The name of the author (or committer) of the commit</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p>The email of the author (or committer) of the commit</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author (or committer) of the commit",
                    "childParamsGroups": []
                  }
                },
                "name": "committer",
                "in": "body",
                "rawType": "object",
                "rawDescription": "object containing information about the committer.",
                "childParamsGroups": [
                  {
                    "parentName": "committer",
                    "parentType": "object",
                    "id": "committer-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The name of the author (or committer) of the commit</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The email of the author (or committer) of the commit</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author (or committer) of the commit",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "author": {
                "type": "object",
                "description": "<p>object containing information about the author.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p>The name of the author (or committer) of the commit</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p>The email of the author (or committer) of the commit</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author (or committer) of the commit",
                    "childParamsGroups": []
                  }
                },
                "name": "author",
                "in": "body",
                "rawType": "object",
                "rawDescription": "object containing information about the author.",
                "childParamsGroups": [
                  {
                    "parentName": "author",
                    "parentType": "object",
                    "id": "author-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The name of the author (or committer) of the commit</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The email of the author (or committer) of the commit</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author (or committer) of the commit",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "message",
              "sha"
            ]
          },
          "example": {
            "message": "my commit message",
            "committer": {
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "sha": "329688480d39049927147c162b9d2deaf885005f"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "delete-a-file",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Deletes a file in a repository.</p>\n<p>You can provide an additional <code>committer</code> parameter, which is an object containing information about the committer. Or, you can provide an <code>author</code> parameter, which is an object containing information about the author.</p>\n<p>The <code>author</code> section is optional and is filled in with the <code>committer</code> information if omitted. If the <code>committer</code> information is omitted, the authenticated user's information is used.</p>\n<p>You must provide values for both <code>name</code> and <code>email</code>, whether you choose to use <code>author</code> or <code>committer</code>. Otherwise, you'll receive a <code>422</code> status code.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"commit\"</span>: {\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n    },\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"my commit message\"</span>,\n    <span class=\"hljs-attr\">\"tree\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"691272480426f78a0138979dd3ce63b77f706feb\"</span>\n    },\n    <span class=\"hljs-attr\">\"parents\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>,\n        <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"</span>\n      }\n    ],\n    <span class=\"hljs-attr\">\"verification\"</span>: {\n      <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n      <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The commit message.</p>",
        "name": "message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The commit message.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The blob SHA of the file being replaced.</p>",
        "name": "sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The blob SHA of the file being replaced.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The branch name. Default: the repository’s default branch (usually <code>master</code>)</p>",
        "name": "branch",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The branch name. Default: the repository’s default branch (usually `master`)",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>object containing information about the committer.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p>The name of the author (or committer) of the commit</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p>The email of the author (or committer) of the commit</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author (or committer) of the commit",
            "childParamsGroups": []
          }
        },
        "name": "committer",
        "in": "body",
        "rawType": "object",
        "rawDescription": "object containing information about the committer.",
        "childParamsGroups": [
          {
            "parentName": "committer",
            "parentType": "object",
            "id": "committer-object",
            "params": [
              {
                "type": "string",
                "description": "<p>The name of the author (or committer) of the commit</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The email of the author (or committer) of the commit</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author (or committer) of the commit",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "object",
        "description": "<p>object containing information about the author.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p>The name of the author (or committer) of the commit</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p>The email of the author (or committer) of the commit</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author (or committer) of the commit",
            "childParamsGroups": []
          }
        },
        "name": "author",
        "in": "body",
        "rawType": "object",
        "rawDescription": "object containing information about the author.",
        "childParamsGroups": [
          {
            "parentName": "author",
            "parentType": "object",
            "id": "author-object",
            "params": [
              {
                "type": "string",
                "description": "<p>The name of the author (or committer) of the commit</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The email of the author (or committer) of the commit</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author (or committer) of the commit",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/contributors",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "anon",
        "description": "Set to `1` or `true` to include anonymous contributors in results.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Set to <code>1</code> or <code>true</code> to include anonymous contributors in results.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contributors",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/contributors</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/contributors', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/contributors'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository contributors",
    "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-contributors",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-contributors"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repository-contributors",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if repository contains content"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if repository is empty"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.</p>\n<p>GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/deployments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sha",
        "description": "The SHA recorded at creation time.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "none"
        },
        "descriptionHTML": "<p>The SHA recorded at creation time.</p>"
      },
      {
        "name": "ref",
        "description": "The name of the ref. This can be a branch, tag, or SHA.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "none"
        },
        "descriptionHTML": "<p>The name of the ref. This can be a branch, tag, or SHA.</p>"
      },
      {
        "name": "task",
        "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "none"
        },
        "descriptionHTML": "<p>The name of the task for the deployment (e.g., <code>deploy</code> or <code>deploy:migrations</code>).</p>"
      },
      {
        "name": "environment",
        "description": "The name of the environment that was deployed to (e.g., `staging` or `production`).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "none",
          "nullable": true
        },
        "descriptionHTML": "<p>The name of the environment that was deployed to (e.g., <code>staging</code> or <code>production</code>).</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/deployments', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/deployments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List deployments",
    "description": "Simple filtering of deployments is available via query parameters:",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-deployments",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deployments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "list-deployments",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Simple filtering of deployments is available via query parameters:</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/deployments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments \\\n  -d '{\"ref\":\"ref\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments \\\n  -d '{\"ref\":\"ref\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/deployments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/deployments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a deployment",
    "description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub Enterprise Server we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n#### Merged branch response\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.\n\n#### Merge conflict response\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\nbe merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n#### Failed commit status checks\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-deployment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deployment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The ref to deploy. This can be a branch, tag, or SHA.</p>",
                "name": "ref",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The ref to deploy. This can be a branch, tag, or SHA.",
                "childParamsGroups": []
              },
              "task": {
                "type": "string",
                "description": "<p>Specifies a task to execute (e.g., <code>deploy</code> or <code>deploy:migrations</code>).</p>",
                "default": "deploy",
                "name": "task",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
                "childParamsGroups": []
              },
              "auto_merge": {
                "type": "boolean",
                "description": "<p>Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.</p>",
                "default": true,
                "name": "auto_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
                "childParamsGroups": []
              },
              "required_contexts": {
                "type": "array of strings",
                "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses\">status</a> contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.</p>",
                "items": {
                  "type": "string"
                },
                "name": "required_contexts",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The [status](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
                "childParamsGroups": []
              },
              "payload": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "string",
                    "description": "JSON payload with extra information about the deployment.",
                    "default": ""
                  }
                ],
                "name": "payload",
                "in": "body",
                "description": "<p>JSON payload with extra information about the deployment.</p>",
                "type": "object or string",
                "childParamsGroups": []
              },
              "environment": {
                "type": "string",
                "description": "<p>Name for the target deployment environment (e.g., <code>production</code>, <code>staging</code>, <code>qa</code>).</p>",
                "default": "production",
                "name": "environment",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
                "childParamsGroups": []
              },
              "description": {
                "type": "string or nullable",
                "description": "<p>Short description of the deployment.</p>",
                "default": "",
                "nullable": true,
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Short description of the deployment.",
                "childParamsGroups": []
              },
              "transient_environment": {
                "type": "boolean",
                "description": "<p>Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: <code>false</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
                "default": false,
                "name": "transient_environment",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
                "childParamsGroups": []
              },
              "production_environment": {
                "type": "boolean",
                "description": "<p>Specifies if the given environment is one that end-users directly interact with. Default: <code>true</code> when <code>environment</code> is <code>production</code> and <code>false</code> otherwise.<br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
                "name": "production_environment",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
                "childParamsGroups": []
              }
            },
            "required": [
              "ref"
            ]
          },
          "examples": {
            "simple-example": {
              "summary": "Simple example",
              "value": {
                "ref": "topic-branch",
                "payload": "{ \"deploy\": \"migrate\" }",
                "description": "Deploy request from hubot"
              }
            },
            "advanced-example": {
              "summary": "Advanced example",
              "value": {
                "ref": "topic-branch",
                "auto_merge": false,
                "payload": "{ \"deploy\": \"migrate\" }",
                "description": "Deploy request from hubot",
                "required_contexts": [
                  "ci/janky",
                  "security/brakeman"
                ]
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "create-a-deployment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Deployments offer a few configurable parameters with certain defaults.</p>\n<p>The <code>ref</code> parameter can be any named branch, tag, or SHA. At GitHub Enterprise Server we often deploy branches and verify them\nbefore we merge a pull request.</p>\n<p>The <code>environment</code> parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as <code>production</code>, <code>staging</code>, and <code>qa</code>. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is <code>production</code>.</p>\n<p>The <code>auto_merge</code> parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref <em>is</em> behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.</p>\n<p>By default, <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses\">commit statuses</a> for every submitted context must be in a <code>success</code>\nstate. The <code>required_contexts</code> parameter allows you to specify a subset of contexts that must be <code>success</code>, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.</p>\n<p>The <code>payload</code> parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.</p>\n<p>The <code>task</code> parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe <code>deploy:migrations</code> to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.</p>\n<p>Users with <code>repo</code> or <code>repo_deployment</code> scopes can create a deployment for a given ref.</p>\n<h4 id=\"merged-branch-response\"><a href=\"#merged-branch-response\">Merged branch response</a></h4>\n<p>You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:</p>\n<ul>\n<li>Auto-merge option is enabled in the repository</li>\n<li>Topic branch does not include the latest changes on the base branch, which is <code>master</code> in the response example</li>\n<li>There are no merge conflicts</li>\n</ul>\n<p>If there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.</p>\n<h4 id=\"merge-conflict-response\"><a href=\"#merge-conflict-response\">Merge conflict response</a></h4>\n<p>This error happens when the <code>auto_merge</code> option is enabled and when the default branch (in this case <code>master</code>), can't\nbe merged into the branch that's being deployed (in this case <code>topic-branch</code>), due to merge conflicts.</p>\n<h4 id=\"failed-commit-status-checks\"><a href=\"#failed-commit-status-checks\">Failed commit status checks</a></h4>\n<p>This error happens when the <code>required_contexts</code> parameter indicates that one or more contexts need to have a <code>success</code>\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of <code>success</code>.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Simple example",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/deployments/1\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOkRlcGxveW1lbnQx\"</span>,\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\"</span>,\n  <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"topic-branch\"</span>,\n  <span class=\"hljs-attr\">\"task\"</span>: <span class=\"hljs-string\">\"deploy\"</span>,\n  <span class=\"hljs-attr\">\"payload\"</span>: {},\n  <span class=\"hljs-attr\">\"original_environment\"</span>: <span class=\"hljs-string\">\"staging\"</span>,\n  <span class=\"hljs-attr\">\"environment\"</span>: <span class=\"hljs-string\">\"production\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Deploy request from hubot\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/deployments/1/statuses\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example\"</span>,\n  <span class=\"hljs-attr\">\"transient_environment\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"production_environment\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Merged branch response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Auto-merged master into topic-branch on deployment.\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict when there is a merge conflict or the commit's status checks failed"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The ref to deploy. This can be a branch, tag, or SHA.</p>",
        "name": "ref",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The ref to deploy. This can be a branch, tag, or SHA.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Specifies a task to execute (e.g., <code>deploy</code> or <code>deploy:migrations</code>).</p>",
        "default": "deploy",
        "name": "task",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.</p>",
        "default": true,
        "name": "auto_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses\">status</a> contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.</p>",
        "items": {
          "type": "string"
        },
        "name": "required_contexts",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The [status](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
        "childParamsGroups": []
      },
      {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": true
          },
          {
            "type": "string",
            "description": "JSON payload with extra information about the deployment.",
            "default": ""
          }
        ],
        "name": "payload",
        "in": "body",
        "description": "<p>JSON payload with extra information about the deployment.</p>",
        "type": "object or string",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Name for the target deployment environment (e.g., <code>production</code>, <code>staging</code>, <code>qa</code>).</p>",
        "default": "production",
        "name": "environment",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
        "childParamsGroups": []
      },
      {
        "type": "string or nullable",
        "description": "<p>Short description of the deployment.</p>",
        "default": "",
        "nullable": true,
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Short description of the deployment.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: <code>false</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
        "default": false,
        "name": "transient_environment",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Specifies if the given environment is one that end-users directly interact with. Default: <code>true</code> when <code>environment</code> is <code>production</code> and <code>false</code> otherwise.<br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
        "name": "production_environment",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/deployments/{deployment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>deployment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/deployments/{deployment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  deployment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/deployments/{deployment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">deployment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a deployment",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-deployment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deployment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        },
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "get-a-deployment",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>deployment_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  deployment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">deployment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List deployment statuses",
    "description": "Users with pull access can view deployment statuses for a deployment:",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-deployment-statuses",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deployment-statuses"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "flash",
          "note": "New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.flash-preview+json\n```",
          "html": "<p>New features in the Deployments API on GitHub are currently available during a public beta. Please see the <a href=\"https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/\">blog post</a> for full details.</p>\n<p>To access the new <code>environment</code> parameter, the two new values for the <code>state</code> parameter (<code>in_progress</code> and <code>queued</code>), and use <code>auto_inactive</code> on production deployments during the public beta period, you must provide the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.flash-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "list-deployment-statuses",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with pull access can view deployment statuses for a deployment:</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>deployment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses \\\n  -d '{\"state\":\"state\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses \\\n  -d '{\"state\":\"state\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  deployment_id: 42,\n  state: 'state'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">deployment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">state</span>: <span class=\"hljs-string\">'state'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a deployment status",
    "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-deployment-status",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deployment-status"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The state of the status. Can be one of <code>error</code>, <code>failure</code>, <code>inactive</code>, <code>in_progress</code>, <code>queued</code> <code>pending</code>, or <code>success</code>. <strong>Note:</strong> To use the <code>inactive</code> state, you must provide the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type. To use the <code>in_progress</code> and <code>queued</code> states, you must provide the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type. When you set a transient deployment to <code>inactive</code>, the deployment will be shown as <code>destroyed</code> in GitHub.</p>",
                "enum": [
                  "error",
                  "failure",
                  "inactive",
                  "in_progress",
                  "queued",
                  "pending",
                  "success"
                ],
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.",
                "childParamsGroups": []
              },
              "target_url": {
                "type": "string",
                "description": "<p>The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. <strong>Note:</strong> It's recommended to use the <code>log_url</code> parameter, which replaces <code>target_url</code>.</p>",
                "default": "",
                "name": "target_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
                "childParamsGroups": []
              },
              "log_url": {
                "type": "string",
                "description": "<p>The full URL of the deployment's output. This parameter replaces <code>target_url</code>. We will continue to accept <code>target_url</code> to support legacy uses, but we recommend replacing <code>target_url</code> with <code>log_url</code>. Setting <code>log_url</code> will automatically set <code>target_url</code> to the same value. Default: <code>\"\"</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
                "default": "",
                "name": "log_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the status. The maximum description length is 140 characters.</p>",
                "default": "",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the status. The maximum description length is 140 characters.",
                "childParamsGroups": []
              },
              "environment": {
                "type": "string",
                "description": "<p>Name for the target deployment environment, which can be changed when setting a deploy status. For example, <code>production</code>, <code>staging</code>, or <code>qa</code>. <strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type.</p>",
                "enum": [
                  "production",
                  "staging",
                  "qa"
                ],
                "name": "environment",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type.",
                "childParamsGroups": []
              },
              "environment_url": {
                "type": "string",
                "description": "<p>Sets the URL for accessing your environment. Default: <code>\"\"</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
                "default": "",
                "name": "environment_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
                "childParamsGroups": []
              },
              "auto_inactive": {
                "type": "boolean",
                "description": "<p>Adds a new <code>inactive</code> status to all prior non-transient, non-production environment deployments with the same repository and <code>environment</code> name as the created status's deployment. An <code>inactive</code> status is only added to deployments that had a <code>success</code> state. Default: <code>true</code><br>\n<strong>Note:</strong> To add an <code>inactive</code> status to <code>production</code> environments, you must use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type.<br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
                "name": "auto_inactive",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
                "childParamsGroups": []
              }
            },
            "required": [
              "state"
            ]
          },
          "example": {
            "environment": "production",
            "state": "success",
            "log_url": "https://example.com/deployment/42/output",
            "description": "Deployment finished successfully."
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "flash",
          "note": "New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.flash-preview+json\n```",
          "html": "<p>New features in the Deployments API on GitHub are currently available during a public beta. Please see the <a href=\"https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/\">blog post</a> for full details.</p>\n<p>To access the new <code>environment</code> parameter, the two new values for the <code>state</code> parameter (<code>in_progress</code> and <code>queued</code>), and use <code>auto_inactive</code> on production deployments during the public beta period, you must provide the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.flash-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "create-a-deployment-status",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Users with <code>push</code> access can create deployment statuses for a given deployment.</p>\n<p>GitHub Apps require <code>read &#x26; write</code> access to \"Deployments\" and <code>read-only</code> access to \"Repo contents\" (for private repos). OAuth Apps require the <code>repo_deployment</code> scope.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The state of the status. Can be one of <code>error</code>, <code>failure</code>, <code>inactive</code>, <code>in_progress</code>, <code>queued</code> <code>pending</code>, or <code>success</code>. <strong>Note:</strong> To use the <code>inactive</code> state, you must provide the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type. To use the <code>in_progress</code> and <code>queued</code> states, you must provide the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type. When you set a transient deployment to <code>inactive</code>, the deployment will be shown as <code>destroyed</code> in GitHub.</p>",
        "enum": [
          "error",
          "failure",
          "inactive",
          "in_progress",
          "queued",
          "pending",
          "success"
        ],
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. <strong>Note:</strong> It's recommended to use the <code>log_url</code> parameter, which replaces <code>target_url</code>.</p>",
        "default": "",
        "name": "target_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The full URL of the deployment's output. This parameter replaces <code>target_url</code>. We will continue to accept <code>target_url</code> to support legacy uses, but we recommend replacing <code>target_url</code> with <code>log_url</code>. Setting <code>log_url</code> will automatically set <code>target_url</code> to the same value. Default: <code>\"\"</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
        "default": "",
        "name": "log_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the status. The maximum description length is 140 characters.</p>",
        "default": "",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the status. The maximum description length is 140 characters.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Name for the target deployment environment, which can be changed when setting a deploy status. For example, <code>production</code>, <code>staging</code>, or <code>qa</code>. <strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type.</p>",
        "enum": [
          "production",
          "staging",
          "qa"
        ],
        "name": "environment",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Sets the URL for accessing your environment. Default: <code>\"\"</code><br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
        "default": "",
        "name": "environment_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Adds a new <code>inactive</code> status to all prior non-transient, non-production environment deployments with the same repository and <code>environment</code> name as the created status's deployment. An <code>inactive</code> status is only added to deployments that had a <code>success</code> state. Default: <code>true</code><br>\n<strong>Note:</strong> To add an <code>inactive</code> status to <code>production</code> environments, you must use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses\"><code>application/vnd.github.flash-preview+json</code></a> custom media type.<br>\n<strong>Note:</strong> This parameter requires you to use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments\"><code>application/vnd.github.ant-man-preview+json</code></a> custom media type.</p>",
        "name": "auto_inactive",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.18/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Deployment finished successfully.\"</span>,\n  <span class=\"hljs-attr\">\"environment\"</span>: <span class=\"hljs-string\">\"production\"</span>,\n  <span class=\"hljs-attr\">\"target_url\"</span>: <span class=\"hljs-string\">\"https://example.com/deployment/42/output\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"deployment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/deployments/42\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example\"</span>,\n  <span class=\"hljs-attr\">\"environment_url\"</span>: <span class=\"hljs-string\">\"https://test-branch.lab.acme.com\"</span>,\n  <span class=\"hljs-attr\">\"log_url\"</span>: <span class=\"hljs-string\">\"https://example.com/deployment/42/output\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>deployment_id parameter</p>"
      },
      {
        "name": "status_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/deployments/42/statuses/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  deployment_id: 42,\n  status_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">deployment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">status_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a deployment status",
    "description": "Users with pull access can view a deployment status for a deployment:",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-deployment-status",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deployment-status"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        },
        {
          "required": false,
          "name": "flash",
          "note": "New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.flash-preview+json\n```",
          "html": "<p>New features in the Deployments API on GitHub are currently available during a public beta. Please see the <a href=\"https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/\">blog post</a> for full details.</p>\n<p>To access the new <code>environment</code> parameter, the two new values for the <code>state</code> parameter (<code>in_progress</code> and <code>queued</code>), and use <code>auto_inactive</code> on production deployments during the public beta period, you must provide the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.flash-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "ant-man",
          "note": "The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.ant-man-preview+json\n```",
          "html": "<p>The <code>inactive</code> state and the <code>log_url</code>, <code>environment_url</code>, and <code>auto_inactive</code> parameters are currently available for developers to preview. Please see the <a href=\"https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements\">blog post</a> for full details.</p>\n<p>To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.ant-man-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "deployments"
    },
    "slug": "get-a-deployment-status",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "deployments",
    "subcategoryLabel": "Deployments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with pull access can view a deployment status for a deployment:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/events', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/events'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository events",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-repo-events",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-events"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-repository-events",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/forks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sort",
        "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "newest",
            "oldest",
            "stargazers",
            "watchers"
          ],
          "default": "newest"
        },
        "descriptionHTML": "<p>The sort order. Can be either <code>newest</code>, <code>oldest</code>, or <code>stargazers</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/forks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/forks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/forks', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/forks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List forks",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-forks",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-forks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "forks"
    },
    "slug": "list-forks",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "forks",
    "subcategoryLabel": "Forks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "400",
        "httpStatusMessage": "Bad Request",
        "description": "Bad Request"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/forks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/forks \\\n  -d '{\"organization\":\"organization\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/forks \\\n  -d '{\"organization\":\"organization\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/forks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  organization: 'organization'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/forks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">organization</span>: <span class=\"hljs-string\">'organization'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a fork",
    "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Enterprise Server Support](https://support.github.com/contact) or [GitHub Enterprise Server Premium Support](https://premium.githubsupport.com).",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-fork",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-fork"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "organization": {
                "type": "string",
                "description": "<p>Optional parameter to specify the organization name if forking into an organization.</p>",
                "name": "organization",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Optional parameter to specify the organization name if forking into an organization.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "forks"
    },
    "slug": "create-a-fork",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "forks",
    "subcategoryLabel": "Forks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a fork for the authenticated user.</p>\n<p><strong>Note</strong>: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact <a href=\"https://support.github.com/contact\">GitHub Enterprise Server Support</a> or <a href=\"https://premium.githubsupport.com\">GitHub Enterprise Server Premium Support</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>Optional parameter to specify the organization name if forking into an organization.</p>",
        "name": "organization",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Optional parameter to specify the organization name if forking into an organization.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/licenses/mit\"</span>\n  },\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"template_repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World-Template.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World-Template/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World-Template\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"temp_clone_token\"</span>: <span class=\"hljs-string\">\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\"</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"delete_branch_on_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>\n  },\n  <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"parent\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"source\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n    <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n    <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n    <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n    <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"topics\"</span>: [\n      <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-string\">\"atom\"</span>,\n      <span class=\"hljs-string\">\"electron\"</span>,\n      <span class=\"hljs-string\">\"api\"</span>\n    ],\n    <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n    <span class=\"hljs-attr\">\"permissions\"</span>: {\n      <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n    <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"license\"</span>: {\n      <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n      <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n    },\n    <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "400",
        "httpStatusMessage": "Bad Request",
        "description": "Bad Request"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/git/blobs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/blobs \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/blobs \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/git/blobs', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  content: 'content'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/git/blobs'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a blob",
    "description": "",
    "tags": [
      "git"
    ],
    "operationId": "git/create-blob",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-blob"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The new blob's content.</p>",
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new blob's content.",
                "childParamsGroups": []
              },
              "encoding": {
                "type": "string",
                "description": "<p>The encoding used for <code>content</code>. Currently, <code>\"utf-8\"</code> and <code>\"base64\"</code> are supported.</p>",
                "default": "utf-8",
                "name": "encoding",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "Content of the blob",
            "encoding": "utf-8"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "blobs"
    },
    "slug": "create-a-blob",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "blobs",
    "subcategoryLabel": "Blobs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The new blob's content.</p>",
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new blob's content.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The encoding used for <code>content</code>. Currently, <code>\"utf-8\"</code> and <code>\"base64\"</code> are supported.</p>",
        "default": "utf-8",
        "name": "encoding",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"</span>,\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/git/blobs/{file_sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "file_sha",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/blobs/FILE_SHA",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/blobs/FILE_SHA</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/git/blobs/{file_sha}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  file_sha: 'file_sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/git/blobs/{file_sha}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">file_sha</span>: <span class=\"hljs-string\">'file_sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a blob",
    "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.",
    "tags": [
      "git"
    ],
    "operationId": "git/get-blob",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-blob"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "blobs"
    },
    "slug": "get-a-blob",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "blobs",
    "subcategoryLabel": "Blobs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The <code>content</code> in the response will always be Base64 encoded.</p>\n<p><em>Note</em>: This API supports blobs up to 100 megabytes in size.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/git/commits",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/commits \\\n  -d '{\"message\":\"message\",\"tree\":\"tree\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/commits \\\n  -d '{\"message\":\"message\",\"tree\":\"tree\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/git/commits', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  message: 'message',\n  tree: 'tree'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/git/commits'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'message'</span>,\n  <span class=\"hljs-attr\">tree</span>: <span class=\"hljs-string\">'tree'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a commit",
    "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "git"
    ],
    "operationId": "git/create-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-commit"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The commit message</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The commit message",
                "childParamsGroups": []
              },
              "tree": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The SHA of the tree object this commit points to</p>",
                "name": "tree",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA of the tree object this commit points to",
                "childParamsGroups": []
              },
              "parents": {
                "type": "array of strings",
                "description": "<p>The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.</p>",
                "items": {
                  "type": "string"
                },
                "name": "parents",
                "in": "body",
                "rawType": "array",
                "rawDescription": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
                "childParamsGroups": []
              },
              "author": {
                "type": "object",
                "description": "<p>Information about the author of the commit. By default, the <code>author</code> will be the authenticated user and the current date. See the <code>author</code> and <code>committer</code> object below for details.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The name of the author (or committer) of the commit</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The email of the author (or committer) of the commit</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                    "name": "date",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "name": "author",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.",
                "childParamsGroups": [
                  {
                    "parentName": "author",
                    "parentType": "object",
                    "id": "author-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The name of the author (or committer) of the commit</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The email of the author (or committer) of the commit</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "format": "date-time",
                        "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                        "name": "date",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "committer": {
                "type": "object",
                "description": "<p>Information about the person who is making the commit. By default, <code>committer</code> will use the information set in <code>author</code>. See the <code>author</code> and <code>committer</code> object below for details.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p>The name of the author (or committer) of the commit</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p>The email of the author (or committer) of the commit</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author (or committer) of the commit",
                    "childParamsGroups": []
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                    "name": "date",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                    "childParamsGroups": []
                  }
                },
                "name": "committer",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.",
                "childParamsGroups": [
                  {
                    "parentName": "committer",
                    "parentType": "object",
                    "id": "committer-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The name of the author (or committer) of the commit</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The email of the author (or committer) of the commit</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author (or committer) of the commit",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "format": "date-time",
                        "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                        "name": "date",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "signature": {
                "type": "string",
                "description": "<p>The <a href=\"https://en.wikipedia.org/wiki/Pretty_Good_Privacy\">PGP signature</a> of the commit. GitHub adds the signature to the <code>gpgsig</code> header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a <code>signature</code> parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to <a href=\"https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work\">use the command line</a> to create signed commits.</p>",
                "name": "signature",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.",
                "childParamsGroups": []
              }
            },
            "required": [
              "message",
              "tree"
            ]
          },
          "example": {
            "message": "my commit message",
            "author": {
              "name": "Mona Octocat",
              "email": "octocat@github.com",
              "date": "2008-07-09T16:13:30+12:00"
            },
            "parents": [
              "7d1b31e74ee336d15cbd21741bc88a537ed063a0"
            ],
            "tree": "827efc6d56897b048c772eb4087f854f46256132",
            "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\n=5Io4\n-----END PGP SIGNATURE-----\n"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "commits"
    },
    "slug": "create-a-commit",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new Git <a href=\"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects\">commit object</a>.</p>\n<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>,\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n  },\n  <span class=\"hljs-attr\">\"committer\"</span>: {\n    <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>\n  },\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"my commit message\"</span>,\n  <span class=\"hljs-attr\">\"tree\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"827efc6d56897b048c772eb4087f854f46256132\"</span>\n  },\n  <span class=\"hljs-attr\">\"parents\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/commit/7d1b31e74ee336d15cbd21741bc88a537ed063a0\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"verification\"</span>: {\n    <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n    <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n  },\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The commit message</p>",
        "name": "message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The commit message",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The SHA of the tree object this commit points to</p>",
        "name": "tree",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA of the tree object this commit points to",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.</p>",
        "items": {
          "type": "string"
        },
        "name": "parents",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>Information about the author of the commit. By default, the <code>author</code> will be the authenticated user and the current date. See the <code>author</code> and <code>committer</code> object below for details.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The name of the author (or committer) of the commit</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The email of the author (or committer) of the commit</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
            "name": "date",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "childParamsGroups": []
          }
        },
        "required": [
          "name",
          "email"
        ],
        "name": "author",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.",
        "childParamsGroups": [
          {
            "parentName": "author",
            "parentType": "object",
            "id": "author-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the author (or committer) of the commit</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The email of the author (or committer) of the commit</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "format": "date-time",
                "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "date",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "object",
        "description": "<p>Information about the person who is making the commit. By default, <code>committer</code> will use the information set in <code>author</code>. See the <code>author</code> and <code>committer</code> object below for details.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p>The name of the author (or committer) of the commit</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p>The email of the author (or committer) of the commit</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author (or committer) of the commit",
            "childParamsGroups": []
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
            "name": "date",
            "in": "body",
            "rawType": "string",
            "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "childParamsGroups": []
          }
        },
        "name": "committer",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.",
        "childParamsGroups": [
          {
            "parentName": "committer",
            "parentType": "object",
            "id": "committer-object",
            "params": [
              {
                "type": "string",
                "description": "<p>The name of the author (or committer) of the commit</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The email of the author (or committer) of the commit</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author (or committer) of the commit",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "format": "date-time",
                "description": "<p>Indicates when this commit was authored (or committed). This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "date",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "string",
        "description": "<p>The <a href=\"https://en.wikipedia.org/wiki/Pretty_Good_Privacy\">PGP signature</a> of the commit. GitHub adds the signature to the <code>gpgsig</code> header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a <code>signature</code> parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to <a href=\"https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work\">use the command line</a> to create signed commits.</p>",
        "name": "signature",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/git/commits/{commit_sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>commit_sha parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/commits/COMMIT_SHA",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/commits/COMMIT_SHA</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/git/commits/{commit_sha}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/git/commits/{commit_sha}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">commit_sha</span>: <span class=\"hljs-string\">'commit_sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a commit",
    "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "git"
    ],
    "operationId": "git/get-commit",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-commit"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "commits"
    },
    "slug": "get-a-commit",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "commits",
    "subcategoryLabel": "Commits",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets a Git <a href=\"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects\">commit object</a>.</p>\n<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/git/refs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs \\\n  -d '{\"ref\":\"ref\",\"sha\":\"sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs \\\n  -d '{\"ref\":\"ref\",\"sha\":\"sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/git/refs', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref',\n  sha: 'sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/git/refs'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>,\n  <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a reference",
    "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.",
    "tags": [
      "git"
    ],
    "operationId": "git/create-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the fully qualified reference (ie: <code>refs/heads/master</code>). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.</p>",
                "name": "ref",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
                "childParamsGroups": []
              },
              "sha": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The SHA1 value for this reference.</p>",
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA1 value for this reference.",
                "childParamsGroups": []
              },
              "key": {
                "type": "string",
                "example": "\"refs/heads/newbranch\"",
                "name": "key",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            },
            "required": [
              "ref",
              "sha"
            ]
          },
          "example": {
            "ref": "refs/heads/featureA",
            "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "refs"
    },
    "slug": "create-a-reference",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "refs",
    "subcategoryLabel": "Refs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the fully qualified reference (ie: <code>refs/heads/master</code>). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.</p>",
        "name": "ref",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The SHA1 value for this reference.</p>",
        "name": "sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA1 value for this reference.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"refs/heads/newbranch\"",
        "name": "key",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"refs/heads/featureA\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\"</span>,\n  <span class=\"hljs-attr\">\"object\"</span>: {\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"commit\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"aa218f56b14c9653891f9e74264a383fa43fefbd\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/git/refs/{namespace}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/git/refs/{namespace}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/git/refs/{namespace}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get all references",
    "description": "Returns an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`. If there are no references to list, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-single-pull-request) to trigger a merge commit creation. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\n```\nGET /repos/octocat/Hello-World/git/refs\n```\n\nYou can also request a sub-namespace. For example, to get all the tag references, you can call:\n\n```\nGET /repos/octocat/Hello-World/git/refs/tags\n```",
    "operationId": "git/get-all-refs",
    "tags": [
      "git"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/enterprise/2.18/rest/reference/git#get-a-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "refs"
    },
    "slug": "get-all-references",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "refs",
    "subcategoryLabel": "Refs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just <code>heads</code> and <code>tags</code>. If there are no references to list, a <code>404</code> is returned.</p>\n<p><strong>Note:</strong> You need to explicitly <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-single-pull-request\">request a pull request</a> to trigger a merge commit creation. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests\">Checking mergeability of pull requests</a>\".</p>\n<pre><code>GET /repos/octocat/Hello-World/git/refs\n</code></pre>\n<p>You can also request a sub-namespace. For example, to get all the tag references, you can call:</p>\n<pre><code>GET /repos/octocat/Hello-World/git/refs/tags\n</code></pre>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/git/refs/{ref}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/REF \\\n  -d '{\"sha\":\"sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/REF \\\n  -d '{\"sha\":\"sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/git/refs/{ref}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref',\n  sha: 'sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/git/refs/{ref}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>,\n  <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a reference",
    "description": "",
    "tags": [
      "git"
    ],
    "operationId": "git/update-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#update-a-reference"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The SHA1 value to set this reference to</p>",
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA1 value to set this reference to",
                "childParamsGroups": []
              },
              "force": {
                "type": "boolean",
                "description": "<p>Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to <code>false</code> will make sure you're not overwriting work.</p>",
                "default": false,
                "name": "force",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
                "childParamsGroups": []
              }
            },
            "required": [
              "sha"
            ]
          },
          "example": {
            "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd",
            "force": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "refs"
    },
    "slug": "update-a-reference",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "refs",
    "subcategoryLabel": "Refs",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The SHA1 value to set this reference to</p>",
        "name": "sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA1 value to set this reference to",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to <code>false</code> will make sure you're not overwriting work.</p>",
        "default": false,
        "name": "force",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"refs/heads/featureA\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\"</span>,\n  <span class=\"hljs-attr\">\"object\"</span>: {\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"commit\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"aa218f56b14c9653891f9e74264a383fa43fefbd\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/git/refs/{ref}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>ref parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/REF",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/refs/REF</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/git/refs/{ref}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/git/refs/{ref}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a reference",
    "description": "",
    "tags": [
      "git"
    ],
    "operationId": "git/delete-ref",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#delete-a-reference"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "refs"
    },
    "slug": "delete-a-reference",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "refs",
    "subcategoryLabel": "Refs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/git/tags",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/tags \\\n  -d '{\"tag\":\"tag\",\"message\":\"message\",\"object\":\"object\",\"type\":\"type\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/tags \\\n  -d '{\"tag\":\"tag\",\"message\":\"message\",\"object\":\"object\",\"type\":\"type\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/git/tags', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tag: 'tag',\n  message: 'message',\n  object: 'object',\n  type: 'type'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/git/tags'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tag</span>: <span class=\"hljs-string\">'tag'</span>,\n  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'message'</span>,\n  <span class=\"hljs-attr\">object</span>: <span class=\"hljs-string\">'object'</span>,\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'type'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a tag object",
    "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "git"
    ],
    "operationId": "git/create-tag",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-tag-object"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "tag": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The tag's name. This is typically a version (e.g., \"v0.0.1\").</p>",
                "name": "tag",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The tag's name. This is typically a version (e.g., \"v0.0.1\").",
                "childParamsGroups": []
              },
              "message": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The tag message.</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The tag message.",
                "childParamsGroups": []
              },
              "object": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The SHA of the git object this is tagging.</p>",
                "name": "object",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA of the git object this is tagging.",
                "childParamsGroups": []
              },
              "type": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The type of the object we're tagging. Normally this is a <code>commit</code> but it can also be a <code>tree</code> or a <code>blob</code>.</p>",
                "enum": [
                  "commit",
                  "tree",
                  "blob"
                ],
                "name": "type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.",
                "childParamsGroups": []
              },
              "tagger": {
                "type": "object",
                "description": "<p>An object with information about the individual creating the tag.</p>",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The name of the author of the tag</p>",
                    "name": "name",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The name of the author of the tag",
                    "childParamsGroups": []
                  },
                  "email": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The email of the author of the tag</p>",
                    "name": "email",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The email of the author of the tag",
                    "childParamsGroups": []
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "<p>When this object was tagged. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                    "name": "date",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "name": "tagger",
                "in": "body",
                "rawType": "object",
                "rawDescription": "An object with information about the individual creating the tag.",
                "childParamsGroups": [
                  {
                    "parentName": "tagger",
                    "parentType": "object",
                    "id": "tagger-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The name of the author of the tag</p>",
                        "name": "name",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The name of the author of the tag",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The email of the author of the tag</p>",
                        "name": "email",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The email of the author of the tag",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "format": "date-time",
                        "description": "<p>When this object was tagged. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                        "name": "date",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "tag",
              "message",
              "object",
              "type"
            ]
          },
          "example": {
            "tag": "v0.0.1",
            "message": "initial version",
            "object": "c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c",
            "type": "commit",
            "tagger": {
              "name": "Monalisa Octocat",
              "email": "octocat@github.com",
              "date": "2011-06-17T14:53:35-07:00"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "tags"
    },
    "slug": "create-a-tag-object",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "tags",
    "subcategoryLabel": "Tags",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference\">create</a> the <code>refs/tags/[tag]</code> reference. If you want to create a lightweight tag, you only have to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference\">create</a> the tag reference - this call would be unnecessary.</p>\n<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\"</span>,\n  <span class=\"hljs-attr\">\"tag\"</span>: <span class=\"hljs-string\">\"v0.0.1\"</span>,\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"940bd336248efae0f9ee5bc7b2d5c985887b16ac\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\"</span>,\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"initial version\"</span>,\n  <span class=\"hljs-attr\">\"tagger\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n    <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2014-11-07T22:01:45Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"object\"</span>: {\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"commit\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"</span>\n  },\n  <span class=\"hljs-attr\">\"verification\"</span>: {\n    <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n    <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The tag's name. This is typically a version (e.g., \"v0.0.1\").</p>",
        "name": "tag",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The tag's name. This is typically a version (e.g., \"v0.0.1\").",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The tag message.</p>",
        "name": "message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The tag message.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The SHA of the git object this is tagging.</p>",
        "name": "object",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA of the git object this is tagging.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The type of the object we're tagging. Normally this is a <code>commit</code> but it can also be a <code>tree</code> or a <code>blob</code>.</p>",
        "enum": [
          "commit",
          "tree",
          "blob"
        ],
        "name": "type",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>An object with information about the individual creating the tag.</p>",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The name of the author of the tag</p>",
            "name": "name",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The name of the author of the tag",
            "childParamsGroups": []
          },
          "email": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The email of the author of the tag</p>",
            "name": "email",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The email of the author of the tag",
            "childParamsGroups": []
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "<p>When this object was tagged. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
            "name": "date",
            "in": "body",
            "rawType": "string",
            "rawDescription": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "childParamsGroups": []
          }
        },
        "required": [
          "name",
          "email"
        ],
        "name": "tagger",
        "in": "body",
        "rawType": "object",
        "rawDescription": "An object with information about the individual creating the tag.",
        "childParamsGroups": [
          {
            "parentName": "tagger",
            "parentType": "object",
            "id": "tagger-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the author of the tag</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the author of the tag",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The email of the author of the tag</p>",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The email of the author of the tag",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "format": "date-time",
                "description": "<p>When this object was tagged. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "date",
                "in": "body",
                "rawType": "string",
                "rawDescription": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/git/tags/{tag_sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "tag_sha",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/tags/TAG_SHA",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/tags/TAG_SHA</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/git/tags/{tag_sha}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tag_sha: 'tag_sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/git/tags/{tag_sha}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tag_sha</span>: <span class=\"hljs-string\">'tag_sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a tag",
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "tags": [
      "git"
    ],
    "operationId": "git/get-tag",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tag"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "tags"
    },
    "slug": "get-a-tag",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "tags",
    "subcategoryLabel": "Tags",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Signature verification object</strong></p>\n<p>The response will include a <code>verification</code> object that describes the result of verifying the commit's signature. The following fields are included in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>verified</code></td><td><code>boolean</code></td><td>Indicates whether GitHub considers the signature in this commit to be verified.</td></tr><tr><td><code>reason</code></td><td><code>string</code></td><td>The reason for verified value. Possible values and their meanings are enumerated in table below.</td></tr><tr><td><code>signature</code></td><td><code>string</code></td><td>The signature that was extracted from the commit.</td></tr><tr><td><code>payload</code></td><td><code>string</code></td><td>The value that was signed.</td></tr></tbody></table>\n<p>These are the possible values for <code>reason</code> in the <code>verification</code> object:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>expired_key</code></td><td>The key that made the signature is expired.</td></tr><tr><td><code>not_signing_key</code></td><td>The \"signing\" flag is not among the usage flags in the GPG key that made the signature.</td></tr><tr><td><code>gpgverify_error</code></td><td>There was an error communicating with the signature verification service.</td></tr><tr><td><code>gpgverify_unavailable</code></td><td>The signature verification service is currently unavailable.</td></tr><tr><td><code>unsigned</code></td><td>The object does not include a signature.</td></tr><tr><td><code>unknown_signature_type</code></td><td>A non-PGP signature was found in the commit.</td></tr><tr><td><code>no_user</code></td><td>No user was associated with the <code>committer</code> email address in the commit.</td></tr><tr><td><code>unverified_email</code></td><td>The <code>committer</code> email address in the commit was associated with a user, but the email address is not verified on her/his account.</td></tr><tr><td><code>bad_email</code></td><td>The <code>committer</code> email address in the commit is not included in the identities of the PGP key that made the signature.</td></tr><tr><td><code>unknown_key</code></td><td>The key that made the signature has not been registered with any user's account.</td></tr><tr><td><code>malformed_signature</code></td><td>There was an error parsing the signature.</td></tr><tr><td><code>invalid</code></td><td>The signature could not be cryptographically verified using the key whose key-id was found in the signature.</td></tr><tr><td><code>valid</code></td><td>None of the above errors applied, so the signature is considered to be verified.</td></tr></tbody></table>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/git/trees",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/trees \\\n  -d '{\"tree\":[{\"path\":\"path\",\"mode\":\"mode\",\"type\":\"type\",\"sha\":\"sha\",\"content\":\"content\"}]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/trees \\\n  -d '{\"tree\":[{\"path\":\"path\",\"mode\":\"mode\",\"type\":\"type\",\"sha\":\"sha\",\"content\":\"content\"}]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/git/trees', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tree: [\n    {\n      path: 'path',\n      mode: 'mode',\n      type: 'type',\n      sha: 'sha',\n      content: 'content'\n    }\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/git/trees'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tree</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'path'</span>,\n      <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'mode'</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'type'</span>,\n      <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>,\n      <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>\n    }\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Create a tree",
    "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-commit)\" and \"[Update a reference](https://docs.github.com/enterprise-server@2.18/rest/reference/git#update-a-reference).\"",
    "tags": [
      "git"
    ],
    "operationId": "git/create-tree",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-tree"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "tree": {
                "type": "array of objects",
                "description": "<p><strong>Required</strong>. Objects (of <code>path</code>, <code>mode</code>, <code>type</code>, and <code>sha</code>) specifying a tree structure.</p>",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "<p>The file referenced in the tree.</p>",
                      "name": "path",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The file referenced in the tree.",
                      "childParamsGroups": []
                    },
                    "mode": {
                      "type": "string",
                      "description": "<p>The file mode; one of <code>100644</code> for file (blob), <code>100755</code> for executable (blob), <code>040000</code> for subdirectory (tree), <code>160000</code> for submodule (commit), or <code>120000</code> for a blob that specifies the path of a symlink.</p>",
                      "enum": [
                        "100644",
                        "100755",
                        "040000",
                        "160000",
                        "120000"
                      ],
                      "name": "mode",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
                      "childParamsGroups": []
                    },
                    "type": {
                      "type": "string",
                      "description": "<p>Either <code>blob</code>, <code>tree</code>, or <code>commit</code>.</p>",
                      "enum": [
                        "blob",
                        "tree",
                        "commit"
                      ],
                      "name": "type",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "Either `blob`, `tree`, or `commit`.",
                      "childParamsGroups": []
                    },
                    "sha": {
                      "type": "string or nullable",
                      "description": "<p>The SHA1 checksum ID of the object in the tree. Also called <code>tree.sha</code>. If the value is <code>null</code> then the file will be deleted.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                      "nullable": true,
                      "name": "sha",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                      "childParamsGroups": []
                    },
                    "content": {
                      "type": "string",
                      "description": "<p>The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or <code>tree.sha</code>.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                      "name": "content",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                      "childParamsGroups": []
                    }
                  }
                },
                "name": "tree",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
                "childParamsGroups": [
                  {
                    "parentName": "tree",
                    "parentType": "items",
                    "id": "tree-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The file referenced in the tree.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The file referenced in the tree.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The file mode; one of <code>100644</code> for file (blob), <code>100755</code> for executable (blob), <code>040000</code> for subdirectory (tree), <code>160000</code> for submodule (commit), or <code>120000</code> for a blob that specifies the path of a symlink.</p>",
                        "enum": [
                          "100644",
                          "100755",
                          "040000",
                          "160000",
                          "120000"
                        ],
                        "name": "mode",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>Either <code>blob</code>, <code>tree</code>, or <code>commit</code>.</p>",
                        "enum": [
                          "blob",
                          "tree",
                          "commit"
                        ],
                        "name": "type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Either `blob`, `tree`, or `commit`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string or nullable",
                        "description": "<p>The SHA1 checksum ID of the object in the tree. Also called <code>tree.sha</code>. If the value is <code>null</code> then the file will be deleted.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                        "nullable": true,
                        "name": "sha",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or <code>tree.sha</code>.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                        "name": "content",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "base_tree": {
                "type": "string",
                "description": "<p>The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by <code>base_tree</code> and entries defined in the <code>tree</code> parameter. Entries defined in the <code>tree</code> parameter will overwrite items from <code>base_tree</code> with the same <code>path</code>. If you're creating new changes on a branch, then normally you'd set <code>base_tree</code> to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.\nIf not provided, GitHub will create a new Git tree object from only the entries defined in the <code>tree</code> parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the <code>tree</code> parameter will be listed as deleted by the new commit.</p>",
                "name": "base_tree",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by `base_tree` and entries defined in the `tree` parameter. Entries defined in the `tree` parameter will overwrite items from `base_tree` with the same `path`. If you're creating new changes on a branch, then normally you'd set `base_tree` to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.\nIf not provided, GitHub will create a new Git tree object from only the entries defined in the `tree` parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the `tree` parameter will be listed as deleted by the new commit.\n",
                "childParamsGroups": []
              }
            },
            "required": [
              "tree"
            ]
          },
          "example": {
            "base_tree": "9fb037999f264ba9a7fc6274d15fa3ae2ab98312",
            "tree": [
              {
                "path": "file.rb",
                "mode": "100644",
                "type": "blob",
                "sha": "44b4fc6d56897b048c772eb4087f854f46256132"
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "trees"
    },
    "slug": "create-a-tree",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "trees",
    "subcategoryLabel": "Trees",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.</p>\n<p>If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-commit\">Create a commit</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/git#update-a-reference\">Update a reference</a>.\"</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"cd8274d15fa3ae2ab983129fb037999f264ba9a7\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7\"</span>,\n  <span class=\"hljs-attr\">\"tree\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file.rb\"</span>,\n      <span class=\"hljs-attr\">\"mode\"</span>: <span class=\"hljs-string\">\"100644\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"blob\"</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">132</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"truncated\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "array of objects",
        "description": "<p><strong>Required</strong>. Objects (of <code>path</code>, <code>mode</code>, <code>type</code>, and <code>sha</code>) specifying a tree structure.</p>",
        "items": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "description": "<p>The file referenced in the tree.</p>",
              "name": "path",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The file referenced in the tree.",
              "childParamsGroups": []
            },
            "mode": {
              "type": "string",
              "description": "<p>The file mode; one of <code>100644</code> for file (blob), <code>100755</code> for executable (blob), <code>040000</code> for subdirectory (tree), <code>160000</code> for submodule (commit), or <code>120000</code> for a blob that specifies the path of a symlink.</p>",
              "enum": [
                "100644",
                "100755",
                "040000",
                "160000",
                "120000"
              ],
              "name": "mode",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
              "childParamsGroups": []
            },
            "type": {
              "type": "string",
              "description": "<p>Either <code>blob</code>, <code>tree</code>, or <code>commit</code>.</p>",
              "enum": [
                "blob",
                "tree",
                "commit"
              ],
              "name": "type",
              "in": "body",
              "rawType": "string",
              "rawDescription": "Either `blob`, `tree`, or `commit`.",
              "childParamsGroups": []
            },
            "sha": {
              "type": "string or nullable",
              "description": "<p>The SHA1 checksum ID of the object in the tree. Also called <code>tree.sha</code>. If the value is <code>null</code> then the file will be deleted.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
              "nullable": true,
              "name": "sha",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
              "childParamsGroups": []
            },
            "content": {
              "type": "string",
              "description": "<p>The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or <code>tree.sha</code>.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
              "name": "content",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
              "childParamsGroups": []
            }
          }
        },
        "name": "tree",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
        "childParamsGroups": [
          {
            "parentName": "tree",
            "parentType": "items",
            "id": "tree-items",
            "params": [
              {
                "type": "string",
                "description": "<p>The file referenced in the tree.</p>",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The file referenced in the tree.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The file mode; one of <code>100644</code> for file (blob), <code>100755</code> for executable (blob), <code>040000</code> for subdirectory (tree), <code>160000</code> for submodule (commit), or <code>120000</code> for a blob that specifies the path of a symlink.</p>",
                "enum": [
                  "100644",
                  "100755",
                  "040000",
                  "160000",
                  "120000"
                ],
                "name": "mode",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>Either <code>blob</code>, <code>tree</code>, or <code>commit</code>.</p>",
                "enum": [
                  "blob",
                  "tree",
                  "commit"
                ],
                "name": "type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Either `blob`, `tree`, or `commit`.",
                "childParamsGroups": []
              },
              {
                "type": "string or nullable",
                "description": "<p>The SHA1 checksum ID of the object in the tree. Also called <code>tree.sha</code>. If the value is <code>null</code> then the file will be deleted.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                "nullable": true,
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or <code>tree.sha</code>.  </p>\n<p><strong>Note:</strong> Use either <code>tree.sha</code> or <code>content</code> to specify the contents of the entry. Using both <code>tree.sha</code> and <code>content</code> will return an error.</p>",
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "string",
        "description": "<p>The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by <code>base_tree</code> and entries defined in the <code>tree</code> parameter. Entries defined in the <code>tree</code> parameter will overwrite items from <code>base_tree</code> with the same <code>path</code>. If you're creating new changes on a branch, then normally you'd set <code>base_tree</code> to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.\nIf not provided, GitHub will create a new Git tree object from only the entries defined in the <code>tree</code> parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the <code>tree</code> parameter will be listed as deleted by the new commit.</p>",
        "name": "base_tree",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by `base_tree` and entries defined in the `tree` parameter. Entries defined in the `tree` parameter will overwrite items from `base_tree` with the same `path`. If you're creating new changes on a branch, then normally you'd set `base_tree` to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.\nIf not provided, GitHub will create a new Git tree object from only the entries defined in the `tree` parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the `tree` parameter will be listed as deleted by the new commit.\n",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/git/trees/{tree_sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "tree_sha",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": ""
      },
      {
        "name": "recursive",
        "description": "Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in `:tree_sha`. For example, setting `recursive` to any of the following will enable returning objects or subtrees: `0`, `1`, `\"true\"`, and `\"false\"`. Omit this parameter to prevent recursively returning objects or subtrees.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in <code>:tree_sha</code>. For example, setting <code>recursive</code> to any of the following will enable returning objects or subtrees: <code>0</code>, <code>1</code>, <code>\"true\"</code>, and <code>\"false\"</code>. Omit this parameter to prevent recursively returning objects or subtrees.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/trees/TREE_SHA",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/git/trees/TREE_SHA</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/git/trees/{tree_sha}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tree_sha: 'tree_sha'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/git/trees/{tree_sha}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tree_sha</span>: <span class=\"hljs-string\">'tree_sha'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a tree",
    "description": "Returns a single tree using the SHA1 value for that tree.\n\nIf `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.",
    "tags": [
      "git"
    ],
    "operationId": "git/get-tree",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tree"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "git",
      "subcategory": "trees"
    },
    "slug": "get-a-tree",
    "category": "git",
    "categoryLabel": "Git",
    "subcategory": "trees",
    "subcategoryLabel": "Trees",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns a single tree using the SHA1 value for that tree.</p>\n<p>If <code>truncated</code> is <code>true</code> in the response then the number of items in the <code>tree</code> array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/hooks', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/hooks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository webhooks",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-webhooks",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-webhooks"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "list-repository-webhooks",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/hooks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/hooks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a repository webhook",
    "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\nshare the same `config` as long as those webhooks do not have any `events` that overlap.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>Use <code>web</code> to create a webhook. Default: <code>web</code>. This parameter only accepts the value <code>web</code>.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.",
                "childParamsGroups": []
              },
              "config": {
                "type": "object",
                "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params\">These are defined below</a>.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p>The URL to which the payloads will be delivered.</p>",
                    "example": "https://example.com/webhook",
                    "format": "uri",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "example": "\"json\"",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                    "example": "\"********\"",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "example": "\"0\""
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "name": "insecure_ssl",
                    "in": "body",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "type": "string or number",
                    "childParamsGroups": []
                  },
                  "token": {
                    "type": "string",
                    "example": "\"abc\"",
                    "name": "token",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  },
                  "digest": {
                    "type": "string",
                    "example": "\"sha256\"",
                    "name": "digest",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  }
                },
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params).",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p>The URL to which the payloads will be delivered.</p>",
                        "example": "https://example.com/webhook",
                        "format": "uri",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "example": "\"json\"",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                        "example": "\"********\"",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                        "childParamsGroups": []
                      },
                      {
                        "oneOf": [
                          {
                            "type": "string",
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "example": "\"0\""
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "name": "insecure_ssl",
                        "in": "body",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "type": "string or number",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"abc\"",
                        "name": "token",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"sha256\"",
                        "name": "digest",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
                "default": [
                  "push"
                ],
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              }
            },
            "additionalProperties": false
          },
          "example": {
            "name": "web",
            "active": true,
            "events": [
              "push",
              "pull_request"
            ],
            "config": {
              "url": "https://example.com/webhook",
              "content_type": "json",
              "insecure_ssl": "0"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "create-a-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Repositories can have multiple webhooks installed. Each webhook should have a unique <code>config</code>. Multiple webhooks can\nshare the same <code>config</code> as long as those webhooks do not have any <code>events</code> that overlap.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Repository\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">12345678</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"push\"</span>,\n    <span class=\"hljs-string\">\"pull_request\"</span>\n  ],\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"json\"</span>,\n    <span class=\"hljs-attr\">\"insecure_ssl\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://example.com/webhook\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2019-06-03T00:57:16Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2019-06-03T00:57:16Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\"</span>,\n  <span class=\"hljs-attr\">\"test_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\"</span>,\n  <span class=\"hljs-attr\">\"last_response\"</span>: {\n    <span class=\"hljs-attr\">\"code\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"unused\"</span>,\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>Use <code>web</code> to create a webhook. Default: <code>web</code>. This parameter only accepts the value <code>web</code>.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.",
        "childParamsGroups": []
      },
      {
        "type": "object",
        "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params\">These are defined below</a>.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p>The URL to which the payloads will be delivered.</p>",
            "example": "https://example.com/webhook",
            "format": "uri",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "example": "\"json\"",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
            "example": "\"********\"",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "oneOf": [
              {
                "type": "string",
                "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "example": "\"0\""
              },
              {
                "type": "number"
              }
            ],
            "name": "insecure_ssl",
            "in": "body",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "type": "string or number",
            "childParamsGroups": []
          },
          "token": {
            "type": "string",
            "example": "\"abc\"",
            "name": "token",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          },
          "digest": {
            "type": "string",
            "example": "\"sha256\"",
            "name": "digest",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          }
        },
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params).",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p>The URL to which the payloads will be delivered.</p>",
                "example": "https://example.com/webhook",
                "format": "uri",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "example": "\"json\"",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                "example": "\"********\"",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                "childParamsGroups": []
              },
              {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "example": "\"0\""
                  },
                  {
                    "type": "number"
                  }
                ],
                "name": "insecure_ssl",
                "in": "body",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "type": "string or number",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"abc\"",
                "name": "token",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"sha256\"",
                "name": "digest",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for.</p>",
        "default": [
          "push"
        ],
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/hooks/{hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository webhook",
    "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "get-a-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns a webhook configured in a repository. To get only the webhook <code>config</code> properties, see \"<a href=\"/rest/reference/repos#get-a-webhook-configuration-for-a-repository\">Get a webhook configuration for a repository</a>.\"</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\",\"address\":\"address\",\"room\":\"room\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42 \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\",\"address\":\"address\",\"room\":\"room\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/hooks/{hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  hook_id: 42,\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl',\n    address: 'address',\n    room: 'room'\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">config</span>: {\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'url'</span>,\n    <span class=\"hljs-attr\">content_type</span>: <span class=\"hljs-string\">'content_type'</span>,\n    <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">'secret'</span>,\n    <span class=\"hljs-attr\">insecure_ssl</span>: <span class=\"hljs-string\">'insecure_ssl'</span>,\n    <span class=\"hljs-attr\">address</span>: <span class=\"hljs-string\">'address'</span>,\n    <span class=\"hljs-attr\">room</span>: <span class=\"hljs-string\">'room'</span>\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a repository webhook",
    "description": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository).\"",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-repository-webhook"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params\">These are defined below</a>.</p>",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                    "example": "https://example.com/webhook",
                    "format": "uri",
                    "name": "url",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The URL to which the payloads will be delivered.",
                    "childParamsGroups": []
                  },
                  "content_type": {
                    "type": "string",
                    "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                    "example": "\"json\"",
                    "name": "content_type",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                    "childParamsGroups": []
                  },
                  "secret": {
                    "type": "string",
                    "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                    "example": "\"********\"",
                    "name": "secret",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                    "childParamsGroups": []
                  },
                  "insecure_ssl": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                        "example": "\"0\""
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "name": "insecure_ssl",
                    "in": "body",
                    "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                    "type": "string or number",
                    "childParamsGroups": []
                  },
                  "address": {
                    "type": "string",
                    "example": "\"bar@example.com\"",
                    "name": "address",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  },
                  "room": {
                    "type": "string",
                    "example": "\"The Serious Room\"",
                    "name": "room",
                    "in": "body",
                    "rawType": "string",
                    "description": "",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "url"
                ],
                "name": "config",
                "in": "body",
                "rawType": "object",
                "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params).",
                "childParamsGroups": [
                  {
                    "parentName": "config",
                    "parentType": "object",
                    "id": "config-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                        "example": "https://example.com/webhook",
                        "format": "uri",
                        "name": "url",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The URL to which the payloads will be delivered.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                        "example": "\"json\"",
                        "name": "content_type",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                        "example": "\"********\"",
                        "name": "secret",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                        "childParamsGroups": []
                      },
                      {
                        "oneOf": [
                          {
                            "type": "string",
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "example": "\"0\""
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "name": "insecure_ssl",
                        "in": "body",
                        "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                        "type": "string or number",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"bar@example.com\"",
                        "name": "address",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "\"The Serious Room\"",
                        "name": "room",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              },
              "events": {
                "type": "array of strings",
                "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for. This replaces the entire array of events.</p>",
                "default": [
                  "push"
                ],
                "items": {
                  "type": "string"
                },
                "name": "events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.",
                "childParamsGroups": []
              },
              "add_events": {
                "type": "array of strings",
                "description": "<p>Determines a list of events to be added to the list of events that the Hook triggers for.</p>",
                "items": {
                  "type": "string"
                },
                "name": "add_events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines a list of events to be added to the list of events that the Hook triggers for.",
                "childParamsGroups": []
              },
              "remove_events": {
                "type": "array of strings",
                "description": "<p>Determines a list of events to be removed from the list of events that the Hook triggers for.</p>",
                "items": {
                  "type": "string"
                },
                "name": "remove_events",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
                "childParamsGroups": []
              },
              "active": {
                "type": "boolean",
                "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
                "default": true,
                "name": "active",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "active": true,
            "add_events": [
              "pull_request"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "update-a-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Updates a webhook configured in a repository. If you previously had a <code>secret</code> set, you must provide the same <code>secret</code> or set a new <code>secret</code> or the secret will be removed. If you are only updating individual webhook <code>config</code> properties, use \"<a href=\"/rest/reference/repos#update-a-webhook-configuration-for-a-repository\">Update a webhook configuration for a repository</a>.\"</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Repository\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">12345678</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"web\"</span>,\n  <span class=\"hljs-attr\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"events\"</span>: [\n    <span class=\"hljs-string\">\"push\"</span>,\n    <span class=\"hljs-string\">\"pull_request\"</span>\n  ],\n  <span class=\"hljs-attr\">\"config\"</span>: {\n    <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"json\"</span>,\n    <span class=\"hljs-attr\">\"insecure_ssl\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://example.com/webhook\"</span>\n  },\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2019-06-03T00:57:16Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2019-06-03T00:57:16Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\"</span>,\n  <span class=\"hljs-attr\">\"test_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\"</span>,\n  <span class=\"hljs-attr\">\"ping_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\"</span>,\n  <span class=\"hljs-attr\">\"last_response\"</span>: {\n    <span class=\"hljs-attr\">\"code\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"unused\"</span>,\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "object",
        "description": "<p>Key/value pairs to provide settings for this webhook. <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params\">These are defined below</a>.</p>",
        "properties": {
          "url": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
            "example": "https://example.com/webhook",
            "format": "uri",
            "name": "url",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The URL to which the payloads will be delivered.",
            "childParamsGroups": []
          },
          "content_type": {
            "type": "string",
            "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
            "example": "\"json\"",
            "name": "content_type",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "childParamsGroups": []
          },
          "secret": {
            "type": "string",
            "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
            "example": "\"********\"",
            "name": "secret",
            "in": "body",
            "rawType": "string",
            "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
            "childParamsGroups": []
          },
          "insecure_ssl": {
            "oneOf": [
              {
                "type": "string",
                "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                "example": "\"0\""
              },
              {
                "type": "number"
              }
            ],
            "name": "insecure_ssl",
            "in": "body",
            "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
            "type": "string or number",
            "childParamsGroups": []
          },
          "address": {
            "type": "string",
            "example": "\"bar@example.com\"",
            "name": "address",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          },
          "room": {
            "type": "string",
            "example": "\"The Serious Room\"",
            "name": "room",
            "in": "body",
            "rawType": "string",
            "description": "",
            "childParamsGroups": []
          }
        },
        "required": [
          "url"
        ],
        "name": "config",
        "in": "body",
        "rawType": "object",
        "rawDescription": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-hook-config-params).",
        "childParamsGroups": [
          {
            "parentName": "config",
            "parentType": "object",
            "id": "config-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The URL to which the payloads will be delivered.</p>",
                "example": "https://example.com/webhook",
                "format": "uri",
                "name": "url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The URL to which the payloads will be delivered.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The media type used to serialize the payloads. Supported values include <code>json</code> and <code>form</code>. The default is <code>form</code>.</p>",
                "example": "\"json\"",
                "name": "content_type",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>If provided, the <code>secret</code> will be used as the <code>key</code> to generate the HMAC hex digest value for <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers\">delivery signature headers</a>.</p>",
                "example": "\"********\"",
                "name": "secret",
                "in": "body",
                "rawType": "string",
                "rawDescription": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).",
                "childParamsGroups": []
              },
              {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                    "example": "\"0\""
                  },
                  {
                    "type": "number"
                  }
                ],
                "name": "insecure_ssl",
                "in": "body",
                "description": "<p>Determines whether the SSL certificate of the host for <code>url</code> will be verified when delivering payloads. Supported values include <code>0</code> (verification is performed) and <code>1</code> (verification is not performed). The default is <code>0</code>. <strong>We strongly recommend not setting this to <code>1</code> as you are subject to man-in-the-middle and other attacks.</strong></p>",
                "type": "string or number",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"bar@example.com\"",
                "name": "address",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "\"The Serious Room\"",
                "name": "room",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      },
      {
        "type": "array of strings",
        "description": "<p>Determines what <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads\">events</a> the hook is triggered for. This replaces the entire array of events.</p>",
        "default": [
          "push"
        ],
        "items": {
          "type": "string"
        },
        "name": "events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines what [events](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>Determines a list of events to be added to the list of events that the Hook triggers for.</p>",
        "items": {
          "type": "string"
        },
        "name": "add_events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines a list of events to be added to the list of events that the Hook triggers for.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>Determines a list of events to be removed from the list of events that the Hook triggers for.</p>",
        "items": {
          "type": "string"
        },
        "name": "remove_events",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if notifications are sent when the webhook is triggered. Set to <code>true</code> to send notifications.</p>",
        "default": true,
        "name": "active",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/hooks/{hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/hooks/{hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a repository webhook",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "delete-a-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/hooks/{hook_id}/pings",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42/pings",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42/pings</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/hooks/{hook_id}/pings', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/hooks/{hook_id}/pings'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Ping a repository webhook",
    "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the hook.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/ping-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#ping-a-repository-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "ping-a-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This will trigger a <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event\">ping event</a> to be sent to the hook.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/hooks/{hook_id}/tests",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42/tests",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/hooks/42/tests</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/hooks/{hook_id}/tests', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  hook_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/hooks/{hook_id}/tests'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">hook_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Test the push repository webhook",
    "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`",
    "tags": [
      "repos"
    ],
    "operationId": "repos/test-push-webhook",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#test-the-push-repository-webhook"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "webhooks"
    },
    "slug": "test-the-push-repository-webhook",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "webhooks",
    "subcategoryLabel": "Webhooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This will trigger the hook with the latest push to the current repository if the hook is subscribed to <code>push</code> events. If the hook is not subscribed to <code>push</code> events, the server will respond with 204 but no test POST will be generated.</p>\n<p><strong>Note</strong>: Previously <code>/repos/:owner/:repo/hooks/:hook_id/test</code></p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/installation",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/installation",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/installation</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/installation', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/installation'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository installation for the authenticated app",
    "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-repo-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-a-repository-installation-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/invitations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/invitations', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/invitations'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository invitations",
    "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-invitations",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-invitations"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "list-repository-invitations",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>invitation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations/42 \\\n  -d '{\"permissions\":\"permissions\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations/42 \\\n  -d '{\"permissions\":\"permissions\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/invitations/{invitation_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  invitation_id: 42,\n  permissions: 'permissions'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/invitations/{invitation_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">invitation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">permissions</span>: <span class=\"hljs-string\">'permissions'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a repository invitation",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-invitation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-repository-invitation"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "permissions": {
                "type": "string",
                "description": "<p>The permissions that the associated user will have on the repository. Valid values are <code>read</code>, <code>write</code>, <code>maintain</code>, <code>triage</code>, and <code>admin</code>.</p>",
                "enum": [
                  "read",
                  "write",
                  "maintain",
                  "triage",
                  "admin"
                ],
                "name": "permissions",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "update-a-repository-invitation",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The permissions that the associated user will have on the repository. Valid values are <code>read</code>, <code>write</code>, <code>maintain</code>, <code>triage</code>, and <code>admin</code>.</p>",
        "enum": [
          "read",
          "write",
          "maintain",
          "triage",
          "admin"
        ],
        "name": "permissions",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"owner\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n    <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n    <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n    <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n    <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n    <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n    <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n    <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n    <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n    <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n    <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n    <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n    <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n    <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n    <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n    <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n    <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n    <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n    <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n    <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n    <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n    <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n    <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n    <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n    <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n    <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n    <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n    <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"http://api.github.com/repos/octocat/Hello-World/hooks\"</span>\n  },\n  <span class=\"hljs-attr\">\"invitee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"inviter\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"permissions\"</span>: <span class=\"hljs-string\">\"write\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-06-13T14:52:50-05:00\"</span>,\n  <span class=\"hljs-attr\">\"expired\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/user/repository_invitations/1296269\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/invitations\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>invitation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/invitations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/invitations/{invitation_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  invitation_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/invitations/{invitation_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">invitation_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a repository invitation",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-invitation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository-invitation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "delete-a-repository-invitation",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "milestone",
        "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>If an <code>integer</code> is passed, it should refer to a milestone by its <code>number</code> field. If the string <code>*</code> is passed, issues with any milestone are accepted. If the string <code>none</code> is passed, issues without milestones are returned.</p>"
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the issues to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "assignee",
        "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Can be the name of a user. Pass in <code>none</code> for issues with no assigned user, and <code>*</code> for issues assigned to any user.</p>"
      },
      {
        "name": "creator",
        "description": "The user that created the issue.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The user that created the issue.</p>"
      },
      {
        "name": "mentioned",
        "description": "A user that's mentioned in the issue.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>A user that's mentioned in the issue.</p>"
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>A list of comma separated label names. Example: <code>bug,ui,@high</code></p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>What to sort results by. Can be either <code>created</code>, <code>updated</code>, <code>comments</code>.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository issues",
    "description": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-repository-issues"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues"
    },
    "slug": "list-repository-issues",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List issues in a repository.</p>\n<p><strong>Note</strong>: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe <code>pull_request</code> key. Be aware that the <code>id</code> of a pull request returned from \"Issues\" endpoints will be an <em>issue id</em>. To find out the pull\nrequest id, use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a>\" endpoint.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  title: 'title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create an issue",
    "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/create",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "description": "<p><strong>Required</strong>. The title of the issue.</p>",
                "name": "title",
                "in": "body",
                "rawDescription": "The title of the issue.",
                "type": "string or integer",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The contents of the issue.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the issue.",
                "childParamsGroups": []
              },
              "assignee": {
                "type": "string or nullable",
                "description": "<p>Login for the user that this issue should be assigned to. <em>NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. <strong>This field is deprecated.</strong></em></p>",
                "nullable": true,
                "name": "assignee",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
                "childParamsGroups": []
              },
              "milestone": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._"
                  }
                ],
                "nullable": true,
                "name": "milestone",
                "in": "body",
                "description": "<p>The <code>number</code> of the milestone to associate this issue with. <em>NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.</em></p>",
                "type": "string or integer or nullable",
                "childParamsGroups": []
              },
              "labels": {
                "type": "array of strings or array of objects",
                "description": "<p>Labels to associate with this issue. <em>NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.</em></p>",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "color": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                },
                "name": "labels",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
                "childParamsGroups": []
              },
              "assignees": {
                "type": "array of strings",
                "description": "<p>Logins for Users to assign to this issue. <em>NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</em></p>",
                "items": {
                  "type": "string"
                },
                "name": "assignees",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
                "childParamsGroups": []
              }
            },
            "required": [
              "title"
            ]
          },
          "example": {
            "title": "Found a bug",
            "body": "I'm having a problem with this.",
            "assignees": [
              "octocat"
            ],
            "milestone": 1,
            "labels": [
              "bug"
            ]
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": null
    },
    "slug": "create-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Any user with pull access to a repository can create an issue. If <a href=\"https://help.github.com/articles/disabling-issues/\">issues are disabled in the repository</a>, the API returns a <code>410 Gone</code> status.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6SXNzdWUx\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Found a bug\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"I'm having a problem with this.\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"pull_request\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n    <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n    <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>\n  },\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_by\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [
      {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "description": "<p><strong>Required</strong>. The title of the issue.</p>",
        "name": "title",
        "in": "body",
        "rawDescription": "The title of the issue.",
        "type": "string or integer",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The contents of the issue.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the issue.",
        "childParamsGroups": []
      },
      {
        "type": "string or nullable",
        "description": "<p>Login for the user that this issue should be assigned to. <em>NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. <strong>This field is deprecated.</strong></em></p>",
        "nullable": true,
        "name": "assignee",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
        "childParamsGroups": []
      },
      {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer",
            "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._"
          }
        ],
        "nullable": true,
        "name": "milestone",
        "in": "body",
        "description": "<p>The <code>number</code> of the milestone to associate this issue with. <em>NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.</em></p>",
        "type": "string or integer or nullable",
        "childParamsGroups": []
      },
      {
        "type": "array of strings or array of objects",
        "description": "<p>Labels to associate with this issue. <em>NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.</em></p>",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "color": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          ]
        },
        "name": "labels",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>Logins for Users to assign to this issue. <em>NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</em></p>",
        "items": {
          "type": "string"
        },
        "name": "assignees",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>One of <code>created</code> (when the repository was starred) or <code>updated</code> (when it was last pushed to).</p>"
      },
      {
        "name": "direction",
        "description": "Either `asc` or `desc`. Ignored without the `sort` parameter.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Either <code>asc</code> or <code>desc</code>. Ignored without the <code>sort</code> parameter.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/comments', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List issue comments for a repository",
    "description": "By default, Issue Comments are ordered by ascending ID.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-comments-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-comments-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "list-issue-comments-for-a-repository",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>By default, Issue Comments are ordered by ascending ID.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an issue comment",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/get-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "get-an-issue-comment",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update an issue comment",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/update-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#update-an-issue-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Me too"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "update-an-issue-comment",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOklzc3VlQ29tbWVudDE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Me too\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"issue_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete an issue comment",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/delete-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-an-issue-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "delete-an-issue-comment",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue comment.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to an issue comment.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for an issue comment",
    "description": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments).",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/list-for-issue-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-an-issue-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-an-issue-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments\">issue comment</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for an issue comment",
    "description": "Create a reaction to an [issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments). A response with an HTTP `200` status means that you already added the reaction type to this issue comment.",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/create-for-issue-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-an-issue-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the issue comment.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the issue comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-an-issue-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments\">issue comment</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this issue comment.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the issue comment.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the issue comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Reaction exists",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Reaction created",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/events', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/events'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List issue events for a repository",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-events-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-events-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "starfox",
          "note": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.starfox-preview+json\n```",
          "html": "<p>Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the <a href=\"https://developer.github.com/changes/2018-09-05-project-card-events\">blog post</a>.</p>\n<p>To receive the <code>project_card</code> attribute, project boards must be <a href=\"https://help.github.com/articles/disabling-project-boards-in-a-repository\">enabled</a> for a repository, and you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.starfox-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "issues",
      "subcategory": "events"
    },
    "slug": "list-issue-events-for-a-repository",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/events/{event_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "event_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/events/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/events/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/events/{event_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  event_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/events/{event_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">event_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an issue event",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/get-event",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue-event"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "starfox",
          "note": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.starfox-preview+json\n```",
          "html": "<p>Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the <a href=\"https://developer.github.com/changes/2018-09-05-project-card-events\">blog post</a>.</p>\n<p>To receive the <code>project_card</code> attribute, project boards must be <a href=\"https://help.github.com/articles/disabling-project-boards-in-a-repository\">enabled</a> for a repository, and you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.starfox-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues",
      "subcategory": "events"
    },
    "slug": "get-an-issue-event",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an issue",
    "description": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "issues",
      "subcategory": null
    },
    "slug": "get-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The API returns a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-redirects-redirects\"><code>301 Moved Permanently</code> status</a> if the issue was\n<a href=\"https://help.github.com/articles/transferring-an-issue-to-another-repository/\">transferred</a> to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a <code>404 Not Found</code> status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a <code>410 Gone</code> status. To receive webhook events for transferred and deleted issues, subscribe\nto the <a href=\"https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#issues\"><code>issues</code></a> webhook.</p>\n<p><strong>Note</strong>: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe <code>pull_request</code> key. Be aware that the <code>id</code> of a pull request returned from \"Issues\" endpoints will be an <em>issue id</em>. To find out the pull\nrequest id, use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a>\" endpoint.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42 \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42 \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/issues/{issue_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  title: 'title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/issues/{issue_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update an issue",
    "description": "Issue owners and users with push access can edit an issue.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues/#update-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "description": "<p>The title of the issue.</p>",
                "nullable": true,
                "name": "title",
                "in": "body",
                "rawDescription": "The title of the issue.",
                "type": "string or integer or nullable",
                "childParamsGroups": []
              },
              "body": {
                "type": "string or nullable",
                "description": "<p>The contents of the issue.</p>",
                "nullable": true,
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the issue.",
                "childParamsGroups": []
              },
              "assignee": {
                "type": "string or nullable",
                "nullable": true,
                "description": "<p>Login for the user that this issue should be assigned to. <strong>This field is deprecated.</strong></p>",
                "name": "assignee",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
                "childParamsGroups": []
              },
              "state": {
                "type": "string",
                "description": "<p>State of the issue. Either <code>open</code> or <code>closed</code>.</p>",
                "enum": [
                  "open",
                  "closed"
                ],
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "State of the issue. Either `open` or `closed`.",
                "childParamsGroups": []
              },
              "milestone": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._"
                  }
                ],
                "nullable": true,
                "name": "milestone",
                "in": "body",
                "description": "<p>The <code>number</code> of the milestone to associate this issue with or <code>null</code> to remove current. <em>NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise.</em></p>",
                "type": "string or integer or nullable",
                "childParamsGroups": []
              },
              "labels": {
                "type": "array of strings or array of objects",
                "description": "<p>Labels to associate with this issue. Pass one or more Labels to <em>replace</em> the set of Labels on this Issue. Send an empty array (<code>[]</code>) to clear all Labels from the Issue. <em>NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise.</em></p>",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "color": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                },
                "name": "labels",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
                "childParamsGroups": []
              },
              "assignees": {
                "type": "array of strings",
                "description": "<p>Logins for Users to assign to this issue. Pass one or more user logins to <em>replace</em> the set of assignees on this Issue. Send an empty array (<code>[]</code>) to clear all assignees from the Issue. <em>NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</em></p>",
                "items": {
                  "type": "string"
                },
                "name": "assignees",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "title": "Found a bug",
            "body": "I'm having a problem with this.",
            "assignees": [
              "octocat"
            ],
            "milestone": 1,
            "state": "open",
            "labels": [
              "bug"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": null
    },
    "slug": "update-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Issue owners and users with push access can edit an issue.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6SXNzdWUx\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Found a bug\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"I'm having a problem with this.\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"pull_request\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n    <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n    <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>\n  },\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_by\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "301",
        "httpStatusMessage": "Moved Permanently",
        "description": "Moved permanently"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [
      {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "description": "<p>The title of the issue.</p>",
        "nullable": true,
        "name": "title",
        "in": "body",
        "rawDescription": "The title of the issue.",
        "type": "string or integer or nullable",
        "childParamsGroups": []
      },
      {
        "type": "string or nullable",
        "description": "<p>The contents of the issue.</p>",
        "nullable": true,
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the issue.",
        "childParamsGroups": []
      },
      {
        "type": "string or nullable",
        "nullable": true,
        "description": "<p>Login for the user that this issue should be assigned to. <strong>This field is deprecated.</strong></p>",
        "name": "assignee",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>State of the issue. Either <code>open</code> or <code>closed</code>.</p>",
        "enum": [
          "open",
          "closed"
        ],
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "State of the issue. Either `open` or `closed`.",
        "childParamsGroups": []
      },
      {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer",
            "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._"
          }
        ],
        "nullable": true,
        "name": "milestone",
        "in": "body",
        "description": "<p>The <code>number</code> of the milestone to associate this issue with or <code>null</code> to remove current. <em>NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise.</em></p>",
        "type": "string or integer or nullable",
        "childParamsGroups": []
      },
      {
        "type": "array of strings or array of objects",
        "description": "<p>Labels to associate with this issue. Pass one or more Labels to <em>replace</em> the set of Labels on this Issue. Send an empty array (<code>[]</code>) to clear all Labels from the Issue. <em>NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise.</em></p>",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "color": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          ]
        },
        "name": "labels",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>Logins for Users to assign to this issue. Pass one or more user logins to <em>replace</em> the set of assignees on this Issue. Send an empty array (<code>[]</code>) to clear all assignees from the Issue. <em>NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</em></p>",
        "items": {
          "type": "string"
        },
        "name": "assignees",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/assignees \\\n  -d '{\"assignees\":[\"assignees\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/assignees \\\n  -d '{\"assignees\":[\"assignees\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues/{issue_number}/assignees', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  assignees: [\n    'assignees'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues/{issue_number}/assignees'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">assignees</span>: [\n    <span class=\"hljs-string\">'assignees'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Add assignees to an issue",
    "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/add-assignees",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#add-assignees-to-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "assignees": {
                "type": "array of strings",
                "description": "<p>Usernames of people to assign this issue to. <em>NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.</em></p>",
                "items": {
                  "type": "string"
                },
                "name": "assignees",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "assignees": [
              "hubot",
              "other_user"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "assignees"
    },
    "slug": "add-assignees-to-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "assignees",
    "subcategoryLabel": "Assignees",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.</p>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p>Usernames of people to assign this issue to. <em>NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.</em></p>",
        "items": {
          "type": "string"
        },
        "name": "assignees",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6SXNzdWUx\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Found a bug\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"I'm having a problem with this.\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"other_user\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/other_user_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/other_user\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"pull_request\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n    <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n    <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>\n  },\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/assignees \\\n  -d '{\"assignees\":[\"assignees\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/assignees \\\n  -d '{\"assignees\":[\"assignees\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  assignees: [\n    'assignees'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">assignees</span>: [\n    <span class=\"hljs-string\">'assignees'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Remove assignees from an issue",
    "description": "Removes one or more assignees from an issue.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/remove-assignees",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-assignees-from-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "assignees": {
                "type": "array of strings",
                "description": "<p>Usernames of assignees to remove from an issue. <em>NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.</em></p>",
                "items": {
                  "type": "string"
                },
                "name": "assignees",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "assignees": [
              "hubot",
              "other_user"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "assignees"
    },
    "slug": "remove-assignees-from-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "assignees",
    "subcategoryLabel": "Assignees",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Removes one or more assignees from an issue.</p>",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p>Usernames of assignees to remove from an issue. <em>NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.</em></p>",
        "items": {
          "type": "string"
        },
        "name": "assignees",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6SXNzdWUx\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Found a bug\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"I'm having a problem with this.\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"other_user\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/other_user_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/other_user\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"pull_request\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n    <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n    <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>\n  },\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-22T13:33:48Z\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List issue comments",
    "description": "Issue Comments are ordered by ascending ID.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-comments",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-comments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "list-issue-comments",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Issue Comments are ordered by ascending ID.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/comments \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/comments \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues/{issue_number}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create an issue comment",
    "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/create-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Me too"
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "comments"
    },
    "slug": "create-an-issue-comment",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The contents of the comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOklzc3VlQ29tbWVudDE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Me too\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"issue_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}/events', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}/events'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List issue events",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-events",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-events"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "starfox",
          "note": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.starfox-preview+json\n```",
          "html": "<p>Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the <a href=\"https://developer.github.com/changes/2018-09-05-project-card-events\">blog post</a>.</p>\n<p>To receive the <code>project_card</code> attribute, project boards must be <a href=\"https://help.github.com/articles/disabling-project-boards-in-a-repository\">enabled</a> for a repository, and you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.starfox-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "issues",
      "subcategory": "events"
    },
    "slug": "list-issue-events",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List labels for an issue",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-labels-on-issue",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "list-labels-for-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues/{issue_number}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues/{issue_number}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add labels to an issue",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/add-labels",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#add-labels-to-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "array of strings",
                    "minItems": 1,
                    "description": "<p>The names of the labels to add to the issue. You can pass an empty array to remove all labels. <strong>Note:</strong> Alternatively, you can pass a single label as a <code>string</code> or an <code>array</code> of labels directly, but GitHub recommends passing an object with the <code>labels</code> key.</p>",
                    "items": {
                      "type": "string"
                    },
                    "name": "labels",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
                    "childParamsGroups": []
                  }
                }
              },
              {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              },
              {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "example": {
            "labels": [
              "bug",
              "enhancement"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "add-labels-to-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "array of strings",
        "minItems": 1,
        "description": "<p>The names of the labels to add to the issue. You can pass an empty array to remove all labels. <strong>Note:</strong> Alternatively, you can pass a single label as a <code>string</code> or an <code>array</code> of labels directly, but GitHub recommends passing an object with the <code>labels</code> key.</p>",
        "items": {
          "type": "string"
        },
        "name": "labels",
        "in": "body",
        "rawType": "array",
        "rawDescription": "The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n    <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n    <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045947</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDc=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"enhancement\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"New feature or request\"</span>,\n    <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"a2eeef\"</span>,\n    <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/issues/{issue_number}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/issues/{issue_number}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set labels for an issue",
    "description": "Removes any previous labels and sets the new labels for an issue.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/set-labels",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#set-labels-for-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "array",
                    "description": "The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "example": {
            "labels": [
              "bug",
              "enhancement"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "set-labels-for-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "contentType": "application/json",
    "notes": [],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes any previous labels and sets the new labels for an issue.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n    <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n    <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045947</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDc=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"enhancement\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"New feature or request\"</span>,\n    <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"a2eeef\"</span>,\n    <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove all labels from an issue",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/remove-all-labels",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-all-labels-from-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "remove-all-labels-from-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "name",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels/NAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/labels/NAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove a label from an issue",
    "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/remove-label",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-a-label-from-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "remove-a-label-from-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a <code>404 Not Found</code> status if the label does not exist.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/lock \\\n  -d '{\"lock_reason\":\"lock_reason\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/lock \\\n  -d '{\"lock_reason\":\"lock_reason\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/issues/{issue_number}/lock', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  lock_reason: 'lock_reason'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/issues/{issue_number}/lock'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">lock_reason</span>: <span class=\"hljs-string\">'lock_reason'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Lock an issue",
    "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "tags": [
      "issues"
    ],
    "operationId": "issues/lock",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#lock-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "lock_reason": {
                "type": "string",
                "description": "<p>The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:<br>\n* <code>off-topic</code><br>\n* <code>too heated</code><br>\n* <code>resolved</code><br>\n* <code>spam</code></p>",
                "enum": [
                  "off-topic",
                  "too heated",
                  "resolved",
                  "spam"
                ],
                "name": "lock_reason",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "issues"
    },
    "slug": "lock-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "<p>Users with push access can lock an issue or pull request's conversation.</p>\n<p>Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:<br>\n* <code>off-topic</code><br>\n* <code>too heated</code><br>\n* <code>resolved</code><br>\n* <code>spam</code></p>",
        "enum": [
          "off-topic",
          "too heated",
          "resolved",
          "spam"
        ],
        "name": "lock_reason",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/lock",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/lock</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Unlock an issue",
    "description": "Users with push access can unlock an issue's conversation.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/unlock",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#unlock-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": null
    },
    "slug": "unlock-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with push access can unlock an issue's conversation.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to an issue.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for an issue",
    "description": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.18/rest/reference/issues).",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/list-for-issue",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-an-issue",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/issues\">issue</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/issues/{issue_number}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/issues/{issue_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for an issue",
    "description": "Create a reaction to an [issue](https://docs.github.com/enterprise-server@2.18/rest/reference/issues/). A response with an HTTP `200` status means that you already added the reaction type to this issue.",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/create-for-issue",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-an-issue"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the issue.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the issue.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-an-issue",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/issues/\">issue</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this issue.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the issue.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the issue.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/issues/{issue_number}/timeline",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>issue_number parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.mockingbird-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/timeline",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.mockingbird-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/issues/42/timeline</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/issues/{issue_number}/timeline', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  issue_number: 42,\n  mediaType: {\n    previews: [\n      'mockingbird'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/issues/{issue_number}/timeline'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">issue_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'mockingbird'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List timeline events for an issue",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-events-for-timeline",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-timeline-events-for-an-issue"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "mockingbird",
          "note": "The API to get issue timeline events is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details. To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mockingbird-preview\n```",
          "html": "<p>The API to get issue timeline events is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-23-timeline-preview-api/\">blog post</a> for full details. To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mockingbird-preview</code></pre>"
        },
        {
          "required": false,
          "name": "starfox",
          "note": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.starfox-preview+json\n```",
          "html": "<p>Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the <a href=\"https://developer.github.com/changes/2018-09-05-project-card-events\">blog post</a>.</p>\n<p>To receive the <code>project_card</code> attribute, project boards must be <a href=\"https://help.github.com/articles/disabling-project-boards-in-a-repository\">enabled</a> for a repository, and you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.starfox-preview+json</code></pre>"
        }
      ],
      "category": "issues",
      "subcategory": "timeline"
    },
    "slug": "list-timeline-events-for-an-issue",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "timeline",
    "subcategoryLabel": "Timeline",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/keys', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/keys'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List deploy keys",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-deploy-keys",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deploy-keys"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "keys"
    },
    "slug": "list-deploy-keys",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys \\\n  -d '{\"key\":\"key\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys \\\n  -d '{\"key\":\"key\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/keys', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  key: 'key'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/keys'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">'key'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a deploy key",
    "description": "You can create a read-only deploy key.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-deploy-key",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deploy-key"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p>A name for the key.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A name for the key.",
                "childParamsGroups": []
              },
              "key": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The contents of the key.</p>",
                "name": "key",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the key.",
                "childParamsGroups": []
              },
              "read_only": {
                "type": "boolean",
                "description": "<p>If <code>true</code>, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  </p>\n<p>Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"<a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization/\">Repository permission levels for an organization</a>\" and \"<a href=\"https://help.github.com/articles/permission-levels-for-a-user-account-repository/\">Permission levels for a user account repository</a>.\"</p>",
                "name": "read_only",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\"",
                "childParamsGroups": []
              }
            },
            "required": [
              "key"
            ]
          },
          "example": {
            "title": "octocat@octomac",
            "key": "ssh-rsa AAA...",
            "read_only": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "keys"
    },
    "slug": "create-a-deploy-key",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>You can create a read-only deploy key.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>A name for the key.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A name for the key.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The contents of the key.</p>",
        "name": "key",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the key.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>If <code>true</code>, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  </p>\n<p>Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"<a href=\"https://help.github.com/articles/repository-permission-levels-for-an-organization/\">Repository permission levels for an organization</a>\" and \"<a href=\"https://help.github.com/articles/permission-levels-for-a-user-account-repository/\">Permission levels for a user account repository</a>.\"</p>",
        "name": "read_only",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\"",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"ssh-rsa AAA...\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys/1\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"octocat@octomac\"</span>,\n  <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2014-12-10T15:53:42Z\"</span>,\n  <span class=\"hljs-attr\">\"read_only\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/keys/{key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/keys/{key_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/keys/{key_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a deploy key",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-deploy-key",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deploy-key"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "keys"
    },
    "slug": "get-a-deploy-key",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/keys/{key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/keys/{key_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/keys/{key_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a deploy key",
    "description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-deploy-key",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-deploy-key"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "keys"
    },
    "slug": "delete-a-deploy-key",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List labels for a repository",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-labels-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "list-labels-for-a-repository",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a label",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/create-label",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-a-label"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing <code>:strawberry:</code> will render the emoji <img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png\" alt=\":strawberry:\" title=\":strawberry:\">. For a full list of available emoji and codes, see \"<a href=\"https://github.com/ikatyang/emoji-cheat-sheet\">Emoji cheat sheet</a>.\"</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see \"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\"",
                "childParamsGroups": []
              },
              "color": {
                "type": "string",
                "description": "<p>The <a href=\"http://www.color-hex.com/\">hexadecimal color code</a> for the label, without the leading <code>#</code>.</p>",
                "name": "color",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the label.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the label.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "name": "bug",
            "description": "Something isn't working",
            "color": "f29513"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "create-a-label",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing <code>:strawberry:</code> will render the emoji <img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png\" alt=\":strawberry:\" title=\":strawberry:\">. For a full list of available emoji and codes, see \"<a href=\"https://github.com/ikatyang/emoji-cheat-sheet\">Emoji cheat sheet</a>.\"</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see \"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\"",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The <a href=\"http://www.color-hex.com/\">hexadecimal color code</a> for the label, without the leading <code>#</code>.</p>",
        "name": "color",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the label.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the label.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n  <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n  <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/labels/{name}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "name",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels/NAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels/NAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/labels/{name}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/labels/{name}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a label",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/get-label",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-a-label"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "get-a-label",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/labels/{name}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "name",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels/NAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/labels/NAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/labels/{name}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/labels/{name}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a label",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/delete-label",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-a-label"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "delete-a-label",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/languages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/languages",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/languages</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/languages', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/languages'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository languages",
    "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-languages",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-languages"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repository-languages",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/license",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/license",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/license</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/license', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/license'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the license for a repository",
    "description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.",
    "tags": [
      "licenses"
    ],
    "operationId": "licenses/get-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/licenses/#get-the-license-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "licenses",
      "subcategory": null
    },
    "slug": "get-the-license-for-a-repository",
    "category": "licenses",
    "categoryLabel": "Licenses",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This method returns the contents of the repository's license file, if one is detected.</p>\n<p>Similar to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-content\">Get repository content</a>, this method also supports <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">custom media types</a> for retrieving the raw license content or rendered license HTML.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/merges",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/merges \\\n  -d '{\"base\":\"base\",\"head\":\"head\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/merges \\\n  -d '{\"base\":\"base\",\"head\":\"head\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/merges', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  base: 'base',\n  head: 'head'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/merges'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">'base'</span>,\n  <span class=\"hljs-attr\">head</span>: <span class=\"hljs-string\">'head'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Merge a branch",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/merge",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#merge-a-branch"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the base branch that the head will be merged into.</p>",
                "name": "base",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the base branch that the head will be merged into.",
                "childParamsGroups": []
              },
              "head": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The head to merge. This can be a branch name or a commit SHA1.</p>",
                "name": "head",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The head to merge. This can be a branch name or a commit SHA1.",
                "childParamsGroups": []
              },
              "commit_message": {
                "type": "string",
                "description": "<p>Commit message to use for the merge commit. If omitted, a default message will be used.</p>",
                "name": "commit_message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Commit message to use for the merge commit. If omitted, a default message will be used.",
                "childParamsGroups": []
              }
            },
            "required": [
              "base",
              "head"
            ]
          },
          "example": {
            "base": "master",
            "head": "cool_feature",
            "commit_message": "Shipped cool_feature!"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "merging"
    },
    "slug": "merge-a-branch",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "merging",
    "subcategoryLabel": "Merging",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the base branch that the head will be merged into.</p>",
        "name": "base",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the base branch that the head will be merged into.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The head to merge. This can be a branch name or a commit SHA1.</p>",
        "name": "head",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The head to merge. This can be a branch name or a commit SHA1.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Commit message to use for the merge commit. If omitted, a default message will be used.</p>",
        "name": "commit_message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Commit message to use for the merge commit. If omitted, a default message will be used.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Successful Response (The resulting merge commit)",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\"</span>,\n  <span class=\"hljs-attr\">\"commit\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"author\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"mona@github.com\"</span>,\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>\n    },\n    <span class=\"hljs-attr\">\"committer\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Monalisa Octocat\"</span>,\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"mona@github.com\"</span>,\n      <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>\n    },\n    <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Fix all the bugs\"</span>,\n    <span class=\"hljs-attr\">\"tree\"</span>: {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>\n    },\n    <span class=\"hljs-attr\">\"comment_count\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"verification\"</span>: {\n      <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-string\">\"unsigned\"</span>,\n      <span class=\"hljs-attr\">\"signature\"</span>: <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-attr\">\"payload\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"committer\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"parents\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n      <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"stats\"</span>: {\n    <span class=\"hljs-attr\">\"additions\"</span>: <span class=\"hljs-number\">104</span>,\n    <span class=\"hljs-attr\">\"deletions\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"total\"</span>: <span class=\"hljs-number\">108</span>\n  },\n  <span class=\"hljs-attr\">\"files\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"filename\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n      <span class=\"hljs-attr\">\"additions\"</span>: <span class=\"hljs-number\">10</span>,\n      <span class=\"hljs-attr\">\"deletions\"</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-attr\">\"changes\"</span>: <span class=\"hljs-number\">12</span>,\n      <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"modified\"</span>,\n      <span class=\"hljs-attr\">\"raw_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\"</span>,\n      <span class=\"hljs-attr\">\"blob_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\"</span>,\n      <span class=\"hljs-attr\">\"patch\"</span>: <span class=\"hljs-string\">\"@@ -29,7 +29,7 @@\\n.....\"</span>\n    }\n  ]\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response when already merged"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found when the base or head does not exist"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict when there is a merge conflict"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/milestones",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "state",
        "description": "The state of the milestone. Either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>The state of the milestone. Either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Either `due_on` or `completeness`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "due_on",
            "completeness"
          ],
          "default": "due_on"
        },
        "descriptionHTML": "<p>What to sort results by. Either <code>due_on</code> or <code>completeness</code>.</p>"
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Either `asc` or `desc`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        },
        "descriptionHTML": "<p>The direction of the sort. Either <code>asc</code> or <code>desc</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/milestones', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/milestones'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List milestones",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-milestones",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-milestones"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "milestones"
    },
    "slug": "list-milestones",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "milestones",
    "subcategoryLabel": "Milestones",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/milestones",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/milestones', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  title: 'title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/milestones'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a milestone",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/create-milestone",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-a-milestone"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The title of the milestone.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the milestone.",
                "childParamsGroups": []
              },
              "state": {
                "type": "string",
                "description": "<p>The state of the milestone. Either <code>open</code> or <code>closed</code>.</p>",
                "enum": [
                  "open",
                  "closed"
                ],
                "default": "open",
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of the milestone. Either `open` or `closed`.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A description of the milestone.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A description of the milestone.",
                "childParamsGroups": []
              },
              "due_on": {
                "type": "string",
                "format": "date-time",
                "description": "<p>The milestone due date. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "due_on",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              }
            },
            "required": [
              "title"
            ]
          },
          "example": {
            "title": "v1.0",
            "state": "open",
            "description": "Tracking milestone for version 1.0",
            "due_on": "2012-10-09T23:39:01Z"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "milestones"
    },
    "slug": "create-a-milestone",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "milestones",
    "subcategoryLabel": "Milestones",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The title of the milestone.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The title of the milestone.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The state of the milestone. Either <code>open</code> or <code>closed</code>.</p>",
        "enum": [
          "open",
          "closed"
        ],
        "default": "open",
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of the milestone. Either `open` or `closed`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A description of the milestone.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A description of the milestone.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>The milestone due date. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "due_on",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n  <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>milestone_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/milestones/{milestone_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  milestone_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/milestones/{milestone_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">milestone_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a milestone",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/get-milestone",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-a-milestone"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "milestones"
    },
    "slug": "get-a-milestone",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "milestones",
    "subcategoryLabel": "Milestones",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>milestone_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42 \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42 \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/milestones/{milestone_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  milestone_number: 42,\n  title: 'title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/milestones/{milestone_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">milestone_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a milestone",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/update-milestone",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#update-a-milestone"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p>The title of the milestone.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the milestone.",
                "childParamsGroups": []
              },
              "state": {
                "type": "string",
                "description": "<p>The state of the milestone. Either <code>open</code> or <code>closed</code>.</p>",
                "enum": [
                  "open",
                  "closed"
                ],
                "default": "open",
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of the milestone. Either `open` or `closed`.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A description of the milestone.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A description of the milestone.",
                "childParamsGroups": []
              },
              "due_on": {
                "type": "string",
                "format": "date-time",
                "description": "<p>The milestone due date. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
                "name": "due_on",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "title": "v1.0",
            "state": "open",
            "description": "Tracking milestone for version 1.0",
            "due_on": "2012-10-09T23:39:01Z"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "milestones"
    },
    "slug": "update-a-milestone",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "milestones",
    "subcategoryLabel": "Milestones",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The title of the milestone.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The title of the milestone.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The state of the milestone. Either <code>open</code> or <code>closed</code>.</p>",
        "enum": [
          "open",
          "closed"
        ],
        "default": "open",
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of the milestone. Either `open` or `closed`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A description of the milestone.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A description of the milestone.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>The milestone due date. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>",
        "name": "due_on",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n  <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>milestone_number parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/milestones/{milestone_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  milestone_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/milestones/{milestone_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">milestone_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a milestone",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/delete-milestone",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-a-milestone"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "milestones"
    },
    "slug": "delete-a-milestone",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "milestones",
    "subcategoryLabel": "Milestones",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/milestones/{milestone_number}/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>milestone_number parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/milestones/42/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  milestone_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">milestone_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List labels for issues in a milestone",
    "description": "",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-labels-for-milestone",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-issues-in-a-milestone"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "issues",
      "subcategory": "labels"
    },
    "slug": "list-labels-for-issues-in-a-milestone",
    "category": "issues",
    "categoryLabel": "Issues",
    "subcategory": "labels",
    "subcategoryLabel": "Labels",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/notifications",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "descriptionHTML": "<p>If <code>true</code>, show notifications marked as read.</p>"
      },
      {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "descriptionHTML": "<p>If <code>true</code>, only shows notifications in which the user is directly participating or mentioned.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated before the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/notifications",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/notifications</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/notifications', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/notifications'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository notifications for the authenticated user",
    "description": "List all notifications for the current user.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-repo-notifications-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "list-repository-notifications-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all notifications for the current user.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/notifications",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/notifications \\\n  -d '{\"last_read_at\":\"last_read_at\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/notifications \\\n  -d '{\"last_read_at\":\"last_read_at\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/notifications', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  last_read_at: 'last_read_at'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/notifications'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">last_read_at</span>: <span class=\"hljs-string\">'last_read_at'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Mark repository notifications as read",
    "description": "Marks all notifications in a repository as \"read\" removes them from the [default view on GitHub Enterprise Server](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List repository notifications for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/mark-repo-notifications-as-read",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-repository-notifications-as-read"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "last_read_at": {
                "type": "string",
                "format": "date-time",
                "description": "<p>Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>. Default: The current timestamp.</p>",
                "name": "last_read_at",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "notifications"
    },
    "slug": "mark-repository-notifications-as-read",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "notifications",
    "subcategoryLabel": "Notifications",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      },
      {
        "httpStatusCode": "205",
        "httpStatusMessage": "Reset Content",
        "description": "Reset Content"
      }
    ],
    "descriptionHTML": "<p>Marks all notifications in a repository as \"read\" removes them from the <a href=\"https://github.com/notifications\">default view on GitHub Enterprise Server</a>. If the number of notifications is too large to complete in one request, you will receive a <code>202 Accepted</code> status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-notifications-for-the-authenticated-user\">List repository notifications for the authenticated user</a> endpoint and pass the query parameter <code>all=false</code>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "format": "date-time",
        "description": "<p>Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>. Default: The current timestamp.</p>",
        "name": "last_read_at",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pages', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pages'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a GitHub Enterprise Server Pages site",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-pages",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-github-pages-site"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "get-a-github-enterprise-server-pages-site",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.switcheroo-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages \\\n  -d '{\"source\":{\"branch\":\"branch\",\"path\":\"path\"}}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.switcheroo-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages \\\n  -d '{\"source\":{\"branch\":\"branch\",\"path\":\"path\"}}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pages', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  source: {\n    branch: 'branch',\n    path: 'path'\n  },\n  mediaType: {\n    previews: [\n      'switcheroo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pages'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">source</span>: {\n    <span class=\"hljs-attr\">branch</span>: <span class=\"hljs-string\">'branch'</span>,\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'path'</span>\n  },\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'switcheroo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a GitHub Pages site",
    "description": "Configures a GitHub Enterprise Server Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\"",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-pages-site",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-github-pages-site"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "description": "The source branch and directory used to publish your Pages site.",
            "nullable": true,
            "properties": {
              "source": {
                "type": "object",
                "description": "<p><strong>Required</strong>. The source branch and directory used to publish your Pages site.</p>",
                "properties": {
                  "branch": {
                    "type": "string",
                    "description": "<p><strong>Required</strong>. The repository branch used to publish your site's source files. Can be either <code>master</code> or <code>gh-pages</code>.</p>",
                    "enum": [
                      "master",
                      "gh-pages"
                    ],
                    "name": "branch",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`.",
                    "childParamsGroups": []
                  },
                  "path": {
                    "type": "string",
                    "description": "<p>The repository directory that includes the source files for the Pages site. When <code>branch</code> is <code>master</code>, you can change <code>path</code> to <code>/docs</code>. When <code>branch</code> is <code>gh-pages</code>, you are unable to specify a <code>path</code> other than <code>/</code>.</p>",
                    "enum": [
                      "/",
                      "/docs"
                    ],
                    "default": "/",
                    "name": "path",
                    "in": "body",
                    "rawType": "string",
                    "rawDescription": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "branch"
                ],
                "name": "source",
                "in": "body",
                "rawType": "object",
                "rawDescription": "The source branch and directory used to publish your Pages site.",
                "childParamsGroups": [
                  {
                    "parentName": "source",
                    "parentType": "object",
                    "id": "source-object",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The repository branch used to publish your site's source files. Can be either <code>master</code> or <code>gh-pages</code>.</p>",
                        "enum": [
                          "master",
                          "gh-pages"
                        ],
                        "name": "branch",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p>The repository directory that includes the source files for the Pages site. When <code>branch</code> is <code>master</code>, you can change <code>path</code> to <code>/docs</code>. When <code>branch</code> is <code>gh-pages</code>, you are unable to specify a <code>path</code> other than <code>/</code>.</p>",
                        "enum": [
                          "/",
                          "/docs"
                        ],
                        "default": "/",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "source"
            ]
          },
          "example": {
            "source": {
              "branch": "master",
              "path": "/docs"
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "switcheroo",
          "note": "Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.switcheroo-preview+json\n```",
          "html": "<p>Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/\">blog post</a> preview for more details. To access the new endpoints during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.switcheroo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "mister-fantastic",
          "note": "The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mister-fantastic-preview+json\n```",
          "html": "<p>The GitHub Pages API contains two additional fields in responses, which developers can preview: <code>html_url</code> and <code>source</code>. To see these two new fields, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mister-fantastic-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "create-a-github-pages-site",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Configures a GitHub Enterprise Server Pages site. For more information, see \"<a href=\"/github/working-with-github-pages/about-github-pages\">About GitHub Pages</a>.\"</p>",
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/github/developer.github.com/pages\"</span>,\n  <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"built\"</span>,\n  <span class=\"hljs-attr\">\"cname\"</span>: <span class=\"hljs-string\">\"developer.github.com\"</span>,\n  <span class=\"hljs-attr\">\"custom_404\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://developer.github.com\"</span>,\n  <span class=\"hljs-attr\">\"source\"</span>: {\n    <span class=\"hljs-attr\">\"branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"/\"</span>\n  },\n  <span class=\"hljs-attr\">\"public\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"https_certificate\"</span>: {\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"approved\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Certificate is approved\"</span>,\n    <span class=\"hljs-attr\">\"domains\"</span>: [\n      <span class=\"hljs-string\">\"developer.github.com\"</span>\n    ],\n    <span class=\"hljs-attr\">\"expires_at\"</span>: <span class=\"hljs-string\">\"2021-05-22\"</span>\n  },\n  <span class=\"hljs-attr\">\"https_enforced\"</span>: <span class=\"hljs-literal\">true</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "object",
        "description": "<p><strong>Required</strong>. The source branch and directory used to publish your Pages site.</p>",
        "properties": {
          "branch": {
            "type": "string",
            "description": "<p><strong>Required</strong>. The repository branch used to publish your site's source files. Can be either <code>master</code> or <code>gh-pages</code>.</p>",
            "enum": [
              "master",
              "gh-pages"
            ],
            "name": "branch",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`.",
            "childParamsGroups": []
          },
          "path": {
            "type": "string",
            "description": "<p>The repository directory that includes the source files for the Pages site. When <code>branch</code> is <code>master</code>, you can change <code>path</code> to <code>/docs</code>. When <code>branch</code> is <code>gh-pages</code>, you are unable to specify a <code>path</code> other than <code>/</code>.</p>",
            "enum": [
              "/",
              "/docs"
            ],
            "default": "/",
            "name": "path",
            "in": "body",
            "rawType": "string",
            "rawDescription": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
            "childParamsGroups": []
          }
        },
        "required": [
          "branch"
        ],
        "name": "source",
        "in": "body",
        "rawType": "object",
        "rawDescription": "The source branch and directory used to publish your Pages site.",
        "childParamsGroups": [
          {
            "parentName": "source",
            "parentType": "object",
            "id": "source-object",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The repository branch used to publish your site's source files. Can be either <code>master</code> or <code>gh-pages</code>.</p>",
                "enum": [
                  "master",
                  "gh-pages"
                ],
                "name": "branch",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p>The repository directory that includes the source files for the Pages site. When <code>branch</code> is <code>master</code>, you can change <code>path</code> to <code>/docs</code>. When <code>branch</code> is <code>gh-pages</code>, you are unable to specify a <code>path</code> other than <code>/</code>.</p>",
                "enum": [
                  "/",
                  "/docs"
                ],
                "default": "/",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/pages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages \\\n  -d '{\"https_enforced\":true}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages \\\n  -d '{\"https_enforced\":true}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/pages', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  https_enforced: true\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/pages'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">https_enforced</span>: <span class=\"hljs-literal\">true</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update information about a GitHub Pages site",
    "description": "Updates information for a GitHub Enterprise Server Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-information-about-pages-site",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-information-about-a-github-pages-site"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "https_enforced": {
                "type": "boolean",
                "description": "<p>Specify whether HTTPS should be enforced for the repository.</p>",
                "name": "https_enforced",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Specify whether HTTPS should be enforced for the repository.",
                "childParamsGroups": []
              },
              "public": {
                "type": "boolean",
                "description": "<p>Configures access controls for the GitHub Pages site. If public is set to <code>true</code>, the site is accessible to anyone on the internet. If set to <code>false</code>, the site will only be accessible to users who have at least <code>read</code> access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to <code>internal</code> visibility. This feature is only available to repositories in an organization on an Enterprise plan.</p>",
                "name": "public",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.",
                "childParamsGroups": []
              },
              "source": {
                "anyOf": [
                  {
                    "type": "string",
                    "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
                    "enum": [
                      "gh-pages",
                      "master",
                      "master /docs"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "Update the source for the repository. Must include the branch name and path.",
                    "properties": {
                      "branch": {
                        "type": "string",
                        "description": "The repository branch used to publish your site's source files."
                      },
                      "path": {
                        "type": "string",
                        "description": "The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.",
                        "enum": [
                          "/",
                          "/docs"
                        ]
                      }
                    },
                    "required": [
                      "branch",
                      "path"
                    ]
                  }
                ],
                "type": "string",
                "description": "<p>Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory <code>/docs</code>. Possible values are <code>\"gh-pages\"</code>, <code>\"master\"</code>, and <code>\"master /docs\"</code>.</p>",
                "enum": [
                  "gh-pages",
                  "master",
                  "master /docs"
                ],
                "name": "source",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
                "childParamsGroups": []
              }
            },
            "anyOf": [
              {
                "required": [
                  "source"
                ]
              },
              {
                "required": [
                  "cname"
                ]
              },
              {
                "required": [
                  "public"
                ]
              },
              {
                "required": [
                  "https_enforced"
                ]
              }
            ]
          },
          "example": {
            "source": "master /docs"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "mister-fantastic",
          "note": "The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mister-fantastic-preview+json\n```",
          "html": "<p>The GitHub Pages API contains two additional fields in responses, which developers can preview: <code>html_url</code> and <code>source</code>. To see these two new fields, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mister-fantastic-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "update-information-about-a-github-pages-site",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "400",
        "httpStatusMessage": "Bad Request",
        "description": "Bad Request"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "<p>Updates information for a GitHub Enterprise Server Pages site. For more information, see \"<a href=\"/github/working-with-github-pages/about-github-pages\">About GitHub Pages</a>.</p>",
    "bodyParameters": [
      {
        "type": "boolean",
        "description": "<p>Specify whether HTTPS should be enforced for the repository.</p>",
        "name": "https_enforced",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Specify whether HTTPS should be enforced for the repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Configures access controls for the GitHub Pages site. If public is set to <code>true</code>, the site is accessible to anyone on the internet. If set to <code>false</code>, the site will only be accessible to users who have at least <code>read</code> access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to <code>internal</code> visibility. This feature is only available to repositories in an organization on an Enterprise plan.</p>",
        "name": "public",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.",
        "childParamsGroups": []
      },
      {
        "anyOf": [
          {
            "type": "string",
            "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
            "enum": [
              "gh-pages",
              "master",
              "master /docs"
            ]
          },
          {
            "type": "object",
            "description": "Update the source for the repository. Must include the branch name and path.",
            "properties": {
              "branch": {
                "type": "string",
                "description": "The repository branch used to publish your site's source files."
              },
              "path": {
                "type": "string",
                "description": "The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.",
                "enum": [
                  "/",
                  "/docs"
                ]
              }
            },
            "required": [
              "branch",
              "path"
            ]
          }
        ],
        "type": "string",
        "description": "<p>Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory <code>/docs</code>. Possible values are <code>\"gh-pages\"</code>, <code>\"master\"</code>, and <code>\"master /docs\"</code>.</p>",
        "enum": [
          "gh-pages",
          "master",
          "master /docs"
        ],
        "name": "source",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/pages",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.switcheroo-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.switcheroo-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/pages', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  mediaType: {\n    previews: [\n      'switcheroo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/pages'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'switcheroo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a GitHub Enterprise Server Pages site",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-pages-site",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-github-pages-site"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "switcheroo",
          "note": "Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.switcheroo-preview+json\n```",
          "html": "<p>Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/\">blog post</a> preview for more details. To access the new endpoints during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.switcheroo-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "delete-a-github-enterprise-server-pages-site",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pages/builds",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pages/builds', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pages/builds'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List GitHub Enterprise Server Pages builds",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-pages-builds",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-github-pages-builds"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "list-github-enterprise-server-pages-builds",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pages/builds",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pages/builds', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pages/builds'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Request a GitHub Enterprise Server Pages build",
    "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/request-pages-build",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#request-a-github-pages-build"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "request-a-github-enterprise-server-pages-build",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.</p>\n<p>Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pages/builds/latest",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds/latest",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds/latest</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pages/builds/latest', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pages/builds/latest'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get latest Pages build",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-latest-pages-build",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-latest-pages-build"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "get-latest-pages-build",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pages/builds/{build_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "build_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pages/builds/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pages/builds/{build_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  build_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pages/builds/{build_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">build_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get GitHub Enterprise Server Pages build",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-pages-build",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-github-pages-build"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "pages"
    },
    "slug": "get-github-enterprise-server-pages-build",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "pages",
    "subcategoryLabel": "Pages",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pre-receive-hooks",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "name"
          ],
          "default": "created"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pre-receive-hooks', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pre-receive-hooks'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List pre-receive hooks for a repository",
    "description": "List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.",
    "operationId": "enterprise-admin/list-pre-receive-hooks-for-repo",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "repo-pre-receive-hooks"
    },
    "slug": "list-pre-receive-hooks-for-a-repository",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "repo-pre-receive-hooks",
    "subcategoryLabel": "Repo pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a pre-receive hook for a repository",
    "description": "",
    "operationId": "enterprise-admin/get-pre-receive-hook-for-repo",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "repo-pre-receive-hooks"
    },
    "slug": "get-a-pre-receive-hook-for-a-repository",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "repo-pre-receive-hooks",
    "subcategoryLabel": "Repo pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42 \\\n  -d '{\"enforcement\":\"enforcement\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42 \\\n  -d '{\"enforcement\":\"enforcement\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pre_receive_hook_id: 42,\n  enforcement: 'enforcement',\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">enforcement</span>: <span class=\"hljs-string\">'enforcement'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update pre-receive hook enforcement for a repository",
    "description": "For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`",
    "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-repo",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "enforcement": {
                "description": "<p>The state of enforcement for the hook on this repository.</p>",
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled",
                  "testing"
                ],
                "name": "enforcement",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of enforcement for the hook on this repository.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "enforcement": "enabled"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "repo-pre-receive-hooks"
    },
    "slug": "update-pre-receive-hook-enforcement-for-a-repository",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "repo-pre-receive-hooks",
    "subcategoryLabel": "Repo pre receive hooks",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>For pre-receive hooks which are allowed to be configured at the repo level, you can set <code>enforcement</code></p>",
    "bodyParameters": [
      {
        "description": "<p>The state of enforcement for the hook on this repository.</p>",
        "type": "string",
        "enum": [
          "enabled",
          "disabled",
          "testing"
        ],
        "name": "enforcement",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of enforcement for the hook on this repository.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Check Commits\"</span>,\n  <span class=\"hljs-attr\">\"enforcement\"</span>: <span class=\"hljs-string\">\"enabled\"</span>,\n  <span class=\"hljs-attr\">\"configuration_url\"</span>: <span class=\"hljs-string\">\"https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pre_receive_hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.eye-scream-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pre-receive-hooks/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pre_receive_hook_id: 42,\n  mediaType: {\n    previews: [\n      'eye-scream'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pre_receive_hook_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'eye-scream'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Remove pre-receive hook enforcement for a repository",
    "description": "Deletes any overridden enforcement on this repository for the specified hook.\n\nResponds with effective values inherited from owner and/or global level.",
    "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-repo",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "eye-scream",
          "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
          "html": "<p>APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.</p>\n<p>To access the API you must provide a custom <a href=\"/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.eye-scream-preview</code></pre>"
        }
      ],
      "category": "enterprise-admin",
      "subcategory": "repo-pre-receive-hooks"
    },
    "slug": "remove-pre-receive-hook-enforcement-for-a-repository",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "repo-pre-receive-hooks",
    "subcategoryLabel": "Repo pre receive hooks",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Responds with effective values inherited from owner and/or global level."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deletes any overridden enforcement on this repository for the specified hook.</p>\n<p>Responds with effective values inherited from owner and/or global level.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the projects to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/projects",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/projects</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/projects', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/projects'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List repository projects",
    "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-repository-projects"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "list-repository-projects",
    "category": "projects",
    "categoryLabel": "Projects",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the projects in a repository. Returns a <code>404 Not Found</code> status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/projects \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/projects \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/projects', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/projects'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a repository project",
    "description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "tags": [
      "projects"
    ],
    "operationId": "projects/create-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-repository-project"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the project.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the project.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The description of the project.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The description of the project.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "name": "Projects Documentation",
            "body": "Developer documentation project for the developer site."
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "create-a-repository-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a repository project board. Returns a <code>404 Not Found</code> status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a <code>401 Unauthorized</code> or <code>410 Gone</code> status is returned.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the project.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the project.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The description of the project.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The description of the project.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"owner_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/api-playground/projects-test\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002604\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/api-playground/projects-test/projects/1\"</span>,\n  <span class=\"hljs-attr\">\"columns_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002604/columns\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UHJvamVjdDEwMDI2MDQ=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Projects Documentation\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Developer documentation project for the developer site.\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "410",
        "httpStatusMessage": "Gone",
        "description": "Gone"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "state",
        "description": "Either `open`, `closed`, or `all` to filter by state.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Either <code>open</code>, <code>closed</code>, or <code>all</code> to filter by state.</p>"
      },
      {
        "name": "head",
        "description": "Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Filter pulls by head user or head organization and branch name in the format of <code>user:ref-name</code> or <code>organization:ref-name</code>. For example: <code>github:new-script-format</code> or <code>octocat:test-branch</code>.</p>"
      },
      {
        "name": "base",
        "description": "Filter pulls by base branch name. Example: `gh-pages`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Filter pulls by base branch name. Example: <code>gh-pages</code>.</p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>What to sort results by. Can be either <code>created</code>, <code>updated</code>, <code>popularity</code> (comment count) or <code>long-running</code> (age, filtering by pulls updated in the last month).</p>"
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Can be either `asc` or `desc`. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>The direction of the sort. Can be either <code>asc</code> or <code>desc</code>. Default: <code>desc</code> when sort is <code>created</code> or sort is not specified, otherwise <code>asc</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List pull requests",
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "shadow-cat",
          "note": "The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](https://developer.github.com/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.shadow-cat-preview+json\n```",
          "html": "<p>The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the <a href=\"https://developer.github.com/changes/2019-02-14-draft-pull-requests\">blog post</a> preview for more details. To access the new <code>draft</code> parameter during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.shadow-cat-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "pulls"
    },
    "slug": "list-pull-requests",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls \\\n  -d '{\"head\":\"head\",\"base\":\"base\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls \\\n  -d '{\"head\":\"head\",\"base\":\"base\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  head: 'head',\n  base: 'base'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">head</span>: <span class=\"hljs-string\">'head'</span>,\n  <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">'base'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a pull request",
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud. You can create a new pull request. This endpoint triggers [notifications](https://docs.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" for details.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/create",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p>The title of the new pull request.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the new pull request.",
                "childParamsGroups": []
              },
              "head": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace <code>head</code> with a user like this: <code>username:branch</code>.</p>",
                "name": "head",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
                "childParamsGroups": []
              },
              "base": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.</p>",
                "name": "base",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The contents of the pull request.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the pull request.",
                "childParamsGroups": []
              },
              "maintainer_can_modify": {
                "type": "boolean",
                "description": "<p>Indicates whether <a href=\"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/\">maintainers can modify</a> the pull request.</p>",
                "name": "maintainer_can_modify",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
                "childParamsGroups": []
              },
              "draft": {
                "type": "boolean",
                "description": "<p>Indicates whether the pull request is a draft. See \"<a href=\"https://help.github.com/en/articles/about-pull-requests#draft-pull-requests\">Draft Pull Requests</a>\" in the GitHub Help documentation to learn more.</p>",
                "name": "draft",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.",
                "childParamsGroups": []
              },
              "issue": {
                "type": "integer",
                "example": 1,
                "name": "issue",
                "in": "body",
                "rawType": "integer",
                "description": "",
                "childParamsGroups": []
              }
            },
            "required": [
              "head",
              "base"
            ]
          },
          "example": {
            "title": "Amazing new feature",
            "body": "Please pull these awesome changes in!",
            "head": "octocat:new-feature",
            "base": "master"
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "shadow-cat",
          "note": "The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](https://developer.github.com/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.shadow-cat-preview+json\n```",
          "html": "<p>The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the <a href=\"https://developer.github.com/changes/2019-02-14-draft-pull-requests\">blog post</a> preview for more details. To access the new <code>draft</code> parameter during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.shadow-cat-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "pulls"
    },
    "slug": "create-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud. You can create a new pull request. This endpoint triggers <a href=\"https://docs.github.com/articles/about-notifications/\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The title of the new pull request.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The title of the new pull request.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace <code>head</code> with a user like this: <code>username:branch</code>.</p>",
        "name": "head",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.</p>",
        "name": "base",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The contents of the pull request.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the pull request.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Indicates whether <a href=\"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/\">maintainers can modify</a> the pull request.</p>",
        "name": "maintainer_can_modify",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Indicates whether the pull request is a draft. See \"<a href=\"https://help.github.com/en/articles/about-pull-requests#draft-pull-requests\">Draft Pull Requests</a>\" in the GitHub Help documentation to learn more.</p>",
        "name": "draft",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "example": 1,
        "name": "issue",
        "in": "body",
        "rawType": "integer",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOlB1bGxSZXF1ZXN0MQ==\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n  <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n  <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>,\n  <span class=\"hljs-attr\">\"issue_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>,\n  <span class=\"hljs-attr\">\"review_comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"review_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Amazing new feature\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Please pull these awesome changes in!\"</span>,\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merged_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merge_commit_sha\"</span>: <span class=\"hljs-string\">\"e5bd3914e2e596debea16f433f57875b5b90bcd6\"</span>,\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_reviewers\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"other_user\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/other_user_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/other_user\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_teams\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n      <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n      <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n      <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n      <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n      <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"head\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:new-topic\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"new-topic\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>\n      },\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"base\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:master\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>\n      },\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"issue\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comment\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>\n    },\n    <span class=\"hljs-attr\">\"commits\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>\n    },\n    <span class=\"hljs-attr\">\"statuses\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"OWNER\"</span>,\n  <span class=\"hljs-attr\">\"draft\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"merged\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"mergeable\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"rebaseable\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"mergeable_state\"</span>: <span class=\"hljs-string\">\"clean\"</span>,\n  <span class=\"hljs-attr\">\"merged_by\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"review_comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"maintainer_can_modify\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"commits\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"additions\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"deletions\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"changed_files\"</span>: <span class=\"hljs-number\">5</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "created_at"
          ]
        },
        "descriptionHTML": ""
      },
      {
        "name": "direction",
        "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Can be either <code>asc</code> or <code>desc</code>. Ignored without <code>sort</code> parameter.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/comments', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List review comments in a repository",
    "description": "Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-review-comments-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-review-comments-in-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "comfort-fade",
          "note": "Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for more information.\n\nTo create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.comfort-fade-preview+json\n```\n\nTo show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.",
          "html": "<p>Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the <a href=\"https://developer.github.com/changes/2019-10-03-multi-line-comments\">blog post</a> for more information.</p>\n<p>To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.comfort-fade-preview+json</code></pre>\n<p>To show multi-line comment-supported fields in the response, use the <code>comfort-fade</code> preview header and the <code>line</code> parameter.</p>\n<p>If you use the <code>comfort-fade</code> preview header, your response will show:</p>\n<ul>\n<li>For multi-line comments, values for <code>start_line</code>, <code>original_start_line</code>, <code>start_side</code>, <code>line</code>, <code>original_line</code>, and <code>side</code>.</li>\n<li>For single-line comments, values for <code>line</code>, <code>original_line</code>, and <code>side</code> and a <code>null</code> value for <code>start_line</code>, <code>original_start_line</code>, and <code>start_side</code>.</li>\n</ul>\n<p>If you don't use the <code>comfort-fade</code> preview header, multi-line and single-line comments will appear the same way in the response with a single <code>position</code> attribute. Your response will show:</p>\n<ul>\n<li>For multi-line comments, the last line of the comment range for the <code>position</code> attribute.</li>\n<li>For single-line comments, the diff-positioned way of referencing comments for the <code>position</code> attribute.</li>\n</ul>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "list-review-comments-in-a-repository",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a review comment for a pull request",
    "description": "Provides details for a review comment.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/get-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-review-comment-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "comfort-fade",
          "note": "Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for more information.\n\nTo create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.comfort-fade-preview+json\n```\n\nTo show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.",
          "html": "<p>Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the <a href=\"https://developer.github.com/changes/2019-10-03-multi-line-comments\">blog post</a> for more information.</p>\n<p>To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.comfort-fade-preview+json</code></pre>\n<p>To show multi-line comment-supported fields in the response, use the <code>comfort-fade</code> preview header and the <code>line</code> parameter.</p>\n<p>If you use the <code>comfort-fade</code> preview header, your response will show:</p>\n<ul>\n<li>For multi-line comments, values for <code>start_line</code>, <code>original_start_line</code>, <code>start_side</code>, <code>line</code>, <code>original_line</code>, and <code>side</code>.</li>\n<li>For single-line comments, values for <code>line</code>, <code>original_line</code>, and <code>side</code> and a <code>null</code> value for <code>start_line</code>, <code>original_start_line</code>, and <code>start_side</code>.</li>\n</ul>\n<p>If you don't use the <code>comfort-fade</code> preview header, multi-line and single-line comments will appear the same way in the response with a single <code>position</code> attribute. Your response will show:</p>\n<ul>\n<li>For multi-line comments, the last line of the comment range for the <code>position</code> attribute.</li>\n<li>For single-line comments, the diff-positioned way of referencing comments for the <code>position</code> attribute.</li>\n</ul>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "get-a-review-comment-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Provides details for a review comment.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a review comment for a pull request",
    "description": "Enables you to edit a review comment.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/update-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-review-comment-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The text of the reply to the review comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The text of the reply to the review comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "I like this too!"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "comfort-fade",
          "note": "Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for more information.\n\nTo create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.comfort-fade-preview+json\n```\n\nTo show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.",
          "html": "<p>Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the <a href=\"https://developer.github.com/changes/2019-10-03-multi-line-comments\">blog post</a> for more information.</p>\n<p>To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.comfort-fade-preview+json</code></pre>\n<p>To show multi-line comment-supported fields in the response, use the <code>comfort-fade</code> preview header and the <code>line</code> parameter.</p>\n<p>If you use the <code>comfort-fade</code> preview header, your response will show:</p>\n<ul>\n<li>For multi-line comments, values for <code>start_line</code>, <code>original_start_line</code>, <code>start_side</code>, <code>line</code>, <code>original_line</code>, and <code>side</code>.</li>\n<li>For single-line comments, values for <code>line</code>, <code>original_line</code>, and <code>side</code> and a <code>null</code> value for <code>start_line</code>, <code>original_start_line</code>, and <code>start_side</code>.</li>\n</ul>\n<p>If you don't use the <code>comfort-fade</code> preview header, multi-line and single-line comments will appear the same way in the response with a single <code>position</code> attribute. Your response will show:</p>\n<ul>\n<li>For multi-line comments, the last line of the comment range for the <code>position</code> attribute.</li>\n<li>For single-line comments, the diff-positioned way of referencing comments for the <code>position</code> attribute.</li>\n</ul>"
        }
      ],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "update-a-review-comment-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Enables you to edit a review comment.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The text of the reply to the review comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The text of the reply to the review comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_review_id\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\"</span>,\n  <span class=\"hljs-attr\">\"diff_hunk\"</span>: <span class=\"hljs-string\">\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\"</span>,\n  <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n  <span class=\"hljs-attr\">\"position\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"original_position\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"original_commit_id\"</span>: <span class=\"hljs-string\">\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\"</span>,\n  <span class=\"hljs-attr\">\"in_reply_to_id\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Great stuff!\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"NONE\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>\n    }\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a review comment for a pull request",
    "description": "Deletes a review comment.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/delete-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#delete-a-review-comment-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "delete-a-review-comment-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deletes a review comment.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a pull request review comment.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to a pull request review comment.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for a pull request review comment",
    "description": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#review-comments).",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/list-for-pull-request-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-a-pull-request-review-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-a-pull-request-review-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#review-comments\">pull request review comment</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.squirrel-girl-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  comment_id: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for a pull request review comment",
    "description": "Create a reaction to a [pull request review comment](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#comments). A response with an HTTP `200` status means that you already added the reaction type to this pull request review comment.",
    "tags": [
      "reactions"
    ],
    "operationId": "reactions/create-for-pull-request-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-a-pull-request-review-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the pull request review comment.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the pull request review comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-a-pull-request-review-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#comments\">pull request review comment</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this pull request review comment.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the pull request review comment.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the pull request review comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Reaction exists",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Reaction created",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a pull request",
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/get",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "get-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "500",
        "httpStatusMessage": "Internal Server Error",
        "description": "Internal Error"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>Lists details of a pull request by providing its number.</p>\n<p>When you get, <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls/#create-a-pull-request\">create</a>, or <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-pull-request\">edit</a> a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the <code>mergeable</code> key. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests\">Checking mergeability of pull requests</a>\".</p>\n<p>The value of the <code>mergeable</code> attribute can be <code>true</code>, <code>false</code>, or <code>null</code>. If the value is <code>null</code>, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-<code>null</code> value for the <code>mergeable</code> attribute in the response. If <code>mergeable</code> is <code>true</code>, then <code>merge_commit_sha</code> will be the SHA of the <em>test</em> merge commit.</p>\n<p>The value of the <code>merge_commit_sha</code> attribute changes depending on the state of the pull request. Before merging a pull request, the <code>merge_commit_sha</code> attribute holds the SHA of the <em>test</em> merge commit. After merging a pull request, the <code>merge_commit_sha</code> attribute changes depending on how you merged the pull request:</p>\n<ul>\n<li>If merged as a <a href=\"https://help.github.com/articles/about-merge-methods-on-github/\">merge commit</a>, <code>merge_commit_sha</code> represents the SHA of the merge commit.</li>\n<li>If merged via a <a href=\"https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits\">squash</a>, <code>merge_commit_sha</code> represents the SHA of the squashed commit on the base branch.</li>\n<li>If <a href=\"https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits\">rebased</a>, <code>merge_commit_sha</code> represents the commit that the base branch was updated to.</li>\n</ul>\n<p>Pass the appropriate <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests\">media type</a> to fetch diff and patch formats.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42 \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42 \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/pulls/{pull_number}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  title: 'title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/pulls/{pull_number}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a pull request",
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/update",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls/#update-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p>The title of the pull request.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The title of the pull request.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The contents of the pull request.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The contents of the pull request.",
                "childParamsGroups": []
              },
              "state": {
                "type": "string",
                "description": "<p>State of this Pull Request. Either <code>open</code> or <code>closed</code>.</p>",
                "enum": [
                  "open",
                  "closed"
                ],
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "State of this Pull Request. Either `open` or `closed`.",
                "childParamsGroups": []
              },
              "base": {
                "type": "string",
                "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.</p>",
                "name": "base",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.",
                "childParamsGroups": []
              },
              "maintainer_can_modify": {
                "type": "boolean",
                "description": "<p>Indicates whether <a href=\"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/\">maintainers can modify</a> the pull request.</p>",
                "name": "maintainer_can_modify",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "title": "new title",
            "body": "updated body",
            "state": "open",
            "base": "master"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "shadow-cat",
          "note": "The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](https://developer.github.com/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.shadow-cat-preview+json\n```",
          "html": "<p>The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the <a href=\"https://developer.github.com/changes/2019-02-14-draft-pull-requests\">blog post</a> preview for more details. To access the new <code>draft</code> parameter during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.shadow-cat-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "sailor-v",
          "note": "You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.sailor-v-preview+json\n```",
          "html": "<p>You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in <code>locked</code> events. This feature is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-01-10-lock-reason-api-preview\">blog post</a> for full details. To access this feature, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.sailor-v-preview+json</code></pre>"
        }
      ],
      "category": "pulls"
    },
    "slug": "update-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The title of the pull request.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The title of the pull request.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The contents of the pull request.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The contents of the pull request.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>State of this Pull Request. Either <code>open</code> or <code>closed</code>.</p>",
        "enum": [
          "open",
          "closed"
        ],
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "State of this Pull Request. Either `open` or `closed`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.</p>",
        "name": "base",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Indicates whether <a href=\"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/\">maintainers can modify</a> the pull request.</p>",
        "name": "maintainer_can_modify",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOlB1bGxSZXF1ZXN0MQ==\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n  <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n  <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>,\n  <span class=\"hljs-attr\">\"issue_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>,\n  <span class=\"hljs-attr\">\"review_comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"review_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Amazing new feature\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Please pull these awesome changes in!\"</span>,\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merged_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merge_commit_sha\"</span>: <span class=\"hljs-string\">\"e5bd3914e2e596debea16f433f57875b5b90bcd6\"</span>,\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_reviewers\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"other_user\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/other_user_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/other_user\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_teams\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n      <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n      <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n      <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n      <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n      <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"head\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:new-topic\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"new-topic\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>\n      },\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"base\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:master\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>\n      },\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">123</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"issue\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comment\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>\n    },\n    <span class=\"hljs-attr\">\"commits\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>\n    },\n    <span class=\"hljs-attr\">\"statuses\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"OWNER\"</span>,\n  <span class=\"hljs-attr\">\"draft\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"merged\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"mergeable\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"rebaseable\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"mergeable_state\"</span>: <span class=\"hljs-string\">\"clean\"</span>,\n  <span class=\"hljs-attr\">\"merged_by\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"comments\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"review_comments\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"maintainer_can_modify\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"commits\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"additions\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"deletions\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"changed_files\"</span>: <span class=\"hljs-number\">5</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>One of <code>created</code> (when the repository was starred) or <code>updated</code> (when it was last pushed to).</p>"
      },
      {
        "name": "direction",
        "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Can be either <code>asc</code> or <code>desc</code>. Ignored without <code>sort</code> parameter.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List review comments on a pull request",
    "description": "Lists all review comments for a pull request. By default, review comments are in ascending order by ID.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-review-comments",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-review-comments-on-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "comfort-fade",
          "note": "Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for more information.\n\nTo create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.comfort-fade-preview+json\n```\n\nTo show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.",
          "html": "<p>Multi-line comments in a pull request diff is currently available for developers to preview. During the preview period, these response fields may change without advance notice. See the <a href=\"https://developer.github.com/changes/2019-10-03-multi-line-comments\">blog post</a> for more information.</p>\n<p>To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.comfort-fade-preview+json</code></pre>\n<p>To show multi-line comment-supported fields in the response, use the <code>comfort-fade</code> preview header and the <code>line</code> parameter.</p>\n<p>If you use the <code>comfort-fade</code> preview header, your response will show:</p>\n<ul>\n<li>For multi-line comments, values for <code>start_line</code>, <code>original_start_line</code>, <code>start_side</code>, <code>line</code>, <code>original_line</code>, and <code>side</code>.</li>\n<li>For single-line comments, values for <code>line</code>, <code>original_line</code>, and <code>side</code> and a <code>null</code> value for <code>start_line</code>, <code>original_start_line</code>, and <code>start_side</code>.</li>\n</ul>\n<p>If you don't use the <code>comfort-fade</code> preview header, multi-line and single-line comments will appear the same way in the response with a single <code>position</code> attribute. Your response will show:</p>\n<ul>\n<li>For multi-line comments, the last line of the comment range for the <code>position</code> attribute.</li>\n<li>For single-line comments, the diff-positioned way of referencing comments for the <code>position</code> attribute.</li>\n</ul>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "list-review-comments-on-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all review comments for a pull request. By default, review comments are in ascending order by ID.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/{pull_number}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a review comment for a pull request (alternative)",
    "description": "Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue-comment).\"\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" for details.",
    "operationId": "pulls/create-review-comment-alternative",
    "tags": [
      "pulls"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-review-comment-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The text of the comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The text of the comment.",
                "childParamsGroups": []
              },
              "in_reply_to": {
                "type": "integer",
                "description": "<p>The comment ID to reply to. <strong>Note</strong>: This must be the ID of a <em>top-level comment</em>, not a reply to that comment. Replies to replies are not supported.</p>",
                "name": "in_reply_to",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The comment ID to reply to. **Note**: This must be the ID of a _top-level comment_, not a reply to that comment. Replies to replies are not supported.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Nice change"
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "create-a-review-comment-for-a-pull-request-alternative",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue-comment\">Create an issue comment</a>.\"</p>\n<p><strong>Note:</strong> The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The text of the comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The text of the comment.",
        "childParamsGroups": []
      },
      {
        "type": "integer",
        "description": "<p>The comment ID to reply to. <strong>Note</strong>: This must be the ID of a <em>top-level comment</em>, not a reply to that comment. Replies to replies are not supported.</p>",
        "name": "in_reply_to",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The comment ID to reply to. **Note**: This must be the ID of a _top-level comment_, not a reply to that comment. Replies to replies are not supported.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_review_id\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\"</span>,\n  <span class=\"hljs-attr\">\"diff_hunk\"</span>: <span class=\"hljs-string\">\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\"</span>,\n  <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n  <span class=\"hljs-attr\">\"position\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"original_position\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"original_commit_id\"</span>: <span class=\"hljs-string\">\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\"</span>,\n  <span class=\"hljs-attr\">\"in_reply_to_id\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Great stuff!\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"NONE\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>\n    }\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>comment_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments/42/replies \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/comments/42/replies \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  comment_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a reply for a review comment",
    "description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/create-reply-for-review-comment",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-reply-for-a-review-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The text of the review comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The text of the review comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Great stuff!"
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "pulls",
      "subcategory": "comments"
    },
    "slug": "create-a-reply-for-a-review-comment",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "comments",
    "subcategoryLabel": "Comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a reply to a review comment for a pull request. For the <code>comment_id</code>, provide the ID of the review comment you are replying to. This must be the ID of a <em>top-level review comment</em>, not a reply to that comment. Replies to replies are not supported.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The text of the review comment.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The text of the review comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_review_id\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\"</span>,\n  <span class=\"hljs-attr\">\"diff_hunk\"</span>: <span class=\"hljs-string\">\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\"</span>,\n  <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"file1.txt\"</span>,\n  <span class=\"hljs-attr\">\"position\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"original_position\"</span>: <span class=\"hljs-number\">4</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"original_commit_id\"</span>: <span class=\"hljs-string\">\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\"</span>,\n  <span class=\"hljs-attr\">\"in_reply_to_id\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Great stuff!\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-04-14T16:00:49Z\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"NONE\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"</span>\n    }\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/commits",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/commits",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/commits</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/commits', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/commits'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List commits on a pull request",
    "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits) endpoint.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-commits",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-commits-on-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "list-commits-on-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits\">List commits</a> endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/files",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/files",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/files</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/files', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/files'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List pull requests files",
    "description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-files",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests-files"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "list-pull-requests-files",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "500",
        "httpStatusMessage": "Internal Server Error",
        "description": "Internal Error"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/merge",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/merge</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/merge', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/merge'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a pull request has been merged",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/check-if-merged",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#check-if-a-pull-request-has-been-merged"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "check-if-a-pull-request-has-been-merged",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if pull request has been merged"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if pull request has not been merged"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/merge \\\n  -d '{\"commit_title\":\"commit_title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/merge \\\n  -d '{\"commit_title\":\"commit_title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  commit_title: 'commit_title'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">commit_title</span>: <span class=\"hljs-string\">'commit_title'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Merge a pull request",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/merge",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#merge-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "commit_title": {
                "type": "string",
                "description": "<p>Title for the automatic commit message.</p>",
                "name": "commit_title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Title for the automatic commit message.",
                "childParamsGroups": []
              },
              "commit_message": {
                "type": "string",
                "description": "<p>Extra detail to append to automatic commit message.</p>",
                "name": "commit_message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Extra detail to append to automatic commit message.",
                "childParamsGroups": []
              },
              "sha": {
                "type": "string",
                "description": "<p>SHA that pull request head must match to allow merge.</p>",
                "name": "sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "SHA that pull request head must match to allow merge.",
                "childParamsGroups": []
              },
              "merge_method": {
                "type": "string",
                "description": "<p>Merge method to use. Possible values are <code>merge</code>, <code>squash</code> or <code>rebase</code>. Default is <code>merge</code>.</p>",
                "enum": [
                  "merge",
                  "squash",
                  "rebase"
                ],
                "name": "merge_method",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "merge-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>Title for the automatic commit message.</p>",
        "name": "commit_title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Title for the automatic commit message.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Extra detail to append to automatic commit message.</p>",
        "name": "commit_message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Extra detail to append to automatic commit message.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>SHA that pull request head must match to allow merge.</p>",
        "name": "sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "SHA that pull request head must match to allow merge.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Merge method to use. Possible values are <code>merge</code>, <code>squash</code> or <code>rebase</code>. Default is <code>merge</code>.</p>",
        "enum": [
          "merge",
          "squash",
          "rebase"
        ],
        "name": "merge_method",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if merge was successful",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"merged\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Pull Request successfully merged\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "405",
        "httpStatusMessage": "Method Not Allowed",
        "description": "Method Not Allowed if merge cannot be performed",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Pull Request is not mergeable\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict if sha was provided and pull request head did not match",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Head branch was modified. Review and try the merge again.\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List requested reviewers for a pull request",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-requested-reviewers",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-requested-reviewers-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "review-requests"
    },
    "slug": "list-requested-reviewers-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "review-requests",
    "subcategoryLabel": "Review requests",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers \\\n  -d '{\"reviewers\":[\"reviewers\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers \\\n  -d '{\"reviewers\":[\"reviewers\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  reviewers: [\n    'reviewers'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">reviewers</span>: [\n    <span class=\"hljs-string\">'reviewers'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Request reviewers for a pull request",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/request-reviewers",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#request-reviewers-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "reviewers": {
                "type": "array of strings",
                "description": "<p>An array of user <code>login</code>s that will be requested.</p>",
                "items": {
                  "type": "string"
                },
                "name": "reviewers",
                "in": "body",
                "rawType": "array",
                "rawDescription": "An array of user `login`s that will be requested.",
                "childParamsGroups": []
              },
              "team_reviewers": {
                "type": "array of strings",
                "description": "<p>An array of team <code>slug</code>s that will be requested.</p>",
                "items": {
                  "type": "string"
                },
                "name": "team_reviewers",
                "in": "body",
                "rawType": "array",
                "rawDescription": "An array of team `slug`s that will be requested.",
                "childParamsGroups": []
              }
            },
            "anyOf": [
              {
                "required": [
                  "reviewers"
                ]
              },
              {
                "required": [
                  "team_reviewers"
                ]
              }
            ]
          },
          "example": {
            "reviewers": [
              "octocat",
              "hubot",
              "other_user"
            ],
            "team_reviewers": [
              "justice-league"
            ]
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "review-requests"
    },
    "slug": "request-reviewers-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "review-requests",
    "subcategoryLabel": "Review requests",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p>An array of user <code>login</code>s that will be requested.</p>",
        "items": {
          "type": "string"
        },
        "name": "reviewers",
        "in": "body",
        "rawType": "array",
        "rawDescription": "An array of user `login`s that will be requested.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>An array of team <code>slug</code>s that will be requested.</p>",
        "items": {
          "type": "string"
        },
        "name": "team_reviewers",
        "in": "body",
        "rawType": "array",
        "rawDescription": "An array of team `slug`s that will be requested.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDExOlB1bGxSZXF1ZXN0MQ==\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>,\n  <span class=\"hljs-attr\">\"diff_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.diff\"</span>,\n  <span class=\"hljs-attr\">\"patch_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347.patch\"</span>,\n  <span class=\"hljs-attr\">\"issue_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>,\n  <span class=\"hljs-attr\">\"review_comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"review_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1347</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"locked\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Amazing new feature\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Please pull these awesome changes in!\"</span>,\n  <span class=\"hljs-attr\">\"labels\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">208045946</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDU6TGFiZWwyMDgwNDU5NDY=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels/bug\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bug\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Something isn't working\"</span>,\n      <span class=\"hljs-attr\">\"color\"</span>: <span class=\"hljs-string\">\"f29513\"</span>,\n      <span class=\"hljs-attr\">\"default\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"milestone\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/milestones/v1.0\"</span>,\n    <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002604</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDk6TWlsZXN0b25lMTAwMjYwNA==\"</span>,\n    <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"v1.0\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Tracking milestone for version 1.0\"</span>,\n    <span class=\"hljs-attr\">\"creator\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">4</span>,\n    <span class=\"hljs-attr\">\"closed_issues\"</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>,\n    <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2013-02-12T13:22:01Z\"</span>,\n    <span class=\"hljs-attr\">\"due_on\"</span>: <span class=\"hljs-string\">\"2012-10-09T23:39:01Z\"</span>\n  },\n  <span class=\"hljs-attr\">\"active_lock_reason\"</span>: <span class=\"hljs-string\">\"too heated\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"closed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merged_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"merge_commit_sha\"</span>: <span class=\"hljs-string\">\"e5bd3914e2e596debea16f433f57875b5b90bcd6\"</span>,\n  <span class=\"hljs-attr\">\"assignee\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assignees\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_reviewers\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"hubot\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/hubot\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/hubot/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">true</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"other_user\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/other_user_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/other_user\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/other_user/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"requested_teams\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n      <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n      <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n      <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n      <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n      <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n      <span class=\"hljs-attr\">\"parent\"</span>: <span class=\"hljs-literal\">null</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"head\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:new-topic\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"new-topic\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/licenses/mit\"</span>\n      },\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"base\"</span>: {\n    <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"octocat:master\"</span>,\n    <span class=\"hljs-attr\">\"ref\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n    <span class=\"hljs-attr\">\"sha\"</span>: <span class=\"hljs-string\">\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n    <span class=\"hljs-attr\">\"user\"</span>: {\n      <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n      <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n      <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n      <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n      <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n      <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n      <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n      <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n      <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n      <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n      <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n      <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n      <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">\"repo\"</span>: {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"owner\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      },\n      <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n      <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n      <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n      <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n      <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n      <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n      <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n      <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n      <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n      <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n      <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n      <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n      <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n      <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n      <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n      <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n      <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n      <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n      <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n      <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n      <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n      <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n      <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n      <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n      <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n      <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n      <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n      <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n      <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n      <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n      <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n      <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n      <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n      <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n      <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n      <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n      <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"topics\"</span>: [\n        <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-string\">\"atom\"</span>,\n        <span class=\"hljs-string\">\"electron\"</span>,\n        <span class=\"hljs-string\">\"api\"</span>\n      ],\n      <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n      <span class=\"hljs-attr\">\"permissions\"</span>: {\n        <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"license\"</span>: {\n        <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n        <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n      },\n      <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"self\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"issue\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"</span>\n    },\n    <span class=\"hljs-attr\">\"comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comments\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"</span>\n    },\n    <span class=\"hljs-attr\">\"review_comment\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"</span>\n    },\n    <span class=\"hljs-attr\">\"commits\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"</span>\n    },\n    <span class=\"hljs-attr\">\"statuses\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"OWNER\"</span>,\n  <span class=\"hljs-attr\">\"draft\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Unprocessable Entity if user is not a collaborator"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers \\\n  -d '{\"reviewers\":[\"reviewers\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/requested_reviewers \\\n  -d '{\"reviewers\":[\"reviewers\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  reviewers: [\n    'reviewers'\n  ]\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">reviewers</span>: [\n    <span class=\"hljs-string\">'reviewers'</span>\n  ]\n})\n</code></pre>"
      }
    ],
    "summary": "Remove requested reviewers from a pull request",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/remove-requested-reviewers",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "reviewers": {
                "type": "array of strings",
                "description": "<p><strong>Required</strong>. An array of user <code>login</code>s that will be removed.</p>",
                "items": {
                  "type": "string"
                },
                "name": "reviewers",
                "in": "body",
                "rawType": "array",
                "rawDescription": "An array of user `login`s that will be removed.",
                "childParamsGroups": []
              },
              "team_reviewers": {
                "type": "array of strings",
                "description": "<p>An array of team <code>slug</code>s that will be removed.</p>",
                "items": {
                  "type": "string"
                },
                "name": "team_reviewers",
                "in": "body",
                "rawType": "array",
                "rawDescription": "An array of team `slug`s that will be removed.",
                "childParamsGroups": []
              }
            },
            "required": [
              "reviewers"
            ]
          },
          "example": {
            "reviewers": [
              "octocat",
              "hubot",
              "other_user"
            ],
            "team_reviewers": [
              "justice-league"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "review-requests"
    },
    "slug": "remove-requested-reviewers-from-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "review-requests",
    "subcategoryLabel": "Review requests",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. An array of user <code>login</code>s that will be removed.</p>",
        "items": {
          "type": "string"
        },
        "name": "reviewers",
        "in": "body",
        "rawType": "array",
        "rawDescription": "An array of user `login`s that will be removed.",
        "childParamsGroups": []
      },
      {
        "type": "array of strings",
        "description": "<p>An array of team <code>slug</code>s that will be removed.</p>",
        "items": {
          "type": "string"
        },
        "name": "team_reviewers",
        "in": "body",
        "rawType": "array",
        "rawDescription": "An array of team `slug`s that will be removed.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List reviews for a pull request",
    "description": "The list of reviews returns in chronological order.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-reviews",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-reviews-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "list-reviews-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "The list of reviews returns in chronological order."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The list of reviews returns in chronological order.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews \\\n  -d '{\"commit_id\":\"commit_id\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews \\\n  -d '{\"commit_id\":\"commit_id\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  commit_id: 'commit_id'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">commit_id</span>: <span class=\"hljs-string\">'commit_id'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a review for a pull request",
    "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nPull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/create-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-review-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "commit_id": {
                "type": "string",
                "description": "<p>The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the <code>position</code>. Defaults to the most recent commit in the pull request when you do not specify a value.</p>",
                "name": "commit_id",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong> when using <code>REQUEST_CHANGES</code> or <code>COMMENT</code> for the <code>event</code> parameter. The body text of the pull request review.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.",
                "childParamsGroups": []
              },
              "event": {
                "type": "string",
                "description": "<p>The review action you want to perform. The review actions include: <code>APPROVE</code>, <code>REQUEST_CHANGES</code>, or <code>COMMENT</code>. By leaving this blank, you set the review action state to <code>PENDING</code>, which means you will need to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request\">submit the pull request review</a> when you are ready.</p>",
                "enum": [
                  "APPROVE",
                  "REQUEST_CHANGES",
                  "COMMENT"
                ],
                "name": "event",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request) when you are ready.",
                "childParamsGroups": []
              },
              "comments": {
                "type": "array of objects",
                "description": "<p>Use the following table to specify the location, destination, and contents of the draft review comment.</p>",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. The relative path to the file that necessitates a review comment.</p>",
                      "name": "path",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "The relative path to the file that necessitates a review comment.",
                      "childParamsGroups": []
                    },
                    "position": {
                      "type": "integer",
                      "description": "<p>The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.</p>",
                      "name": "position",
                      "in": "body",
                      "rawType": "integer",
                      "rawDescription": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
                      "childParamsGroups": []
                    },
                    "body": {
                      "type": "string",
                      "description": "<p><strong>Required</strong>. Text of the review comment.</p>",
                      "name": "body",
                      "in": "body",
                      "rawType": "string",
                      "rawDescription": "Text of the review comment.",
                      "childParamsGroups": []
                    },
                    "line": {
                      "type": "integer",
                      "example": 28,
                      "name": "line",
                      "in": "body",
                      "rawType": "integer",
                      "description": "",
                      "childParamsGroups": []
                    },
                    "side": {
                      "type": "string",
                      "example": "RIGHT",
                      "name": "side",
                      "in": "body",
                      "rawType": "string",
                      "description": "",
                      "childParamsGroups": []
                    },
                    "start_line": {
                      "type": "integer",
                      "example": 26,
                      "name": "start_line",
                      "in": "body",
                      "rawType": "integer",
                      "description": "",
                      "childParamsGroups": []
                    },
                    "start_side": {
                      "type": "string",
                      "example": "LEFT",
                      "name": "start_side",
                      "in": "body",
                      "rawType": "string",
                      "description": "",
                      "childParamsGroups": []
                    }
                  },
                  "required": [
                    "path",
                    "body"
                  ]
                },
                "name": "comments",
                "in": "body",
                "rawType": "array",
                "rawDescription": "Use the following table to specify the location, destination, and contents of the draft review comment.",
                "childParamsGroups": [
                  {
                    "parentName": "comments",
                    "parentType": "items",
                    "id": "comments-items",
                    "params": [
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. The relative path to the file that necessitates a review comment.</p>",
                        "name": "path",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "The relative path to the file that necessitates a review comment.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "description": "<p>The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.</p>",
                        "name": "position",
                        "in": "body",
                        "rawType": "integer",
                        "rawDescription": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "description": "<p><strong>Required</strong>. Text of the review comment.</p>",
                        "name": "body",
                        "in": "body",
                        "rawType": "string",
                        "rawDescription": "Text of the review comment.",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "example": 28,
                        "name": "line",
                        "in": "body",
                        "rawType": "integer",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "RIGHT",
                        "name": "side",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "integer",
                        "example": 26,
                        "name": "start_line",
                        "in": "body",
                        "rawType": "integer",
                        "description": "",
                        "childParamsGroups": []
                      },
                      {
                        "type": "string",
                        "example": "LEFT",
                        "name": "start_side",
                        "in": "body",
                        "rawType": "string",
                        "description": "",
                        "childParamsGroups": []
                      }
                    ]
                  }
                ]
              }
            }
          },
          "example": {
            "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
            "body": "This is close to perfect! Please address the suggested inline change.",
            "event": "REQUEST_CHANGES",
            "comments": [
              {
                "path": "file.md",
                "position": 6,
                "body": "Please add more information here, and fix this typo."
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "create-a-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>\n<p>Pull request reviews created in the <code>PENDING</code> state do not include the <code>submitted_at</code> property in the response.</p>\n<p><strong>Note:</strong> To comment on a specific line in a file, you need to first determine the <em>position</em> of that line in the diff. The GitHub REST API v3 offers the <code>application/vnd.github.v3.diff</code> <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types#commits-commit-comparison-and-pull-requests\">media type</a>. To see a pull request diff, add this media type to the <code>Accept</code> header of a call to the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-pull-request\">single pull request</a> endpoint.</p>\n<p>The <code>position</code> value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.</p>",
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"This is close to perfect! Please address the suggested inline change.\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"CHANGES_REQUESTED\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"submitted_at\"</span>: <span class=\"hljs-string\">\"2019-11-17T17:43:43Z\"</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the <code>position</code>. Defaults to the most recent commit in the pull request when you do not specify a value.</p>",
        "name": "commit_id",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong> when using <code>REQUEST_CHANGES</code> or <code>COMMENT</code> for the <code>event</code> parameter. The body text of the pull request review.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The review action you want to perform. The review actions include: <code>APPROVE</code>, <code>REQUEST_CHANGES</code>, or <code>COMMENT</code>. By leaving this blank, you set the review action state to <code>PENDING</code>, which means you will need to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request\">submit the pull request review</a> when you are ready.</p>",
        "enum": [
          "APPROVE",
          "REQUEST_CHANGES",
          "COMMENT"
        ],
        "name": "event",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request) when you are ready.",
        "childParamsGroups": []
      },
      {
        "type": "array of objects",
        "description": "<p>Use the following table to specify the location, destination, and contents of the draft review comment.</p>",
        "items": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "description": "<p><strong>Required</strong>. The relative path to the file that necessitates a review comment.</p>",
              "name": "path",
              "in": "body",
              "rawType": "string",
              "rawDescription": "The relative path to the file that necessitates a review comment.",
              "childParamsGroups": []
            },
            "position": {
              "type": "integer",
              "description": "<p>The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.</p>",
              "name": "position",
              "in": "body",
              "rawType": "integer",
              "rawDescription": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
              "childParamsGroups": []
            },
            "body": {
              "type": "string",
              "description": "<p><strong>Required</strong>. Text of the review comment.</p>",
              "name": "body",
              "in": "body",
              "rawType": "string",
              "rawDescription": "Text of the review comment.",
              "childParamsGroups": []
            },
            "line": {
              "type": "integer",
              "example": 28,
              "name": "line",
              "in": "body",
              "rawType": "integer",
              "description": "",
              "childParamsGroups": []
            },
            "side": {
              "type": "string",
              "example": "RIGHT",
              "name": "side",
              "in": "body",
              "rawType": "string",
              "description": "",
              "childParamsGroups": []
            },
            "start_line": {
              "type": "integer",
              "example": 26,
              "name": "start_line",
              "in": "body",
              "rawType": "integer",
              "description": "",
              "childParamsGroups": []
            },
            "start_side": {
              "type": "string",
              "example": "LEFT",
              "name": "start_side",
              "in": "body",
              "rawType": "string",
              "description": "",
              "childParamsGroups": []
            }
          },
          "required": [
            "path",
            "body"
          ]
        },
        "name": "comments",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Use the following table to specify the location, destination, and contents of the draft review comment.",
        "childParamsGroups": [
          {
            "parentName": "comments",
            "parentType": "items",
            "id": "comments-items",
            "params": [
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. The relative path to the file that necessitates a review comment.</p>",
                "name": "path",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The relative path to the file that necessitates a review comment.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "description": "<p>The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.</p>",
                "name": "position",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "description": "<p><strong>Required</strong>. Text of the review comment.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Text of the review comment.",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "example": 28,
                "name": "line",
                "in": "body",
                "rawType": "integer",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "RIGHT",
                "name": "side",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "integer",
                "example": 26,
                "name": "start_line",
                "in": "body",
                "rawType": "integer",
                "description": "",
                "childParamsGroups": []
              },
              {
                "type": "string",
                "example": "LEFT",
                "name": "start_side",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a review for a pull request",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/get-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-review-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "get-a-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42,\n  body: 'body'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a review for a pull request",
    "description": "Update the review summary comment with new text.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/update-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-review-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The body text of the pull request review.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The body text of the pull request review.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "This is close to perfect! Please address the suggested inline change. And add more about this."
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "update-a-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Update the review summary comment with new text.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The body text of the pull request review.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The body text of the pull request review.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"This is close to perfect! Please address the suggested inline change. And add more about this.\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"CHANGES_REQUESTED\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"submitted_at\"</span>: <span class=\"hljs-string\">\"2019-11-17T17:43:43Z\"</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a pending review for a pull request",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/delete-pending-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#delete-a-pending-review-for-a-pull-request"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "delete-a-pending-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List comments for a pull request review",
    "description": "List comments for a specific pull request review.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/list-comments-for-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-comments-for-a-pull-request-review"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "list-comments-for-a-pull-request-review",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List comments for a specific pull request review.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/dismissals \\\n  -d '{\"message\":\"message\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/dismissals \\\n  -d '{\"message\":\"message\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42,\n  message: 'message'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'message'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Dismiss a review for a pull request",
    "description": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#branches), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/dismiss-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#dismiss-a-review-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The message for the pull request review dismissal</p>",
                "name": "message",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The message for the pull request review dismissal",
                "childParamsGroups": []
              },
              "event": {
                "type": "string",
                "example": "\"APPROVE\"",
                "name": "event",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            },
            "required": [
              "message"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "dismiss-a-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note:</strong> To dismiss a pull request review on a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#branches\">protected branch</a>, you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The message for the pull request review dismissal</p>",
        "name": "message",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The message for the pull request review dismissal",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"APPROVE\"",
        "name": "event",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Here is the body for the review.\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"DISMISSED\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"submitted_at\"</span>: <span class=\"hljs-string\">\"2019-11-17T17:43:43Z\"</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>review_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/events \\\n  -d '{\"event\":\"event\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/reviews/42/events \\\n  -d '{\"event\":\"event\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  review_id: 42,\n  event: 'event'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">review_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">event</span>: <span class=\"hljs-string\">'event'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Submit a review for a pull request",
    "description": "",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/submit-review",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p>The body text of the pull request review</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The body text of the pull request review",
                "childParamsGroups": []
              },
              "event": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The review action you want to perform. The review actions include: <code>APPROVE</code>, <code>REQUEST_CHANGES</code>, or <code>COMMENT</code>. When you leave this blank, the API returns <em>HTTP 422 (Unrecognizable entity)</em> and sets the review action state to <code>PENDING</code>, which means you will need to re-submit the pull request review using a review action.</p>",
                "enum": [
                  "APPROVE",
                  "REQUEST_CHANGES",
                  "COMMENT"
                ],
                "name": "event",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.",
                "childParamsGroups": []
              }
            },
            "required": [
              "event"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "pulls",
      "subcategory": "reviews"
    },
    "slug": "submit-a-review-for-a-pull-request",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "subcategory": "reviews",
    "subcategoryLabel": "Reviews",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The body text of the pull request review</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The body text of the pull request review",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The review action you want to perform. The review actions include: <code>APPROVE</code>, <code>REQUEST_CHANGES</code>, or <code>COMMENT</code>. When you leave this blank, the API returns <em>HTTP 422 (Unrecognizable entity)</em> and sets the review action state to <code>PENDING</code>, which means you will need to re-submit the pull request review using a review action.</p>",
        "enum": [
          "APPROVE",
          "REQUEST_CHANGES",
          "COMMENT"
        ],
        "name": "event",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Here is the body for the review.\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"APPROVED\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>,\n  <span class=\"hljs-attr\">\"pull_request_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>,\n  <span class=\"hljs-attr\">\"_links\"</span>: {\n    <span class=\"hljs-attr\">\"html\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"</span>\n    },\n    <span class=\"hljs-attr\">\"pull_request\"</span>: {\n      <span class=\"hljs-attr\">\"href\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"</span>\n    }\n  },\n  <span class=\"hljs-attr\">\"submitted_at\"</span>: <span class=\"hljs-string\">\"2019-11-17T17:43:43Z\"</span>,\n  <span class=\"hljs-attr\">\"commit_id\"</span>: <span class=\"hljs-string\">\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\"</span>,\n  <span class=\"hljs-attr\">\"author_association\"</span>: <span class=\"hljs-string\">\"COLLABORATOR\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.lydian-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/update-branch \\\n  -d '{\"expected_head_sha\":\"expected_head_sha\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.lydian-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/pulls/42/update-branch \\\n  -d '{\"expected_head_sha\":\"expected_head_sha\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  pull_number: 42,\n  expected_head_sha: 'expected_head_sha',\n  mediaType: {\n    previews: [\n      'lydian'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">pull_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">expected_head_sha</span>: <span class=\"hljs-string\">'expected_head_sha'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'lydian'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a pull request branch",
    "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.",
    "tags": [
      "pulls"
    ],
    "operationId": "pulls/update-branch",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-pull-request-branch"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "expected_head_sha": {
                "type": "string",
                "description": "<p>The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a <code>422 Unprocessable Entity</code> status. You can use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits\">List commits</a>\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.</p>",
                "name": "expected_head_sha",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the \"[List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits)\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "expected_head_sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "lydian",
          "note": "Updating the pull request branch with latest upstream changes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.lydian-preview+json\n```",
          "html": "<p>Updating the pull request branch with latest upstream changes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.lydian-preview+json</code></pre>"
        }
      ],
      "category": "pulls",
      "subcategory": null
    },
    "slug": "update-a-pull-request-branch",
    "category": "pulls",
    "categoryLabel": "Pulls",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a <code>422 Unprocessable Entity</code> status. You can use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits\">List commits</a>\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.</p>",
        "name": "expected_head_sha",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the \"[List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits)\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Updating pull request branch.\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.com/repos/octocat/Hello-World/pulls/53\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/readme",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The name of the commit/branch/tag. Default: the repository’s default branch (usually <code>master</code>)</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/readme",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/readme</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/readme', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/readme'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository README",
    "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-readme",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-readme"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "get-a-repository-readme",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets the preferred README for a repository.</p>\n<p>READMEs support <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types\">custom media types</a> for retrieving the raw content or rendered HTML.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/readme/{dir}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "dir",
        "description": "The alternate path to look for a README file",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>The alternate path to look for a README file</p>"
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The name of the commit/branch/tag. Default: the repository’s default branch (usually <code>master</code>)</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/readme/DIR",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/readme/DIR</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/readme/{dir}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  dir: 'dir'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/readme/{dir}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">dir</span>: <span class=\"hljs-string\">'dir'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository README for a directory",
    "description": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-readme-in-directory",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-directory-readme"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "get-a-repository-readme-for-a-directory",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets the README from a repository directory.</p>\n<p>READMEs support <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types\">custom media types</a> for retrieving the raw content or rendered HTML.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List releases",
    "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-releases",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-releases"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "list-releases",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-tags\">Repository Tags API</a>.</p>\n<p>Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/releases",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases \\\n  -d '{\"tag_name\":\"tag_name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases \\\n  -d '{\"tag_name\":\"tag_name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/releases', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tag_name: 'tag_name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/releases'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tag_name</span>: <span class=\"hljs-string\">'tag_name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a release",
    "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-release",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-release"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "tag_name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the tag.</p>",
                "name": "tag_name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the tag.",
                "childParamsGroups": []
              },
              "target_commitish": {
                "type": "string",
                "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually <code>master</code>).</p>",
                "name": "target_commitish",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
                "childParamsGroups": []
              },
              "name": {
                "type": "string",
                "description": "<p>The name of the release.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the release.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>Text describing the contents of the tag.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Text describing the contents of the tag.",
                "childParamsGroups": []
              },
              "draft": {
                "type": "boolean",
                "description": "<p><code>true</code> to create a draft (unpublished) release, <code>false</code> to create a published one.</p>",
                "default": false,
                "name": "draft",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "`true` to create a draft (unpublished) release, `false` to create a published one.",
                "childParamsGroups": []
              },
              "prerelease": {
                "type": "boolean",
                "description": "<p><code>true</code> to identify the release as a prerelease. <code>false</code> to identify the release as a full release.</p>",
                "default": false,
                "name": "prerelease",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "`true` to identify the release as a prerelease. `false` to identify the release as a full release.",
                "childParamsGroups": []
              }
            },
            "required": [
              "tag_name"
            ]
          },
          "example": {
            "tag_name": "v1.0.0",
            "target_commitish": "master",
            "name": "v1.0.0",
            "body": "Description of the release",
            "draft": false,
            "prerelease": false
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "create-a-release",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Users with push access to the repository can create a release.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" and \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-rate-limits\">Dealing with abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the tag.</p>",
        "name": "tag_name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the tag.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually <code>master</code>).</p>",
        "name": "target_commitish",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The name of the release.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the release.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Text describing the contents of the tag.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Text describing the contents of the tag.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p><code>true</code> to create a draft (unpublished) release, <code>false</code> to create a published one.</p>",
        "default": false,
        "name": "draft",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "`true` to create a draft (unpublished) release, `false` to create a published one.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p><code>true</code> to identify the release as a prerelease. <code>false</code> to identify the release as a full release.</p>",
        "default": false,
        "name": "prerelease",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "`true` to identify the release as a prerelease. `false` to identify the release as a full release.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/releases/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"assets_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\"</span>,\n  <span class=\"hljs-attr\">\"upload_url\"</span>: <span class=\"hljs-string\">\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\"</span>,\n  <span class=\"hljs-attr\">\"tarball_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"zipball_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"discussion_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/discussions/90\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UmVsZWFzZTE=\"</span>,\n  <span class=\"hljs-attr\">\"tag_name\"</span>: <span class=\"hljs-string\">\"v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"target_commitish\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Description of the release\"</span>,\n  <span class=\"hljs-attr\">\"draft\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"prerelease\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"published_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assets\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\"</span>,\n      <span class=\"hljs-attr\">\"browser_download_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOlJlbGVhc2VBc3NldDE=\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"example.zip\"</span>,\n      <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"short description\"</span>,\n      <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"uploaded\"</span>,\n      <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"application/zip\"</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">1024</span>,\n      <span class=\"hljs-attr\">\"download_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n      <span class=\"hljs-attr\">\"uploader\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      }\n    }\n  ]\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>asset_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases/assets/{asset_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  asset_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases/assets/{asset_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">asset_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a release asset",
    "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-release-asset",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release-asset"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "get-a-release-asset",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
      },
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Found"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>To download the asset's binary content, set the <code>Accept</code> header of the request to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\"><code>application/octet-stream</code></a>. The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a <code>200</code> or <code>302</code> response.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>asset_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  asset_id: 42,\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">asset_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a release asset",
    "description": "Users with push access to the repository can edit a release asset.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-release-asset",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-release-asset"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>The file name of the asset.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The file name of the asset.",
                "childParamsGroups": []
              },
              "label": {
                "type": "string",
                "description": "<p>An alternate short description of the asset. Used in place of the filename.</p>",
                "name": "label",
                "in": "body",
                "rawType": "string",
                "rawDescription": "An alternate short description of the asset. Used in place of the filename.",
                "childParamsGroups": []
              },
              "state": {
                "type": "string",
                "example": "\"uploaded\"",
                "name": "state",
                "in": "body",
                "rawType": "string",
                "description": "",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "name": "foo-1.0.0-osx.zip",
            "label": "Mac binary"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "update-a-release-asset",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Users with push access to the repository can edit a release asset.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The file name of the asset.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The file name of the asset.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>An alternate short description of the asset. Used in place of the filename.</p>",
        "name": "label",
        "in": "body",
        "rawType": "string",
        "rawDescription": "An alternate short description of the asset. Used in place of the filename.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "example": "\"uploaded\"",
        "name": "state",
        "in": "body",
        "rawType": "string",
        "description": "",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\"</span>,\n  <span class=\"hljs-attr\">\"browser_download_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOlJlbGVhc2VBc3NldDE=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"example.zip\"</span>,\n  <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"short description\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"uploaded\"</span>,\n  <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"application/zip\"</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">1024</span>,\n  <span class=\"hljs-attr\">\"download_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"uploader\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>asset_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/assets/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  asset_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">asset_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a release asset",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-release-asset",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-release-asset"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "delete-a-release-asset",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases/latest",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/latest",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/latest</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases/latest', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases/latest'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the latest release",
    "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-latest-release",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-latest-release"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "get-the-latest-release",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>View the latest published full release for the repository.</p>\n<p>The latest release is the most recent non-prerelease, non-draft release, sorted by the <code>created_at</code> attribute. The <code>created_at</code> attribute is the date of the commit used for the release, and not the date when the release was drafted or published.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases/tags/{tag}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "tag",
        "description": "tag parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": "<p>tag parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/tags/TAG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/tags/TAG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases/tags/{tag}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  tag: 'tag'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases/tags/{tag}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">tag</span>: <span class=\"hljs-string\">'tag'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a release by tag name",
    "description": "Get a published release with the specified tag.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-release-by-tag",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release-by-tag-name"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "get-a-release-by-tag-name",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get a published release with the specified tag.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases/{release_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>release_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases/{release_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  release_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases/{release_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">release_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a release",
    "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia).",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-release",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "get-a-release",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia)."
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note:</strong> This returns an <code>upload_url</code> key corresponding to the endpoint for uploading release assets. This key is a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia\">hypermedia resource</a>.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/repos/{owner}/{repo}/releases/{release_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>release_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42 \\\n  -d '{\"tag_name\":\"tag_name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42 \\\n  -d '{\"tag_name\":\"tag_name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /repos/{owner}/{repo}/releases/{release_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  release_id: 42,\n  tag_name: 'tag_name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /repos/{owner}/{repo}/releases/{release_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">release_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">tag_name</span>: <span class=\"hljs-string\">'tag_name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a release",
    "description": "Users with push access to the repository can edit a release.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/update-release",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-release"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "tag_name": {
                "type": "string",
                "description": "<p>The name of the tag.</p>",
                "name": "tag_name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the tag.",
                "childParamsGroups": []
              },
              "target_commitish": {
                "type": "string",
                "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually <code>master</code>).</p>",
                "name": "target_commitish",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
                "childParamsGroups": []
              },
              "name": {
                "type": "string",
                "description": "<p>The name of the release.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the release.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>Text describing the contents of the tag.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Text describing the contents of the tag.",
                "childParamsGroups": []
              },
              "draft": {
                "type": "boolean",
                "description": "<p><code>true</code> makes the release a draft, and <code>false</code> publishes the release.</p>",
                "name": "draft",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "`true` makes the release a draft, and `false` publishes the release.",
                "childParamsGroups": []
              },
              "prerelease": {
                "type": "boolean",
                "description": "<p><code>true</code> to identify the release as a prerelease, <code>false</code> to identify the release as a full release.</p>",
                "name": "prerelease",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "tag_name": "v1.0.0",
            "target_commitish": "master",
            "name": "v1.0.0",
            "body": "Description of the release",
            "draft": false,
            "prerelease": false
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "update-a-release",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Users with push access to the repository can edit a release.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The name of the tag.</p>",
        "name": "tag_name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the tag.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually <code>master</code>).</p>",
        "name": "target_commitish",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The name of the release.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the release.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>Text describing the contents of the tag.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Text describing the contents of the tag.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p><code>true</code> makes the release a draft, and <code>false</code> publishes the release.</p>",
        "name": "draft",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "`true` makes the release a draft, and `false` publishes the release.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p><code>true</code> to identify the release as a prerelease, <code>false</code> to identify the release as a full release.</p>",
        "name": "prerelease",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/releases/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"assets_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\"</span>,\n  <span class=\"hljs-attr\">\"upload_url\"</span>: <span class=\"hljs-string\">\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\"</span>,\n  <span class=\"hljs-attr\">\"tarball_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"zipball_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"discussion_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/discussions/90\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UmVsZWFzZTE=\"</span>,\n  <span class=\"hljs-attr\">\"tag_name\"</span>: <span class=\"hljs-string\">\"v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"target_commitish\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"v1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Description of the release\"</span>,\n  <span class=\"hljs-attr\">\"draft\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"prerelease\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"published_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"assets\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\"</span>,\n      <span class=\"hljs-attr\">\"browser_download_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\"</span>,\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOlJlbGVhc2VBc3NldDE=\"</span>,\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"example.zip\"</span>,\n      <span class=\"hljs-attr\">\"label\"</span>: <span class=\"hljs-string\">\"short description\"</span>,\n      <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"uploaded\"</span>,\n      <span class=\"hljs-attr\">\"content_type\"</span>: <span class=\"hljs-string\">\"application/zip\"</span>,\n      <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">1024</span>,\n      <span class=\"hljs-attr\">\"download_count\"</span>: <span class=\"hljs-number\">42</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n      <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2013-02-27T19:35:32Z\"</span>,\n      <span class=\"hljs-attr\">\"uploader\"</span>: {\n        <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n        <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n        <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n        <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n        <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n        <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n        <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n        <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n        <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n        <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n        <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n        <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n        <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n        <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n      }\n    }\n  ]\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/releases/{release_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>release_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/releases/{release_id}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  release_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/releases/{release_id}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">release_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a release",
    "description": "Users with push access to the repository can delete a release.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/delete-release",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-release"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "delete-a-release",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Users with push access to the repository can delete a release.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/releases/{release_id}/assets",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>release_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42/assets",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42/assets</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/releases/{release_id}/assets', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  release_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/releases/{release_id}/assets'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">release_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List release assets",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-release-assets",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-release-assets"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "list-release-assets",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/releases/{release_id}/assets",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>release_id parameter</p>"
      },
      {
        "name": "name",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "label",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42/assets",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/releases/42/assets</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/releases/{release_id}/assets', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  release_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/releases/{release_id}/assets'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">release_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Upload a release asset",
    "description": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub Enterprise Server expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub Enterprise Server renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-assets-for-a-release)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Enterprise Server Support](https://support.github.com/contact).\n*   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/upload-release-asset",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#upload-a-release-asset"
    },
    "servers": [
      {
        "url": "{origin}",
        "variables": {
          "origin": {
            "default": "https://uploads.github.com",
            "description": "The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the \"Create a release\" endpoint"
          }
        }
      }
    ],
    "requestBody": {
      "content": {
        "*/*": {
          "schema": {
            "type": "string",
            "description": "The raw file data"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "releases"
    },
    "slug": "upload-a-release-asset",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "releases",
    "subcategoryLabel": "Releases",
    "contentType": "*/*",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response for successful upload"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This endpoint makes use of <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia\">a Hypermedia relation</a> to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the <code>upload_url</code> returned in\nthe response of the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-release\">Create a release endpoint</a> to upload a release asset.</p>\n<p>You need to use an HTTP client which supports <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">SNI</a> to make calls to this endpoint.</p>\n<p>Most libraries will set the required <code>Content-Length</code> header automatically. Use the required <code>Content-Type</code> header to provide the media type of the asset. For a list of media types, see <a href=\"https://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. For example: </p>\n<p><code>application/zip</code></p>\n<p>GitHub Enterprise Server expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.</p>\n<p>When an upstream failure occurs, you will receive a <code>502 Bad Gateway</code> status. This may leave an empty asset with a state of <code>starter</code>. It can be safely deleted.</p>\n<p><strong>Notes:</strong></p>\n<ul>\n<li>GitHub Enterprise Server renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-assets-for-a-release\">List assets for a release</a>\"\nendpoint lists the renamed filenames. For more information and help, contact <a href=\"https://support.github.com/contact\">GitHub Enterprise Server Support</a>.</li>\n<li>If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.</li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stargazers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stargazers",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stargazers</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stargazers', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stargazers'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List stargazers",
    "description": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-stargazers-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-stargazers"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "list-stargazers",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people that have starred the repository.</p>\n<p>You can also find out <em>when</em> stars were created by passing the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">media type</a> via the <code>Accept</code> header:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stats/code_frequency",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/code_frequency",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/code_frequency</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stats/code_frequency', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stats/code_frequency'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the weekly commit activity",
    "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-code-frequency-stats",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-weekly-commit-activity"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statistics"
    },
    "slug": "get-the-weekly-commit-activity",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statistics",
    "subcategoryLabel": "Statistics",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository."
      },
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Accepted"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "A header with no content is returned."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns a weekly aggregate of the number of additions and deletions pushed to a repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stats/commit_activity",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/commit_activity",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/commit_activity</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stats/commit_activity', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stats/commit_activity'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the last year of commit activity",
    "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-commit-activity-stats",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-last-year-of-commit-activity"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statistics"
    },
    "slug": "get-the-last-year-of-commit-activity",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statistics",
    "subcategoryLabel": "Statistics",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Accepted"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "A header with no content is returned."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the last year of commit activity grouped by week. The <code>days</code> array is a group of commits per day, starting on <code>Sunday</code>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stats/contributors",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/contributors",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/contributors</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stats/contributors', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stats/contributors'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get all contributor commit activity",
    "description": "\nReturns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-contributors-stats",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-contributor-commit-activity"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statistics"
    },
    "slug": "get-all-contributor-commit-activity",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statistics",
    "subcategoryLabel": "Statistics",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits"
      },
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Accepted"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "A header with no content is returned."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the <code>total</code> number of commits authored by the contributor. In addition, the response includes a Weekly Hash (<code>weeks</code> array) with the following information:</p>\n<ul>\n<li><code>w</code> - Start of the week, given as a <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix timestamp</a>.</li>\n<li><code>a</code> - Number of additions</li>\n<li><code>d</code> - Number of deletions</li>\n<li><code>c</code> - Number of commits</li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stats/participation",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/participation",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/participation</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stats/participation', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stats/participation'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the weekly commit count",
    "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-participation-stats",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-weekly-commit-count"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statistics"
    },
    "slug": "get-the-weekly-commit-count",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statistics",
    "subcategoryLabel": "Statistics",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "The array order is oldest week (index 0) to most recent week."
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Returns the total commit counts for the <code>owner</code> and total commit counts in <code>all</code>. <code>all</code> is everyone combined, including the <code>owner</code> in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract <code>owner</code> from <code>all</code>.</p>\n<p>The array order is oldest week (index 0) to most recent week.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/stats/punch_card",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/punch_card",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/stats/punch_card</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/stats/punch_card', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/stats/punch_card'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get the hourly commit count for each day",
    "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-punch-card-stats",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-hourly-commit-count-for-each-day"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statistics"
    },
    "slug": "get-the-hourly-commit-count-for-each-day",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statistics",
    "subcategoryLabel": "Statistics",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "A header with no content is returned."
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Each array contains the day number, hour number, and number of commits:</p>\n<ul>\n<li><code>0-6</code>: Sunday - Saturday</li>\n<li><code>0-23</code>: Hour of day</li>\n<li>Number of commits</li>\n</ul>\n<p>For example, <code>[2, 14, 25]</code> indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/statuses/{sha}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sha",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true,
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/statuses/SHA \\\n  -d '{\"state\":\"state\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/statuses/SHA \\\n  -d '{\"state\":\"state\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/statuses/{sha}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  sha: 'sha',\n  state: 'state'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/statuses/{sha}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">sha</span>: <span class=\"hljs-string\">'sha'</span>,\n  <span class=\"hljs-attr\">state</span>: <span class=\"hljs-string\">'state'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a commit status",
    "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-commit-status",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-commit-status"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The state of the status. Can be one of <code>error</code>, <code>failure</code>, <code>pending</code>, or <code>success</code>.</p>",
                "enum": [
                  "error",
                  "failure",
                  "pending",
                  "success"
                ],
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
                "childParamsGroups": []
              },
              "target_url": {
                "type": "string",
                "description": "<p>The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.<br>\nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:<br>\n<code>http://ci.example.com/user/repo/build/sha</code></p>",
                "name": "target_url",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the status.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the status.",
                "childParamsGroups": []
              },
              "context": {
                "type": "string",
                "description": "<p>A string label to differentiate this status from the status of other systems. This field is case-insensitive.</p>",
                "default": "default",
                "name": "context",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A string label to differentiate this status from the status of other systems. This field is case-insensitive.",
                "childParamsGroups": []
              }
            },
            "required": [
              "state"
            ]
          },
          "example": {
            "state": "success",
            "target_url": "https://example.com/build/status",
            "description": "The build succeeded!",
            "context": "continuous-integration/jenkins"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "statuses"
    },
    "slug": "create-a-commit-status",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "statuses",
    "subcategoryLabel": "Statuses",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Users with push access in a repository can create commit statuses for a given SHA.</p>\n<p>Note: there is a limit of 1000 statuses per <code>sha</code> and <code>context</code> within a repository. Attempts to create more than 1000 statuses will result in a validation error.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The state of the status. Can be one of <code>error</code>, <code>failure</code>, <code>pending</code>, or <code>success</code>.</p>",
        "enum": [
          "error",
          "failure",
          "pending",
          "success"
        ],
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.<br>\nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:<br>\n<code>http://ci.example.com/user/repo/build/sha</code></p>",
        "name": "target_url",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the status.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the status.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A string label to differentiate this status from the status of other systems. This field is case-insensitive.</p>",
        "default": "default",
        "name": "context",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A string label to differentiate this status from the status of other systems. This field is case-insensitive.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/hubot_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDY6U3RhdHVzMQ==\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Build has completed successfully\"</span>,\n  <span class=\"hljs-attr\">\"target_url\"</span>: <span class=\"hljs-string\">\"https://ci.example.com/1000/output\"</span>,\n  <span class=\"hljs-attr\">\"context\"</span>: <span class=\"hljs-string\">\"continuous-integration/jenkins\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2012-07-20T01:19:13Z\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/subscribers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscribers",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscribers</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/subscribers', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/subscribers'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List watchers",
    "description": "Lists the people watching the specified repository.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-watchers-for-repo",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-watchers"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "list-watchers",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people watching the specified repository.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/subscription', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/subscription'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a repository subscription",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/get-repo-subscription",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-repository-subscription"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "get-a-repository-subscription",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if you subscribe to the repository"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if you don't subscribe to the repository"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription \\\n  -d '{\"subscribed\":true}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription \\\n  -d '{\"subscribed\":true}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/subscription', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  subscribed: true\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/subscription'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">subscribed</span>: <span class=\"hljs-literal\">true</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set a repository subscription",
    "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-repository-subscription) completely.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/set-repo-subscription",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-repository-subscription"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "subscribed": {
                "type": "boolean",
                "description": "<p>Determines if notifications should be received from this repository.</p>",
                "name": "subscribed",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if notifications should be received from this repository.",
                "childParamsGroups": []
              },
              "ignored": {
                "type": "boolean",
                "description": "<p>Determines if all notifications should be blocked from this repository.</p>",
                "name": "ignored",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Determines if all notifications should be blocked from this repository.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "set-a-repository-subscription",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>If you would like to watch a repository, set <code>subscribed</code> to <code>true</code>. If you would like to ignore notifications made within a repository, set <code>ignored</code> to <code>true</code>. If you would like to stop watching a repository, <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-repository-subscription\">delete the repository's subscription</a> completely.</p>",
    "bodyParameters": [
      {
        "type": "boolean",
        "description": "<p>Determines if notifications should be received from this repository.</p>",
        "name": "subscribed",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if notifications should be received from this repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Determines if all notifications should be blocked from this repository.</p>",
        "name": "ignored",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Determines if all notifications should be blocked from this repository.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"subscribed\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"ignored\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"reason\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2012-10-06T21:34:12Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example/subscription\"</span>,\n  <span class=\"hljs-attr\">\"repository_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/example\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/repos/{owner}/{repo}/subscription",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/subscription</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /repos/{owner}/{repo}/subscription', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /repos/{owner}/{repo}/subscription'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a repository subscription",
    "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-repository-subscription).",
    "tags": [
      "activity"
    ],
    "operationId": "activity/delete-repo-subscription",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-repository-subscription"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "delete-a-repository-subscription",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-repository-subscription\">set the repository's subscription manually</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/tags",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/tags",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/tags</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/tags', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/tags'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository tags",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-tags",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-tags"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repository-tags",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/tarball/{ref}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/tarball/REF",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/tarball/REF</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/tarball/{ref}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/tarball/{ref}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Download a repository archive (tar)",
    "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "tags": [
      "repos"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#download-a-repository-archive"
    },
    "operationId": "repos/download-tarball-archive",
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "download-a-repository-archive-tar",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets a redirect URL to download a tar archive for a repository. If you omit <code>:ref</code>, the repository’s default branch (usually\n<code>master</code>) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe <code>Location</code> header to make a second <code>GET</code> request.\n<strong>Note</strong>: For private repositories, these links are temporary and expire after five minutes.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/teams', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/teams'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repository teams",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-teams",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-teams"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repository-teams",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/topics",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/topics",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/topics</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/topics', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  mediaType: {\n    previews: [\n      'mercy'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/topics'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'mercy'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get all repository topics",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/get-all-topics",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-repository-topics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "get-all-repository-topics",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/repos/{owner}/{repo}/topics",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/topics \\\n  -d '{\"names\":[\"names\"]}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/topics \\\n  -d '{\"names\":[\"names\"]}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /repos/{owner}/{repo}/topics', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  names: [\n    'names'\n  ],\n  mediaType: {\n    previews: [\n      'mercy'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /repos/{owner}/{repo}/topics'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">names</span>: [\n    <span class=\"hljs-string\">'names'</span>\n  ],\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'mercy'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Replace all repository topics",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/replace-all-topics",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#replace-all-repository-topics"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "names": {
                "type": "array of strings",
                "description": "<p><strong>Required</strong>. An array of topics to add to the repository. Pass one or more topics to <em>replace</em> the set of existing topics. Send an empty array (<code>[]</code>) to clear all topics from the repository. <strong>Note:</strong> Topic <code>names</code> cannot contain uppercase letters.</p>",
                "items": {
                  "type": "string"
                },
                "name": "names",
                "in": "body",
                "rawType": "array",
                "rawDescription": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.",
                "childParamsGroups": []
              }
            },
            "required": [
              "names"
            ]
          },
          "example": {
            "names": [
              "octocat",
              "atom",
              "electron",
              "api"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "replace-all-repository-topics",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "array of strings",
        "description": "<p><strong>Required</strong>. An array of topics to add to the repository. Pass one or more topics to <em>replace</em> the set of existing topics. Send an empty array (<code>[]</code>) to clear all topics from the repository. <strong>Note:</strong> Topic <code>names</code> cannot contain uppercase letters.</p>",
        "items": {
          "type": "string"
        },
        "name": "names",
        "in": "body",
        "rawType": "array",
        "rawDescription": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"names\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ]\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/repos/{owner}/{repo}/transfer",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/transfer \\\n  -d '{\"new_owner\":\"new_owner\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/transfer \\\n  -d '{\"new_owner\":\"new_owner\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{owner}/{repo}/transfer', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  new_owner: 'new_owner'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{owner}/{repo}/transfer'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">new_owner</span>: <span class=\"hljs-string\">'new_owner'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Transfer a repository",
    "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).",
    "tags": [
      "repos"
    ],
    "operationId": "repos/transfer",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#transfer-a-repository"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "new_owner": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The username or organization name the repository will be transferred to.</p>",
                "name": "new_owner",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The username or organization name the repository will be transferred to.",
                "childParamsGroups": []
              },
              "team_ids": {
                "type": "array of integers",
                "description": "<p>ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.</p>",
                "items": {
                  "type": "integer"
                },
                "name": "team_ids",
                "in": "body",
                "rawType": "array",
                "rawDescription": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
                "childParamsGroups": []
              }
            },
            "required": [
              "new_owner"
            ]
          },
          "example": {
            "new_owner": "github",
            "team_ids": [
              12,
              345
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "transfer-a-repository",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original <code>owner</code>, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see <a href=\"https://help.github.com/articles/about-repository-transfers/\">about repository transfers</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The username or organization name the repository will be transferred to.</p>",
        "name": "new_owner",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The username or organization name the repository will be transferred to.",
        "childParamsGroups": []
      },
      {
        "type": "array of integers",
        "description": "<p>ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.</p>",
        "items": {
          "type": "integer"
        },
        "name": "team_ids",
        "in": "body",
        "rawType": "array",
        "rawDescription": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repos/{owner}/{repo}/zipball/{ref}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "ref",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/zipball/REF",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repos/octocat/hello-world/zipball/REF</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repos/{owner}/{repo}/zipball/{ref}', {\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repos/{owner}/{repo}/zipball/{ref}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">'ref'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Download a repository archive (zip)",
    "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "tags": [
      "repos"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#download-a-repository-archive"
    },
    "operationId": "repos/download-zipball-archive",
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": "contents"
    },
    "slug": "download-a-repository-archive-zip",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "contents",
    "subcategoryLabel": "Contents",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "302",
        "httpStatusMessage": "Found",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Gets a redirect URL to download a zip archive for a repository. If you omit <code>:ref</code>, the repository’s default branch (usually\n<code>master</code>) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe <code>Location</code> header to make a second <code>GET</code> request.\n<strong>Note</strong>: For private repositories, these links are temporary and expire after five minutes.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/repos/{template_owner}/{template_repo}/generate",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "template_owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "template_repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.baptiste-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/TEMPLATE_OWNER/TEMPLATE_REPO/generate \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.baptiste-preview+json\" \\\n  http(s)://{hostname}/api/v3/repos/TEMPLATE_OWNER/TEMPLATE_REPO/generate \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /repos/{template_owner}/{template_repo}/generate', {\n  template_owner: 'template_owner',\n  template_repo: 'template_repo',\n  name: 'name',\n  mediaType: {\n    previews: [\n      'baptiste'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /repos/{template_owner}/{template_repo}/generate'</span>, {\n  <span class=\"hljs-attr\">template_owner</span>: <span class=\"hljs-string\">'template_owner'</span>,\n  <span class=\"hljs-attr\">template_repo</span>: <span class=\"hljs-string\">'template_repo'</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'baptiste'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a repository using a template",
    "description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-using-template",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "<p>The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.</p>",
                "name": "owner",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.",
                "childParamsGroups": []
              },
              "name": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The name of the new repository.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the new repository.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>A short description of the new repository.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the new repository.",
                "childParamsGroups": []
              },
              "include_all_branches": {
                "type": "boolean",
                "description": "<p>Set to <code>true</code> to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: <code>false</code>.</p>",
                "default": false,
                "name": "include_all_branches",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.",
                "childParamsGroups": []
              },
              "private": {
                "type": "boolean",
                "description": "<p>Either <code>true</code> to create a new private repository or <code>false</code> to create a new public one.</p>",
                "default": false,
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Either `true` to create a new private repository or `false` to create a new public one.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ]
          },
          "example": {
            "owner": "octocat",
            "name": "Hello-World",
            "description": "This is your first repository",
            "include_all_branches": false,
            "private": false
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "baptiste",
          "note": "Creating and using repository templates is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```",
          "html": "<p>Creating and using repository templates is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.baptiste-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "create-a-repository-using-a-template",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new repository using a repository template. Use the <code>template_owner</code> and <code>template_repo</code> route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository\">Get a repository</a> endpoint and check that the <code>is_template</code> key is <code>true</code>.</p>\n<p><strong>OAuth scope requirements</strong></p>\n<p>When using <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">OAuth</a>, authorizations must include:</p>\n<ul>\n<li><code>public_repo</code> scope or <code>repo</code> scope to create a public repository. Note: For GitHub AE, use <code>repo</code> scope to create an internal repository.</li>\n<li><code>repo</code> scope to create a private repository</li>\n</ul>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.</p>",
        "name": "owner",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The name of the new repository.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the new repository.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>A short description of the new repository.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the new repository.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Set to <code>true</code> to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: <code>false</code>.</p>",
        "default": false,
        "name": "include_all_branches",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Either <code>true</code> to create a new private repository or <code>false</code> to create a new public one.</p>",
        "default": false,
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Either `true` to create a new private repository or `false` to create a new public one.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/licenses/mit\"</span>\n  },\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"template_repository\"</span>: {\n    <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/repositories",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "A repository ID. Only return repositories with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>A repository ID. Only return repositories with an ID greater than this ID.</p>"
      },
      {
        "name": "visibility",
        "description": "Specifies the types of repositories to return. Can be one of `all` or `public`. Default: `public`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "public",
          "example": "all",
          "enum": [
            "all",
            "public"
          ]
        },
        "descriptionHTML": "<p>Specifies the types of repositories to return. Can be one of <code>all</code> or <code>public</code>. Default: <code>public</code>. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repositories",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/repositories</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /repositories')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /repositories'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public repositories",
    "description": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-public",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-public-repositories"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-public-repositories",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all public repositories in the order that they were created.</p>\n<p>Note:</p>\n<ul>\n<li>For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.</li>\n<li>Pagination is powered exclusively by the <code>since</code> parameter. Use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header\">Link header</a> to get the URL for the next page of repositories.</li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/search/code",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query). See \"[Searching code](https://help.github.com/articles/searching-code/)\" for a detailed list of qualifiers.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>. See \"<a href=\"https://help.github.com/articles/searching-code/\">Searching code</a>\" for a detailed list of qualifiers.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub Enterprise Server search infrastructure. Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "indexed"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query. Can only be <code>indexed</code>, which indicates how recently a file has been indexed by the GitHub Enterprise Server search infrastructure. Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/code",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/code</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/code', {\n  q: 'q'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/code'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Search code",
    "description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
    "tags": [
      "search"
    ],
    "operationId": "search/code",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-code"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-code",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Searches for query terms inside of a file. This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for code, you can get text match metadata for the file <strong>content</strong> and file <strong>path</strong> fields when you pass the <code>text-match</code> media type. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you want to find the definition of the <code>addClass</code> function inside <a href=\"https://github.com/jquery/jquery\">jQuery</a> repository, your query would look something like this:</p>\n<p><code>q=addClass+in:file+language:js+repo:jquery/jquery</code></p>\n<p>This query searches for the keyword <code>addClass</code> within a file's contents. The query limits the search to files where the language is JavaScript in the <code>jquery/jquery</code> repository.</p>\n<h4 id=\"considerations-for-code-search\"><a href=\"#considerations-for-code-search\">Considerations for code search</a></h4>\n<p>Due to the complexity of searching code, there are a few restrictions on how searches are performed:</p>\n<ul>\n<li>Only the <em>default branch</em> is considered. In most cases, this will be the <code>master</code> branch.</li>\n<li>Only files smaller than 384 KB are searchable.</li>\n<li>You must always include at least one search term when searching source code. For example, searching for <a href=\"https://github.com/search?utf8=%E2%9C%93&#x26;q=language%3Ago&#x26;type=Code\"><code>language:go</code></a> is not valid, while <a href=\"https://github.com/search?utf8=%E2%9C%93&#x26;q=amazing+language%3Ago&#x26;type=Code\"><code>amazing language:go</code></a> is.</li>\n</ul>"
  },
  {
    "verb": "get",
    "requestPath": "/search/commits",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query). See \"[Searching commits](https://help.github.com/articles/searching-commits/)\" for a detailed list of qualifiers.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>. See \"<a href=\"https://help.github.com/articles/searching-commits/\">Searching commits</a>\" for a detailed list of qualifiers.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "author-date",
            "committer-date"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query by <code>author-date</code> or <code>committer-date</code>. Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.cloak-preview+json\" \\\n  http(s)://{hostname}/api/v3/search/commits",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.cloak-preview+json\" \\\n  http(s)://{hostname}/api/v3/search/commits</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/commits', {\n  q: 'q',\n  mediaType: {\n    previews: [\n      'cloak'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/commits'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'cloak'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Search commits",
    "description": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
    "tags": [
      "search"
    ],
    "operationId": "search/commits",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-commits"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "cloak",
          "note": "The Commit Search API is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2017-01-05-commit-search-api/) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.cloak-preview\n```",
          "html": "<p>The Commit Search API is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2017-01-05-commit-search-api/\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.cloak-preview</code></pre>"
        }
      ],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-commits",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find commits via various criteria on the default branch (usually <code>master</code>). This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for commits, you can get text match metadata for the <strong>message</strong> field when you provide the <code>text-match</code> media type. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match\nmetadata</a>.</p>\n<p>For example, if you want to find commits related to CSS in the <a href=\"https://github.com/octocat/Spoon-Knife\">octocat/Spoon-Knife</a> repository. Your query would look something like this:</p>\n<p><code>q=repo:octocat/Spoon-Knife+css</code></p>"
  },
  {
    "verb": "get",
    "requestPath": "/search/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>. See \"<a href=\"https://help.github.com/articles/searching-issues-and-pull-requests/\">Searching issues and pull requests</a>\" for a detailed list of qualifiers.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "comments",
            "reactions",
            "reactions-+1",
            "reactions--1",
            "reactions-smile",
            "reactions-thinking_face",
            "reactions-heart",
            "reactions-tada",
            "interactions",
            "created",
            "updated"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query by the number of <code>comments</code>, <code>reactions</code>, <code>reactions-+1</code>, <code>reactions--1</code>, <code>reactions-smile</code>, <code>reactions-thinking_face</code>, <code>reactions-heart</code>, <code>reactions-tada</code>, or <code>interactions</code>. You can also sort results by how recently the items were <code>created</code> or <code>updated</code>, Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/issues', {\n  q: 'q'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/issues'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Search issues and pull requests",
    "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"",
    "tags": [
      "search"
    ],
    "operationId": "search/issues-and-pull-requests",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-issues-and-pull-requests"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-issues-and-pull-requests",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find issues by state and keyword. This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for issues, you can get text match metadata for the issue <strong>title</strong>, issue <strong>body</strong>, and issue <strong>comment body</strong> fields when you pass the <code>text-match</code> media type. For more details about how to receive highlighted\nsearch results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.</p>\n<p><code>q=windows+label:bug+language:python+state:open&#x26;sort=created&#x26;order=asc</code></p>\n<p>This query searches for the keyword <code>windows</code>, within any open issue that is labeled as <code>bug</code>. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.</p>\n<p><strong>Note:</strong> For <a href=\"https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests\">user-to-server</a> GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the <code>is:issue</code> or <code>is:pull-request</code> qualifier will receive an HTTP <code>422 Unprocessable Entity</code> response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the <code>is</code> qualifier, see \"<a href=\"https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests\">Searching only issues or pull requests</a>.\"</p>"
  },
  {
    "verb": "get",
    "requestPath": "/search/labels",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "repository_id",
        "description": "The id of the repository.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>The id of the repository.</p>"
      },
      {
        "name": "q",
        "description": "The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query).",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query by when the label was <code>created</code> or <code>updated</code>. Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/labels",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/labels</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/labels', {\n  repository_id: 42,\n  q: 'q'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/labels'</span>, {\n  <span class=\"hljs-attr\">repository_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Search labels",
    "description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.",
    "tags": [
      "search"
    ],
    "operationId": "search/labels",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-labels"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-labels",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for labels, you can get text match metadata for the label <strong>name</strong> and <strong>description</strong> fields when you pass the <code>text-match</code> media type. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you want to find labels in the <code>linguist</code> repository that match <code>bug</code>, <code>defect</code>, or <code>enhancement</code>. Your query might look like this:</p>\n<p><code>q=bug+defect+enhancement&#x26;repository_id=64778136</code></p>\n<p>The labels that best match the query appear first in the search results.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/search/repositories",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query). See \"[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)\" for a detailed list of qualifiers.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>. See \"<a href=\"https://help.github.com/articles/searching-for-repositories/\">Searching for repositories</a>\" for a detailed list of qualifiers.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "stars",
            "forks",
            "help-wanted-issues",
            "updated"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query by number of <code>stars</code>, <code>forks</code>, or <code>help-wanted-issues</code> or how recently the items were <code>updated</code>. Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/repositories",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/repositories</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/repositories', {\n  q: 'q'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/repositories'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Search repositories",
    "description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`",
    "tags": [
      "search"
    ],
    "operationId": "search/repos",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-repositories"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-repositories",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find repositories via various criteria. This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for repositories, you can get text match metadata for the <strong>name</strong> and <strong>description</strong> fields when you pass the <code>text-match</code> media type. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:</p>\n<p><code>q=tetris+language:assembly&#x26;sort=stars&#x26;order=desc</code></p>\n<p>This query searches for repositories with the word <code>tetris</code> in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.</p>\n<p>When you include the <code>mercy</code> preview header, you can also search for multiple topics by adding more <code>topic:</code> instances. For example, your query might look like this:</p>\n<p><code>q=topic:ruby+topic:rails</code></p>"
  },
  {
    "verb": "get",
    "requestPath": "/search/topics",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query).",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/search/topics",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.mercy-preview+json\" \\\n  http(s)://{hostname}/api/v3/search/topics</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/topics', {\n  q: 'q',\n  mediaType: {\n    previews: [\n      'mercy'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/topics'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'mercy'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Search topics",
    "description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.",
    "tags": [
      "search"
    ],
    "operationId": "search/topics",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-topics"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-topics",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>. See \"<a href=\"https://help.github.com/articles/searching-topics/\">Searching topics</a>\" for a detailed list of qualifiers.</p>\n<p>When searching for topics, you can get text match metadata for the topic's <strong>short_description</strong>, <strong>description</strong>, <strong>name</strong>, or <strong>display_name</strong> field when you pass the <code>text-match</code> media type. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you want to search for topics related to Ruby that are featured on <a href=\"https://github.com/topics\">https://github.com/topics</a>. Your query might look like this:</p>\n<p><code>q=ruby+is:featured</code></p>\n<p>This query searches for topics with the keyword <code>ruby</code> and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/search/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query). See \"[Searching users](https://help.github.com/articles/searching-users/)\" for a detailed list of qualifiers.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#constructing-a-search-query\">Constructing a search query</a>. See \"<a href=\"https://help.github.com/articles/searching-users/\">Searching users</a>\" for a detailed list of qualifiers.</p>"
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub Enterprise Server. Default: [best match](https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results)",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "followers",
            "repositories",
            "joined"
          ]
        },
        "descriptionHTML": "<p>Sorts the results of your query by number of <code>followers</code> or <code>repositories</code>, or when the person <code>joined</code> GitHub Enterprise Server. Default: <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#ranking-search-results\">best match</a></p>"
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>Determines whether the first search result returned is the highest number of matches (<code>desc</code>) or lowest number of matches (<code>asc</code>). This parameter is ignored unless you provide <code>sort</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/search/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /search/users', {\n  q: 'q'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /search/users'</span>, {\n  <span class=\"hljs-attr\">q</span>: <span class=\"hljs-string\">'q'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Search users",
    "description": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.",
    "tags": [
      "search"
    ],
    "operationId": "search/users",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/search#search-users"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "search",
      "subcategory": null
    },
    "slug": "search-users",
    "category": "search",
    "categoryLabel": "Search",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      },
      {
        "httpStatusCode": "503",
        "httpStatusMessage": "Service Unavailable",
        "description": "Service unavailable"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Find users via various criteria. This method returns up to 100 results <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination\">per page</a>.</p>\n<p>When searching for users, you can get text match metadata for the issue <strong>login</strong>, <strong>email</strong>, and <strong>name</strong> fields when you pass the <code>text-match</code> media type. For more details about highlighting search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>. For more details about how to receive highlighted search results, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata\">Text match metadata</a>.</p>\n<p>For example, if you're looking for a list of popular users, you might try this query:</p>\n<p><code>q=tom+repos:%3E42+followers:%3E1000</code></p>\n<p>This query searches for users with the name <code>tom</code>. The results are restricted to users with more than 42 repositories and over 1,000 followers.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/setup/api/configcheck",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/configcheck",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/configcheck</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /setup/api/configcheck')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /setup/api/configcheck'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get the configuration status",
    "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
    "operationId": "enterprise-admin/get-configuration-status",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-configuration-status"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "get-the-configuration-status",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This endpoint allows you to check the status of the most recent configuration process:</p>\n<p>Note that you may need to wait several seconds after you start a process before you can check its status.</p>\n<p>The different statuses are:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Status</th><th>Description</th></tr></thead><tbody><tr><td><code>PENDING</code></td><td>The job has not started yet</td></tr><tr><td><code>CONFIGURING</code></td><td>The job is running</td></tr><tr><td><code>DONE</code></td><td>The job has finished correctly</td></tr><tr><td><code>FAILED</code></td><td>The job has finished unexpectedly</td></tr></tbody></table>"
  },
  {
    "verb": "post",
    "requestPath": "/setup/api/configure",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/configure",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/configure</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /setup/api/configure')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /setup/api/configure'</span>)\n</code></pre>"
      }
    ],
    "summary": "Start a configuration process",
    "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
    "operationId": "enterprise-admin/start-configuration-process",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-configuration-process"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "start-a-configuration-process",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This endpoint allows you to start a configuration process at any time for your updated settings to take effect:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/setup/api/maintenance",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/maintenance",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/maintenance</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /setup/api/maintenance')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /setup/api/maintenance'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get the maintenance status",
    "description": "Check your installation's maintenance status:",
    "operationId": "enterprise-admin/get-maintenance-status",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-maintenance-status"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "get-the-maintenance-status",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Check your installation's maintenance status:</p>"
  },
  {
    "verb": "post",
    "requestPath": "/setup/api/maintenance",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/maintenance \\\n  --data-urlencode maintenance=maintenance",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/maintenance \\\n  --data-urlencode maintenance=maintenance</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /setup/api/maintenance', {\n  maintenance: 'maintenance'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /setup/api/maintenance'</span>, {\n  <span class=\"hljs-attr\">maintenance</span>: <span class=\"hljs-string\">'maintenance'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Enable or disable maintenance mode",
    "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/enable-or-disable-maintenance-mode",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "maintenance": {
                "type": "string",
                "description": "<p><strong>Required</strong>. A JSON string with the attributes <code>enabled</code> and <code>when</code>.</p>\n<p>The possible values for <code>enabled</code> are <code>true</code> and <code>false</code>. When it's <code>false</code>, the attribute <code>when</code> is ignored and the maintenance mode is turned off. <code>when</code> defines the time period when the maintenance was enabled.</p>\n<p>The possible values for <code>when</code> are <code>now</code> or any date parseable by <a href=\"https://github.com/mojombo/chronic\">mojombo/chronic</a>.</p>",
                "name": "maintenance",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A JSON string with the attributes `enabled` and `when`.\n\nThe possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
                "childParamsGroups": []
              }
            },
            "required": [
              "maintenance"
            ]
          },
          "example": {
            "maintenance": "{\"enabled\":true, \"when\":\"now\"}"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "enable-or-disable-maintenance-mode",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. A JSON string with the attributes <code>enabled</code> and <code>when</code>.</p>\n<p>The possible values for <code>enabled</code> are <code>true</code> and <code>false</code>. When it's <code>false</code>, the attribute <code>when</code> is ignored and the maintenance mode is turned off. <code>when</code> defines the time period when the maintenance was enabled.</p>\n<p>The possible values for <code>when</code> are <code>now</code> or any date parseable by <a href=\"https://github.com/mojombo/chronic\">mojombo/chronic</a>.</p>",
        "name": "maintenance",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A JSON string with the attributes `enabled` and `when`.\n\nThe possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/setup/api/settings",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /setup/api/settings')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /setup/api/settings'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get settings",
    "description": "",
    "operationId": "enterprise-admin/get-settings",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "get-settings",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/setup/api/settings",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings \\\n  --data-urlencode settings=settings",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings \\\n  --data-urlencode settings=settings</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /setup/api/settings', {\n  settings: 'settings'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /setup/api/settings'</span>, {\n  <span class=\"hljs-attr\">settings</span>: <span class=\"hljs-string\">'settings'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Set settings",
    "description": "For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/set-settings",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#set-settings"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "settings": {
                "type": "string",
                "description": "<p><strong>Required</strong>. A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings\">Get settings endpoint</a>.</p>",
                "name": "settings",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).",
                "childParamsGroups": []
              }
            },
            "required": [
              "settings"
            ]
          },
          "example": {
            "settings": "{ \"enterprise\": { \"public_pages\": true }}"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "set-settings",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>For a list of the available settings, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings\">Get settings endpoint</a>.</p>\n<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings\">Get settings endpoint</a>.</p>",
        "name": "settings",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/setup/api/settings/authorized-keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /setup/api/settings/authorized-keys')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /setup/api/settings/authorized-keys'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get all authorized SSH keys",
    "description": "",
    "operationId": "enterprise-admin/get-all-authorized-ssh-keys",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-all-authorized-ssh-keys"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "get-all-authorized-ssh-keys",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "post",
    "requestPath": "/setup/api/settings/authorized-keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys \\\n  --data-urlencode authorized_key=authorized_key",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys \\\n  --data-urlencode authorized_key=authorized_key</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /setup/api/settings/authorized-keys', {\n  authorized_key: 'authorized_key'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /setup/api/settings/authorized-keys'</span>, {\n  <span class=\"hljs-attr\">authorized_key</span>: <span class=\"hljs-string\">'authorized_key'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add an authorized SSH key",
    "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/add-authorized-ssh-key",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#add-an-authorized-ssh-key"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "authorized_key": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The public SSH key.</p>",
                "name": "authorized_key",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The public SSH key.",
                "childParamsGroups": []
              }
            },
            "required": [
              "authorized_key"
            ]
          },
          "example": {
            "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "add-an-authorized-ssh-key",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The public SSH key.</p>",
        "name": "authorized_key",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The public SSH key.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/setup/api/settings/authorized-keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys \\\n  --data-urlencode authorized_key=authorized_key",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/settings/authorized-keys \\\n  --data-urlencode authorized_key=authorized_key</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /setup/api/settings/authorized-keys', {\n  authorized_key: 'authorized_key'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /setup/api/settings/authorized-keys'</span>, {\n  <span class=\"hljs-attr\">authorized_key</span>: <span class=\"hljs-string\">'authorized_key'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove an authorized SSH key",
    "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/remove-authorized-ssh-key",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-an-authorized-ssh-key"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "authorized_key": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The public SSH key.</p>",
                "name": "authorized_key",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The public SSH key.",
                "childParamsGroups": []
              }
            },
            "required": [
              "authorized_key"
            ]
          },
          "example": {
            "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "remove-an-authorized-ssh-key",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The public SSH key.</p>",
        "name": "authorized_key",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The public SSH key.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/setup/api/start",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/start \\\n  --data-urlencode license=license",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/start \\\n  --data-urlencode license=license</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /setup/api/start', {\n  license: 'license'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /setup/api/start'</span>, {\n  <span class=\"hljs-attr\">license</span>: <span class=\"hljs-string\">'license'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a GitHub license",
    "description": "When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.\n\nNote that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/create-enterprise-server-license",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-github-enterprise-server-license"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "license": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The content of your <em>.ghl</em> license file.</p>",
                "name": "license",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The content of your _.ghl_ license file.",
                "childParamsGroups": []
              },
              "password": {
                "type": "string",
                "description": "<p>You <strong>must</strong> provide a password <em>only if</em> you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.</p>",
                "name": "password",
                "in": "body",
                "rawType": "string",
                "rawDescription": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
                "childParamsGroups": []
              },
              "settings": {
                "type": "string",
                "description": "<p>An optional JSON string containing the installation settings. For a list of the available settings, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings\">Get settings endpoint</a>.</p>",
                "name": "settings",
                "in": "body",
                "rawType": "string",
                "rawDescription": "An optional JSON string containing the installation settings. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).",
                "childParamsGroups": []
              }
            },
            "required": [
              "license"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "create-a-github-license",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.</p>\n<p>Note that you need to <code>POST</code> to <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-configuration-process\"><code>/setup/api/configure</code></a> to start the actual configuration process.</p>\n<p>When using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:</p>\n<ol>\n<li>If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.</li>\n<li>If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.</li>\n</ol>\n<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The content of your <em>.ghl</em> license file.</p>",
        "name": "license",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The content of your _.ghl_ license file.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>You <strong>must</strong> provide a password <em>only if</em> you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.</p>",
        "name": "password",
        "in": "body",
        "rawType": "string",
        "rawDescription": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>An optional JSON string containing the installation settings. For a list of the available settings, see the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings\">Get settings endpoint</a>.</p>",
        "name": "settings",
        "in": "body",
        "rawType": "string",
        "rawDescription": "An optional JSON string containing the installation settings. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "post",
    "requestPath": "/setup/api/upgrade",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/upgrade \\\n  --data-urlencode license=license",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/setup/api/upgrade \\\n  --data-urlencode license=license</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /setup/api/upgrade', {\n  license: 'license'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /setup/api/upgrade'</span>, {\n  <span class=\"hljs-attr\">license</span>: <span class=\"hljs-string\">'license'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Upgrade a license",
    "description": "This API upgrades your license and also triggers the configuration process.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
    "operationId": "enterprise-admin/upgrade-license",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#upgrade-a-license"
    },
    "requestBody": {
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "license": {
                "type": "string",
                "description": "<p>The content of your new <em>.ghl</em> license file.</p>",
                "name": "license",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The content of your new _.ghl_ license file.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "management-console"
    },
    "slug": "upgrade-a-license",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "management-console",
    "subcategoryLabel": "Management console",
    "contentType": "application/x-www-form-urlencoded",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>This API upgrades your license and also triggers the configuration process.</p>\n<p><strong>Note:</strong> The request body for this operation must be submitted as <code>application/x-www-form-urlencoded</code> data. You can submit a parameter value as a string, or you can use a tool such as <code>curl</code> to submit a parameter value as the contents of a text file. For more information, see the <a href=\"https://curl.se/docs/manpage.html#--data-urlencode\"><code>curl</code> documentation</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The content of your new <em>.ghl</em> license file.</p>",
        "name": "license",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The content of your new _.ghl_ license file.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a team",
    "description": "",
    "operationId": "teams/get",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#get-a-team"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "get-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/teams/{team_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42 \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42 \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /teams/{team_id}', {\n  team_id: 42,\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /teams/{team_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update a team",
    "description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.",
    "operationId": "teams/update",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#update-a-team"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "<p>The name of the team.</p>",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the team.",
                "childParamsGroups": []
              },
              "description": {
                "type": "string",
                "description": "<p>The description of the team.</p>",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The description of the team.",
                "childParamsGroups": []
              },
              "privacy": {
                "type": "string",
                "description": "<p>The level of privacy this team should have. Editing teams without specifying this parameter leaves <code>privacy</code> intact. The options are:<br>\n<strong>For a non-nested team:</strong><br>\n* <code>secret</code> - only visible to organization owners and members of this team.<br>\n* <code>closed</code> - visible to all members of this organization.<br>\n<strong>For a parent or child team:</strong><br>\n* <code>closed</code> - visible to all members of this organization.</p>",
                "enum": [
                  "secret",
                  "closed"
                ],
                "name": "privacy",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.",
                "childParamsGroups": []
              },
              "permission": {
                "type": "string",
                "description": "<p><strong>Deprecated</strong>. The permission that new repositories will be added to the team with when none is specified. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer newly-added repositories.<br>\n* <code>push</code> - team members can pull and push, but not administer newly-added repositories.<br>\n* <code>admin</code> - team members can pull, push and administer newly-added repositories.</p>",
                "enum": [
                  "pull",
                  "push",
                  "admin"
                ],
                "default": "pull",
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
                "childParamsGroups": []
              },
              "parent_team_id": {
                "type": "integer or nullable",
                "description": "<p>The ID of a team to set as the parent team. <strong>Note</strong>: You must pass the <code>hellcat-preview</code> media type to use this parameter.</p>",
                "nullable": true,
                "name": "parent_team_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "name": "new team name",
            "description": "new team description",
            "privacy": "closed"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "update-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>To edit a team, the authenticated user must either be an organization owner or a team maintainer.</p>\n<p><strong>Note:</strong> With nested teams, the <code>privacy</code> for parent teams cannot be <code>secret</code>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The name of the team.</p>",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the team.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The description of the team.</p>",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The description of the team.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The level of privacy this team should have. Editing teams without specifying this parameter leaves <code>privacy</code> intact. The options are:<br>\n<strong>For a non-nested team:</strong><br>\n* <code>secret</code> - only visible to organization owners and members of this team.<br>\n* <code>closed</code> - visible to all members of this organization.<br>\n<strong>For a parent or child team:</strong><br>\n* <code>closed</code> - visible to all members of this organization.</p>",
        "enum": [
          "secret",
          "closed"
        ],
        "name": "privacy",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Deprecated</strong>. The permission that new repositories will be added to the team with when none is specified. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer newly-added repositories.<br>\n* <code>push</code> - team members can pull and push, but not administer newly-added repositories.<br>\n* <code>admin</code> - team members can pull, push and administer newly-added repositories.</p>",
        "enum": [
          "pull",
          "push",
          "admin"
        ],
        "default": "pull",
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "childParamsGroups": []
      },
      {
        "type": "integer or nullable",
        "description": "<p>The ID of a team to set as the parent team. <strong>Note</strong>: You must pass the <code>hellcat-preview</code> media type to use this parameter.</p>",
        "nullable": true,
        "name": "parent_team_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VGVhbTE=\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Justice League\"</span>,\n  <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"justice-league\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great team.\"</span>,\n  <span class=\"hljs-attr\">\"privacy\"</span>: <span class=\"hljs-string\">\"closed\"</span>,\n  <span class=\"hljs-attr\">\"permission\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n  <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/members{/member}\"</span>,\n  <span class=\"hljs-attr\">\"repositories_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/repos\"</span>,\n  <span class=\"hljs-attr\">\"members_count\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"repos_count\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2017-07-14T16:53:42Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-08-17T12:37:15Z\"</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"company\"</span>: <span class=\"hljs-string\">\"GitHub\"</span>,\n    <span class=\"hljs-attr\">\"blog\"</span>: <span class=\"hljs-string\">\"https://github.com/blog\"</span>,\n    <span class=\"hljs-attr\">\"location\"</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n    <span class=\"hljs-attr\">\"has_organization_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"has_repository_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">\"public_repos\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"public_gists\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"followers\"</span>: <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-attr\">\"following\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n    <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2017-08-17T12:37:15Z\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"Organization\"</span>\n  },\n  <span class=\"hljs-attr\">\"ldap_dn\"</span>: <span class=\"hljs-string\">\"uid=asdf,ou=users,dc=github,dc=com\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a team",
    "description": "To delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner and you pass the `hellcat-preview` media type, deleting a parent team will delete all of its child teams as well.",
    "operationId": "teams/delete",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#delete-a-team"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "delete-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>To delete a team, the authenticated user must be an organization owner or team maintainer.</p>\n<p>If you are an organization owner and you pass the <code>hellcat-preview</code> media type, deleting a parent team will delete all of its child teams as well.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions', {\n  team_id: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List discussions",
    "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/list-discussions",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-discussions"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussions"
    },
    "slug": "list-discussions",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussions",
    "subcategoryLabel": "Discussions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all discussions on a team's page. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/teams/{team_id}/discussions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions \\\n  -d '{\"title\":\"title\",\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions \\\n  -d '{\"title\":\"title\",\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /teams/{team_id}/discussions', {\n  team_id: 42,\n  title: 'title',\n  body: 'body',\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /teams/{team_id}/discussions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a discussion",
    "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" for details.",
    "operationId": "teams/create-discussion",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-discussion"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The discussion post's title.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion post's title.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The discussion post's body text.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion post's body text.",
                "childParamsGroups": []
              },
              "private": {
                "type": "boolean",
                "description": "<p>Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to <code>true</code> to create a private post.</p>",
                "default": false,
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
                "childParamsGroups": []
              }
            },
            "required": [
              "title",
              "body"
            ]
          },
          "example": {
            "title": "Our first team post",
            "body": "Hi! This is an area for us to collaborate as a team."
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussions"
    },
    "slug": "create-a-discussion",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussions",
    "subcategoryLabel": "Discussions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new discussion post on a team's page. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The discussion post's title.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion post's title.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The discussion post's body text.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion post's body text.",
        "childParamsGroups": []
      },
      {
        "type": "boolean",
        "description": "<p>Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to <code>true</code> to create a private post.</p>",
        "default": false,
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Hi! This is an area for us to collaborate as a team.\"</span>,\n  <span class=\"hljs-attr\">\"body_html\"</span>: <span class=\"hljs-string\">\"&#x3C;p>Hi! This is an area for us to collaborate as a team&#x3C;/p>\"</span>,\n  <span class=\"hljs-attr\">\"body_version\"</span>: <span class=\"hljs-string\">\"0d495416a700fb06133c612575d92bfb\"</span>,\n  <span class=\"hljs-attr\">\"comments_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1/comments\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2018-01-25T18:56:31Z\"</span>,\n  <span class=\"hljs-attr\">\"last_edited_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"pinned\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"team_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Our first team post\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2018-01-25T18:56:31Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"reactions\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1/reactions\"</span>,\n    <span class=\"hljs-attr\">\"total_count\"</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">\"+1\"</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">\"-1\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"laugh\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"confused\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"heart\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"hooray\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"eyes\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"rocket\"</span>: <span class=\"hljs-number\">1</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions/{discussion_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions/{discussion_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a discussion",
    "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/get-discussion",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-discussion"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussions"
    },
    "slug": "get-a-discussion",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussions",
    "subcategoryLabel": "Discussions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get a specific discussion on a team's page. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42 \\\n  -d '{\"title\":\"title\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42 \\\n  -d '{\"title\":\"title\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /teams/{team_id}/discussions/{discussion_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  title: 'title',\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /teams/{team_id}/discussions/{discussion_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'title'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a discussion",
    "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/update-discussion",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#update-a-discussion"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "<p>The discussion post's title.</p>",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion post's title.",
                "childParamsGroups": []
              },
              "body": {
                "type": "string",
                "description": "<p>The discussion post's body text.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion post's body text.",
                "childParamsGroups": []
              }
            }
          },
          "example": {
            "title": "Welcome to our first team post"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussions"
    },
    "slug": "update-a-discussion",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussions",
    "subcategoryLabel": "Discussions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The discussion post's title.</p>",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion post's title.",
        "childParamsGroups": []
      },
      {
        "type": "string",
        "description": "<p>The discussion post's body text.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion post's body text.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Hi! This is an area for us to collaborate as a team.\"</span>,\n  <span class=\"hljs-attr\">\"body_html\"</span>: <span class=\"hljs-string\">\"&#x3C;p>Hi! This is an area for us to collaborate as a team&#x3C;/p>\"</span>,\n  <span class=\"hljs-attr\">\"body_version\"</span>: <span class=\"hljs-string\">\"0d495416a700fb06133c612575d92bfb\"</span>,\n  <span class=\"hljs-attr\">\"comments_count\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1/comments\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2018-01-25T18:56:31Z\"</span>,\n  <span class=\"hljs-attr\">\"last_edited_at\"</span>: <span class=\"hljs-string\">\"2018-01-26T18:22:20Z\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"pinned\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"team_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Welcome to our first team post\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2018-01-26T18:22:20Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"reactions\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2343027/discussions/1/reactions\"</span>,\n    <span class=\"hljs-attr\">\"total_count\"</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">\"+1\"</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">\"-1\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"laugh\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"confused\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"heart\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"hooray\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"eyes\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"rocket\"</span>: <span class=\"hljs-number\">1</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/discussions/{discussion_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/discussions/{discussion_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a discussion",
    "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/delete-discussion",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#delete-a-discussion"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": "discussions"
    },
    "slug": "delete-a-discussion",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussions",
    "subcategoryLabel": "Discussions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Delete a discussion from a team's page. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions/{discussion_number}/comments', {\n  team_id: 42,\n  discussion_number: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions/{discussion_number}/comments'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List discussion comments",
    "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/list-discussion-comments",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-discussion-comments"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussion-comments"
    },
    "slug": "list-discussion-comments",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussion-comments",
    "subcategoryLabel": "Discussion comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all comments on a team discussion. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /teams/{team_id}/discussions/{discussion_number}/comments', {\n  team_id: 42,\n  discussion_number: 42,\n  body: 'body',\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /teams/{team_id}/discussions/{discussion_number}/comments'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a discussion comment",
    "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" for details.",
    "operationId": "teams/create-discussion-comment",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-discussion-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The discussion comment's body text.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion comment's body text.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Do you like apples?"
          }
        }
      }
    },
    "x-github": {
      "triggersNotification": true,
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussion-comments"
    },
    "slug": "create-a-discussion-comment",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussion-comments",
    "subcategoryLabel": "Discussion comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new comment on a team discussion. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>\n<p>This endpoint triggers <a href=\"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications\">notifications</a>. Creating content too quickly using this endpoint may result in abuse rate limiting. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#abuse-rate-limits\">Abuse rate limits</a>\" for details.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The discussion comment's body text.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion comment's body text.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Do you like apples?\"</span>,\n  <span class=\"hljs-attr\">\"body_html\"</span>: <span class=\"hljs-string\">\"&#x3C;p>Do you like apples?&#x3C;/p>\"</span>,\n  <span class=\"hljs-attr\">\"body_version\"</span>: <span class=\"hljs-string\">\"5eb32b219cdc6a5a9b29ba5d6caa9c51\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2018-01-15T23:53:58Z\"</span>,\n  <span class=\"hljs-attr\">\"last_edited_at\"</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">\"discussion_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2018-01-15T23:53:58Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"reactions\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1/reactions\"</span>,\n    <span class=\"hljs-attr\">\"total_count\"</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">\"+1\"</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">\"-1\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"laugh\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"confused\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"heart\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"hooray\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"eyes\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"rocket\"</span>: <span class=\"hljs-number\">1</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  comment_number: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a discussion comment",
    "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/get-discussion-comment",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-discussion-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussion-comments"
    },
    "slug": "get-a-discussion-comment",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussion-comments",
    "subcategoryLabel": "Discussion comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get a specific comment on a team discussion. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42 \\\n  -d '{\"body\":\"body\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42 \\\n  -d '{\"body\":\"body\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  comment_number: 42,\n  body: 'body',\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-string\">'body'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Update a discussion comment",
    "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/update-discussion-comment",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#update-a-discussion-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The discussion comment's body text.</p>",
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The discussion comment's body text.",
                "childParamsGroups": []
              }
            },
            "required": [
              "body"
            ]
          },
          "example": {
            "body": "Do you like pineapples?"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "teams",
      "subcategory": "discussion-comments"
    },
    "slug": "update-a-discussion-comment",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussion-comments",
    "subcategoryLabel": "Discussion comments",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Edits the body text of a discussion comment. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The discussion comment's body text.</p>",
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The discussion comment's body text.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"author\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"Do you like pineapples?\"</span>,\n  <span class=\"hljs-attr\">\"body_html\"</span>: <span class=\"hljs-string\">\"&#x3C;p>Do you like pineapples?&#x3C;/p>\"</span>,\n  <span class=\"hljs-attr\">\"body_version\"</span>: <span class=\"hljs-string\">\"e6907b24d9c93cc0c5024a7af5888116\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2018-01-15T23:53:58Z\"</span>,\n  <span class=\"hljs-attr\">\"last_edited_at\"</span>: <span class=\"hljs-string\">\"2018-01-26T18:22:20Z\"</span>,\n  <span class=\"hljs-attr\">\"discussion_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2018-01-26T18:22:20Z\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1/comments/1\"</span>,\n  <span class=\"hljs-attr\">\"reactions\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/2403582/discussions/1/reactions\"</span>,\n    <span class=\"hljs-attr\">\"total_count\"</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">\"+1\"</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">\"-1\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"laugh\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"confused\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"heart\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"hooray\"</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">\"eyes\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"rocket\"</span>: <span class=\"hljs-number\">1</span>\n  }\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}', {\n  team_id: 42,\n  discussion_number: 42,\n  comment_number: 42,\n  mediaType: {\n    previews: [\n      'echo'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a discussion comment",
    "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "teams/delete-discussion-comment",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#delete-a-discussion-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": "discussion-comments"
    },
    "slug": "delete-a-discussion-comment",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "discussion-comments",
    "subcategoryLabel": "Discussion comments",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Deletes a comment on a team discussion. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion comment.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to a team discussion comment.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions', {\n  team_id: 42,\n  discussion_number: 42,\n  comment_number: 42,\n  mediaType: {\n    previews: [\n      'echo',\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>,\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for a team discussion comment",
    "description": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "reactions/list-for-team-discussion-comment",
    "tags": [
      "reactions"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#list-reactions-for-a-team-discussion-comment"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-a-team-discussion-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments\">team discussion comment</a>. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/comments/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions', {\n  team_id: 42,\n  discussion_number: 42,\n  comment_number: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'echo',\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">comment_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>,\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for a team discussion comment",
    "description": "Create a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.",
    "operationId": "reactions/create-for-team-discussion-comment",
    "tags": [
      "reactions"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#create-reaction-for-a-team-discussion-comment"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the team discussion comment.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the team discussion comment.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-a-team-discussion-comment",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments\">team discussion comment</a>. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this team discussion comment.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the team discussion comment.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the team discussion comment.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        "descriptionHTML": "<p>Returns a single <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a>. Omit this parameter to list all reactions to a team discussion.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/reactions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/reactions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/discussions/{discussion_number}/reactions', {\n  team_id: 42,\n  discussion_number: 42,\n  mediaType: {\n    previews: [\n      'echo',\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/discussions/{discussion_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>,\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List reactions for a team discussion",
    "description": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "reactions/list-for-team-discussion",
    "tags": [
      "reactions"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#list-reactions-for-a-team-discussion"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "list-reactions-for-a-team-discussion",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List the reactions to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions\">team discussion</a>. OAuth access tokens require the <code>read:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/teams/{team_id}/discussions/{discussion_number}/reactions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/reactions \\\n  -d '{\"content\":\"content\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.echo-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/discussions/42/reactions \\\n  -d '{\"content\":\"content\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /teams/{team_id}/discussions/{discussion_number}/reactions', {\n  team_id: 42,\n  discussion_number: 42,\n  content: 'content',\n  mediaType: {\n    previews: [\n      'echo',\n      'squirrel-girl'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /teams/{team_id}/discussions/{discussion_number}/reactions'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">discussion_number</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'content'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'echo'</span>,\n      <span class=\"hljs-string\">'squirrel-girl'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create reaction for a team discussion",
    "description": "Create a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.",
    "operationId": "reactions/create-for-team-discussion",
    "tags": [
      "reactions"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#create-reaction-for-a-team-discussion"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the team discussion.</p>",
                "enum": [
                  "+1",
                  "-1",
                  "laugh",
                  "confused",
                  "heart",
                  "hooray",
                  "rocket",
                  "eyes"
                ],
                "name": "content",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the team discussion.",
                "childParamsGroups": []
              }
            },
            "required": [
              "content"
            ]
          },
          "example": {
            "content": "heart"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "echo",
          "note": "The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.echo-preview+json\n```",
          "html": "<p>The team discussions API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2018-02-07-team-discussions-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.echo-preview+json</code></pre>"
        },
        {
          "required": true,
          "name": "squirrel-girl",
          "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions) reactions.",
          "html": "<p>An additional <code>reactions</code> object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-05-12-reactions-api-preview\">blog post</a> for full details.</p>\n<p>To access the API you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.squirrel-girl-preview</code></pre>\n<p>The <code>reactions</code> key will have the following payload where <code>url</code> can be used to construct the API location for <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions\">listing and creating</a> reactions.</p>"
        }
      ],
      "category": "reactions",
      "subcategory": null
    },
    "slug": "create-reaction-for-a-team-discussion",
    "category": "reactions",
    "categoryLabel": "Reactions",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Create a reaction to a <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions\">team discussion</a>. OAuth access tokens require the <code>write:discussion</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>. A response with an HTTP <code>200</code> status means that you already added the reaction type to this team discussion.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types\">reaction type</a> to add to the team discussion.</p>",
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "name": "content",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The [reaction type](https://docs.github.com/enterprise-server@2.18/rest/reference/reactions#reaction-types) to add to the team discussion.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDg6UmVhY3Rpb24x\"</span>,\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"content\"</span>: <span class=\"hljs-string\">\"heart\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-05-20T20:09:31Z\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/members",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "role",
        "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "member",
            "maintainer",
            "all"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Filters members returned by their role in the team. Can be one of:<br>\n* <code>member</code> - normal members of the team.<br>\n* <code>maintainer</code> - team maintainers.<br>\n* <code>all</code> - all members of the team.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/members', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/members'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List team members",
    "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "operationId": "teams/list-members",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-team-members"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": "members"
    },
    "slug": "list-team-members",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If you pass the <code>hellcat-preview</code> media type, team members will include the members of child teams.</p>\n<p>To list members in a team, the team must be visible to the authenticated user.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/members/{username}', {\n  team_id: 42,\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/members/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get team member (Legacy)",
    "description": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "tags": [
      "teams"
    ],
    "operationId": "teams/get-member-legacy",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-member-legacy"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "removalDate": "2021-02-01",
      "deprecationDate": "2020-01-21",
      "category": "teams",
      "subcategory": "members"
    },
    "deprecated": true,
    "slug": "get-team-member-legacy",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "if user is a member"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "if user is not a member"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The \"Get team member\" endpoint (described below) is deprecated.</p>\n<p>We recommend using the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-membership-for-a-user\">Get team membership for a user</a> endpoint instead. It allows you to get both active and pending memberships.</p>\n<p>To list members in a team, the team must be visible to the authenticated user.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/teams/{team_id}/members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /teams/{team_id}/members/{username}', {\n  team_id: 42,\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /teams/{team_id}/members/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add team member (Legacy)",
    "description": "The \"Add team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Add or update team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "tags": [
      "teams"
    ],
    "operationId": "teams/add-member-legacy",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-team-member-legacy"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "removalDate": "2021-02-01",
      "deprecationDate": "2020-01-21",
      "category": "teams",
      "subcategory": "members"
    },
    "deprecated": true,
    "slug": "add-team-member-legacy",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if team synchronization is set up"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Unprocessable Entity if you attempt to add an organization to a team or you attempt to add a user to a team when they are not a member of at least one other team in the same organization"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The \"Add team member\" endpoint (described below) is deprecated.</p>\n<p>We recommend using the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-membership-for-a-user\">Add or update team membership for a user</a> endpoint instead. It allows you to invite new organization members to your teams.</p>\n<p>Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.</p>\n<p><strong>Note:</strong> When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"<a href=\"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/\">Synchronizing teams between your identity provider and GitHub Enterprise Server</a>.\"</p>\n<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/members/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/members/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/members/{username}', {\n  team_id: 42,\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/members/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove team member (Legacy)",
    "description": "The \"Remove team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Remove team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"",
    "tags": [
      "teams"
    ],
    "operationId": "teams/remove-member-legacy",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-member-legacy"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "removalDate": "2021-02-01",
      "deprecationDate": "2020-01-21",
      "category": "teams",
      "subcategory": "members"
    },
    "deprecated": true,
    "slug": "remove-team-member-legacy",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if team synchronization is setup"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>The \"Remove team member\" endpoint (described below) is deprecated.</p>\n<p>We recommend using the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-membership-for-a-user\">Remove team membership for a user</a> endpoint instead. It allows you to remove both active and pending memberships.</p>\n<p>Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see <a href=\"https://help.github.com/github/getting-started-with-github/githubs-products\">GitHub's products</a> in the GitHub Help documentation.</p>\n<p>To remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.</p>\n<p><strong>Note:</strong> When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"<a href=\"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/\">Synchronizing teams between your identity provider and GitHub Enterprise Server</a>.\"</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/memberships/{username}', {\n  team_id: 42,\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get team membership for a user",
    "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-team).",
    "operationId": "teams/get-membership-for-user",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": "members"
    },
    "slug": "get-team-membership-for-a-user",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If you pass the <code>hellcat-preview</code> media type, team members will include the members of child teams.</p>\n<p>To get a user's membership with a team, the team must be visible to the authenticated user.</p>\n<p><strong>Note:</strong>\nThe response contains the <code>state</code> of the membership and the member's <code>role</code>.</p>\n<p>The <code>role</code> for organization owners is set to <code>maintainer</code>. For more information about <code>maintainer</code> roles, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-team\">Create a team</a>.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/teams/{team_id}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME \\\n  -d '{\"role\":\"role\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME \\\n  -d '{\"role\":\"role\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /teams/{team_id}/memberships/{username}', {\n  team_id: 42,\n  username: 'username',\n  role: 'role'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /teams/{team_id}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">role</span>: <span class=\"hljs-string\">'role'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add or update team membership for a user",
    "description": "If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.",
    "operationId": "teams/add-or-update-membership-for-user",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-membership-for-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "<p>The role that this user should have in the team. Can be one of:<br>\n* <code>member</code> - a normal member of the team.<br>\n* <code>maintainer</code> - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.</p>",
                "enum": [
                  "member",
                  "maintainer"
                ],
                "default": "member",
                "name": "role",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": "members"
    },
    "slug": "add-or-update-team-membership-for-a-user",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.</p>\n<p>If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.</p>\n<p>If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The role that this user should have in the team. Can be one of:<br>\n* <code>member</code> - a normal member of the team.<br>\n* <code>maintainer</code> - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.</p>",
        "enum": [
          "member",
          "maintainer"
        ],
        "default": "member",
        "name": "role",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response if user's membership with team is now pending",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/teams/1/memberships/octocat\"</span>,\n  <span class=\"hljs-attr\">\"role\"</span>: <span class=\"hljs-string\">\"member\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"pending\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Unprocessable Entity if you attempt to add an organization to a team"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/memberships/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/memberships/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/memberships/{username}', {\n  team_id: 42,\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/memberships/{username}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove team membership for a user",
    "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.",
    "operationId": "teams/remove-membership-for-user",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-membership-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": "members"
    },
    "slug": "remove-team-membership-for-a-user",
    "category": "teams",
    "categoryLabel": "Teams",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.inertia-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/projects', {\n  team_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/projects'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List team projects",
    "description": "Lists the organization projects for a team. If you are an [authenticated](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all projects for the team. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
    "operationId": "teams/list-projects",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-team-projects"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "list-team-projects",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the organization projects for a team. If you are an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication\">authenticated</a> site administrator for your Enterprise instance, you will be able to list all projects for the team. If you pass the <code>hellcat-preview</code> media type, the response will include projects inherited from a parent team.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.inertia-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/projects/{project_id}', {\n  team_id: 42,\n  project_id: 42,\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Check team permissions for a project",
    "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
    "operationId": "teams/check-permissions-for-project",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#check-team-permissions-for-a-project"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "check-team-permissions-for-a-project",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if project is not managed by this team"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Checks whether a team has <code>read</code>, <code>write</code>, or <code>admin</code> permissions for an organization project. If you pass the <code>hellcat-preview</code> media type, the response will include projects inherited from a parent team.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/teams/{team_id}/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.inertia-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42 \\\n  -d '{\"permission\":\"permission\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42 \\\n  -d '{\"permission\":\"permission\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /teams/{team_id}/projects/{project_id}', {\n  team_id: 42,\n  project_id: 42,\n  permission: 'permission',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /teams/{team_id}/projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">permission</span>: <span class=\"hljs-string\">'permission'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Add or update team project permissions",
    "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.",
    "operationId": "teams/add-or-update-project-permissions",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#add-or-update-team-project-permissions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "permission": {
                "type": "string",
                "description": "<p>The permission to grant to the team for this project. Can be one of:<br>\n* <code>read</code> - team members can read, but not write to or administer this project.<br>\n* <code>write</code> - team members can read and write, but not administer this project.<br>\n* <code>admin</code> - team members can read, write and administer this project.<br>\nDefault: the team's <code>permission</code> attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"<br>\n<strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, you can promote—but not demote—a <code>permission</code> attribute inherited from a parent team.</p>",
                "enum": [
                  "read",
                  "write",
                  "admin"
                ],
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.",
                "childParamsGroups": []
              }
            },
            "nullable": true
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "add-or-update-team-project-permissions",
    "category": "teams",
    "categoryLabel": "Teams",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have <code>admin</code> permissions for the project. The project and team must be part of the same organization.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The permission to grant to the team for this project. Can be one of:<br>\n* <code>read</code> - team members can read, but not write to or administer this project.<br>\n* <code>write</code> - team members can read and write, but not administer this project.<br>\n* <code>admin</code> - team members can read, write and administer this project.<br>\nDefault: the team's <code>permission</code> attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"<br>\n<strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, you can promote—but not demote—a <code>permission</code> attribute inherited from a parent team.</p>",
        "enum": [
          "read",
          "write",
          "admin"
        ],
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden if the project is not owned by the organization",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Must have admin rights to Repository.\"</span>,\n  <span class=\"hljs-attr\">\"documentation_url\"</span>: <span class=\"hljs-string\">\"https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-project-permissions\"</span>\n}\n</code></pre>"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/projects/{project_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/projects/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/projects/{project_id}', {\n  team_id: 42,\n  project_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/projects/{project_id}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">project_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove a project from a team",
    "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.",
    "operationId": "teams/remove-project",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#remove-a-project-from-a-team"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "remove-a-project-from-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have <code>read</code> access to both the team and project, or <code>admin</code> access to the team or project. <strong>Note:</strong> This endpoint removes the project from the team, but does not delete it.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/repos', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/repos'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List team repositories",
    "description": "**Note**: If you pass the `hellcat-preview` media type, the response will include any repositories inherited through a parent team.\n\nIf you are an [authenticated](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all repositories for the team.",
    "operationId": "teams/list-repos",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-team-repositories"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "list-team-repositories",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, the response will include any repositories inherited through a parent team.</p>\n<p>If you are an <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication\">authenticated</a> site administrator for your Enterprise instance, you will be able to list all repositories for the team.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/repos/{owner}/{repo}', {\n  team_id: 42,\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check team permissions for a repository",
    "description": "**Note**: If you pass the `hellcat-preview` media type, repositories inherited through a parent team will be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:",
    "operationId": "teams/check-permissions-for-repo",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#check-team-permissions-for-a-repository"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "check-team-permissions-for-a-repository",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Alternative response with extra repository information"
      },
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if repository is managed by this team"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if repository is not managed by this team"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p><strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, repositories inherited through a parent team will be checked.</p>\n<p>You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">media type</a> via the <code>Accept</code> header:</p>"
  },
  {
    "verb": "put",
    "requestPath": "/teams/{team_id}/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world \\\n  -d '{\"permission\":\"permission\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world \\\n  -d '{\"permission\":\"permission\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /teams/{team_id}/repos/{owner}/{repo}', {\n  team_id: 42,\n  owner: 'octocat',\n  repo: 'hello-world',\n  permission: 'permission'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /teams/{team_id}/repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>,\n  <span class=\"hljs-attr\">permission</span>: <span class=\"hljs-string\">'permission'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Add or update team repository permissions",
    "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "operationId": "teams/add-or-update-repo-permissions",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#add-or-update-team-repository-permissions"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "permission": {
                "type": "string",
                "description": "<p>The permission to grant the team on this repository. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer this repository.<br>\n* <code>push</code> - team members can pull and push, but not administer this repository.<br>\n* <code>admin</code> - team members can pull, push and administer this repository.  </p>\n<p>If no permission is specified, the team's <code>permission</code> attribute will be used to determine what permission to grant the team on this repository.<br>\n<strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, you can promote—but not demote—a <code>permission</code> attribute inherited through a parent team.</p>",
                "enum": [
                  "pull",
                  "push",
                  "admin"
                ],
                "name": "permission",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited through a parent team.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "add-or-update-team-repository-permissions",
    "category": "teams",
    "categoryLabel": "Teams",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a <code>422 Unprocessable Entity</code> status if you attempt to add a repository to a team that is not owned by the organization.</p>\n<p>Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The permission to grant the team on this repository. Can be one of:<br>\n* <code>pull</code> - team members can pull, but not push to or administer this repository.<br>\n* <code>push</code> - team members can pull and push, but not administer this repository.<br>\n* <code>admin</code> - team members can pull, push and administer this repository.  </p>\n<p>If no permission is specified, the team's <code>permission</code> attribute will be used to determine what permission to grant the team on this repository.<br>\n<strong>Note</strong>: If you pass the <code>hellcat-preview</code> media type, you can promote—but not demote—a <code>permission</code> attribute inherited through a parent team.</p>",
        "enum": [
          "pull",
          "push",
          "admin"
        ],
        "name": "permission",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited through a parent team.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/teams/{team_id}/repos/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/repos/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /teams/{team_id}/repos/{owner}/{repo}', {\n  team_id: 42,\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /teams/{team_id}/repos/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Remove a repository from a team",
    "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.",
    "operationId": "teams/remove-repo",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#remove-a-repository-from-a-team"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "remove-a-repository-from-a-team",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/teams/{team_id}/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100)</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/teams/42/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /teams/{team_id}/teams', {\n  team_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /teams/{team_id}/teams'</span>, {\n  <span class=\"hljs-attr\">team_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List child teams",
    "description": "You must use the `hellcat-preview` media type to use this endpoint.",
    "operationId": "teams/list-child",
    "tags": [
      "teams"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-child-teams"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "hellcat",
          "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
          "html": "<p>The Nested Teams API is currently available for developers to preview. See the <a href=\"https://developer.github.com/changes/2017-08-30-preview-nested-teams\">blog post</a> for full details. To access the API, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.hellcat-preview+json</code></pre>"
        }
      ],
      "category": "teams",
      "subcategory": null
    },
    "slug": "list-child-teams",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "if child teams exist"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>You must use the <code>hellcat-preview</code> media type to use this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get the authenticated user",
    "description": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.\n\nIf the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.",
    "tags": [
      "users"
    ],
    "operationId": "users/get-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#get-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": null
    },
    "slug": "get-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If the authenticated user is authenticated through basic authentication or OAuth with the <code>user</code> scope, then the response lists public and private profile information.</p>\n<p>If the authenticated user is authenticated through OAuth without the <code>user</code> scope, then the response lists only public profile information.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/user",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /user', {\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /user'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update the authenticated user",
    "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.",
    "tags": [
      "users"
    ],
    "operationId": "users/update-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users/#update-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "description": "<p>The new name of the user.</p>",
                "type": "string",
                "example": "Omar Jahandar",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new name of the user.",
                "childParamsGroups": []
              },
              "email": {
                "description": "<p>The publicly visible email address of the user.</p>",
                "type": "string",
                "example": "omar@example.com",
                "name": "email",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The publicly visible email address of the user.",
                "childParamsGroups": []
              },
              "blog": {
                "description": "<p>The new blog URL of the user.</p>",
                "type": "string",
                "example": "blog.example.com",
                "name": "blog",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new blog URL of the user.",
                "childParamsGroups": []
              },
              "twitter_username": {
                "description": "<p>The new Twitter username of the user.</p>",
                "type": "string or nullable",
                "example": "therealomarj",
                "nullable": true,
                "name": "twitter_username",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new Twitter username of the user.",
                "childParamsGroups": []
              },
              "company": {
                "description": "<p>The new company of the user.</p>",
                "type": "string",
                "example": "Acme corporation",
                "name": "company",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new company of the user.",
                "childParamsGroups": []
              },
              "location": {
                "description": "<p>The new location of the user.</p>",
                "type": "string",
                "example": "Berlin, Germany",
                "name": "location",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new location of the user.",
                "childParamsGroups": []
              },
              "hireable": {
                "description": "<p>The new hiring availability of the user.</p>",
                "type": "boolean",
                "name": "hireable",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "The new hiring availability of the user.",
                "childParamsGroups": []
              },
              "bio": {
                "description": "<p>The new short biography of the user.</p>",
                "type": "string",
                "name": "bio",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The new short biography of the user.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": null
    },
    "slug": "update-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p><strong>Note:</strong> If your email is set to private and you send an <code>email</code> parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.</p>",
    "bodyParameters": [
      {
        "description": "<p>The new name of the user.</p>",
        "type": "string",
        "example": "Omar Jahandar",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new name of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The publicly visible email address of the user.</p>",
        "type": "string",
        "example": "omar@example.com",
        "name": "email",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The publicly visible email address of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new blog URL of the user.</p>",
        "type": "string",
        "example": "blog.example.com",
        "name": "blog",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new blog URL of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new Twitter username of the user.</p>",
        "type": "string or nullable",
        "example": "therealomarj",
        "nullable": true,
        "name": "twitter_username",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new Twitter username of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new company of the user.</p>",
        "type": "string",
        "example": "Acme corporation",
        "name": "company",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new company of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new location of the user.</p>",
        "type": "string",
        "example": "Berlin, Germany",
        "name": "location",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new location of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new hiring availability of the user.</p>",
        "type": "boolean",
        "name": "hireable",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "The new hiring availability of the user.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The new short biography of the user.</p>",
        "type": "string",
        "name": "bio",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The new short biography of the user.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n  <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n  <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n  <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n  <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n  <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n  <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n  <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n  <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n  <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n  <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n  <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"monalisa octocat\"</span>,\n  <span class=\"hljs-attr\">\"company\"</span>: <span class=\"hljs-string\">\"GitHub\"</span>,\n  <span class=\"hljs-attr\">\"blog\"</span>: <span class=\"hljs-string\">\"https://github.com/blog\"</span>,\n  <span class=\"hljs-attr\">\"location\"</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n  <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n  <span class=\"hljs-attr\">\"hireable\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"bio\"</span>: <span class=\"hljs-string\">\"There once was...\"</span>,\n  <span class=\"hljs-attr\">\"public_repos\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"public_gists\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"followers\"</span>: <span class=\"hljs-number\">20</span>,\n  <span class=\"hljs-attr\">\"following\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2008-01-14T04:33:35Z\"</span>,\n  <span class=\"hljs-attr\">\"private_gists\"</span>: <span class=\"hljs-number\">81</span>,\n  <span class=\"hljs-attr\">\"total_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"owned_private_repos\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-attr\">\"disk_usage\"</span>: <span class=\"hljs-number\">10000</span>,\n  <span class=\"hljs-attr\">\"collaborators\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-attr\">\"two_factor_authentication\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"plan\"</span>: {\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Medium\"</span>,\n    <span class=\"hljs-attr\">\"space\"</span>: <span class=\"hljs-number\">400</span>,\n    <span class=\"hljs-attr\">\"private_repos\"</span>: <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-attr\">\"collaborators\"</span>: <span class=\"hljs-number\">0</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/emails",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/emails')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/emails'</span>)\n</code></pre>"
      }
    ],
    "summary": "List email addresses for the authenticated user",
    "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-emails-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-email-addresses-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "emails"
    },
    "slug": "list-email-addresses-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "emails",
    "subcategoryLabel": "Emails",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the <code>user:email</code> scope.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/user/emails",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /user/emails')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /user/emails'</span>)\n</code></pre>"
      }
    ],
    "summary": "Add an email address for the authenticated user",
    "description": "This endpoint is accessible with the `user` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/add-email-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#add-an-email-address-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "emails": {
                    "description": "<p><strong>Required</strong>. Adds one or more email addresses to your GitHub account. Must contain at least one email address. <strong>Note:</strong> Alternatively, you can pass a single email address or an <code>array</code> of emails addresses directly, but we recommend that you pass an object using the <code>emails</code> key.</p>",
                    "type": "array of strings",
                    "items": {
                      "type": "string",
                      "example": "username@example.com",
                      "minItems": 1
                    },
                    "example": [],
                    "name": "emails",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
                    "childParamsGroups": []
                  }
                },
                "required": [
                  "emails"
                ],
                "example": {
                  "emails": [
                    "octocat@github.com",
                    "mona@github.com"
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "username@example.com",
                  "minItems": 1
                }
              },
              {
                "type": "string"
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "emails"
    },
    "slug": "add-an-email-address-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "emails",
    "subcategoryLabel": "Emails",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>This endpoint is accessible with the <code>user</code> scope.</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. Adds one or more email addresses to your GitHub account. Must contain at least one email address. <strong>Note:</strong> Alternatively, you can pass a single email address or an <code>array</code> of emails addresses directly, but we recommend that you pass an object using the <code>emails</code> key.</p>",
        "type": "array of strings",
        "items": {
          "type": "string",
          "example": "username@example.com",
          "minItems": 1
        },
        "example": [],
        "name": "emails",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@octocat.org\"</span>,\n    <span class=\"hljs-attr\">\"primary\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-string\">\"public\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"octocat@github.com\"</span>,\n    <span class=\"hljs-attr\">\"primary\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-literal\">null</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"mona@github.com\"</span>,\n    <span class=\"hljs-attr\">\"primary\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"visibility\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n]\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/user/emails",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/emails</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/emails')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/emails'</span>)\n</code></pre>"
      }
    ],
    "summary": "Delete an email address for the authenticated user",
    "description": "This endpoint is accessible with the `user` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/delete-email-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-an-email-address-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "description": "Deletes one or more email addresses from your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
                "properties": {
                  "emails": {
                    "description": "<p><strong>Required</strong>. Email addresses associated with the GitHub user account.</p>",
                    "type": "array of strings",
                    "items": {
                      "type": "string",
                      "example": "username@example.com",
                      "minItems": 1
                    },
                    "name": "emails",
                    "in": "body",
                    "rawType": "array",
                    "rawDescription": "Email addresses associated with the GitHub user account.",
                    "childParamsGroups": []
                  }
                },
                "example": {
                  "emails": [
                    "octocat@github.com",
                    "mona@github.com"
                  ]
                },
                "required": [
                  "emails"
                ]
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "username@example.com",
                  "minItems": 1
                }
              },
              {
                "type": "string"
              }
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "emails"
    },
    "slug": "delete-an-email-address-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "emails",
    "subcategoryLabel": "Emails",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "descriptionHTML": "<p>This endpoint is accessible with the <code>user</code> scope.</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. Email addresses associated with the GitHub user account.</p>",
        "type": "array of strings",
        "items": {
          "type": "string",
          "example": "username@example.com",
          "minItems": 1
        },
        "name": "emails",
        "in": "body",
        "rawType": "array",
        "rawDescription": "Email addresses associated with the GitHub user account.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/followers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/followers",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/followers</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/followers')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/followers'</span>)\n</code></pre>"
      }
    ],
    "summary": "List followers of the authenticated user",
    "description": "Lists the people following the authenticated user.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-followers-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-followers-of-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "list-followers-of-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people following the authenticated user.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/following",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/following')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/following'</span>)\n</code></pre>"
      }
    ],
    "summary": "List the people the authenticated user follows",
    "description": "Lists the people who the authenticated user follows.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-followed-by-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-the-people-the-authenticated-user-follows"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "list-the-people-the-authenticated-user-follows",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people who the authenticated user follows.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/following/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/following/{username}', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/following/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a person is followed by the authenticated user",
    "description": "",
    "tags": [
      "users"
    ],
    "operationId": "users/check-person-is-followed-by-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "check-if-a-person-is-followed-by-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "if the person is followed by the authenticated user"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "if the person is not followed by the authenticated user"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/user/following/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /user/following/{username}', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /user/following/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Follow a user",
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/follow",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#follow-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "follow-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>\n<p>Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the <code>user:follow</code> scope.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/user/following/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/following/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/following/{username}', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/following/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Unfollow a user",
    "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/unfollow",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#unfollow-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "unfollow-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the <code>user:follow</code> scope.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/gpg_keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/gpg_keys')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/gpg_keys'</span>)\n</code></pre>"
      }
    ],
    "summary": "List GPG keys for the authenticated user",
    "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/list-gpg-keys-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-gpg-keys-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "gpg-keys"
    },
    "slug": "list-gpg-keys-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "gpg-keys",
    "subcategoryLabel": "Gpg keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>read:gpg_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/user/gpg_keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys \\\n  -d '{\"armored_public_key\":\"armored_public_key\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys \\\n  -d '{\"armored_public_key\":\"armored_public_key\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /user/gpg_keys', {\n  armored_public_key: 'armored_public_key'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /user/gpg_keys'</span>, {\n  <span class=\"hljs-attr\">armored_public_key</span>: <span class=\"hljs-string\">'armored_public_key'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a GPG key for the authenticated user",
    "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "users/create-gpg-key-for-authenticated",
    "tags": [
      "users"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#create-a-gpg-key-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "armored_public_key": {
                "description": "<p><strong>Required</strong>. A GPG key in ASCII-armored format.</p>",
                "type": "string",
                "name": "armored_public_key",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A GPG key in ASCII-armored format.",
                "childParamsGroups": []
              }
            },
            "type": "object",
            "required": [
              "armored_public_key"
            ]
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "gpg-keys"
    },
    "slug": "create-a-gpg-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "gpg-keys",
    "subcategoryLabel": "Gpg keys",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least <code>write:gpg_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. A GPG key in ASCII-armored format.</p>",
        "type": "string",
        "name": "armored_public_key",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A GPG key in ASCII-armored format.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">\"primary_key_id\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"key_id\"</span>: <span class=\"hljs-string\">\"3262EFF25BA0D270\"</span>,\n  <span class=\"hljs-attr\">\"public_key\"</span>: <span class=\"hljs-string\">\"xsBNBFayYZ...\"</span>,\n  <span class=\"hljs-attr\">\"emails\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"mastahyeti@users.noreply.github.com\"</span>,\n      <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"subkeys\"</span>: [\n    {\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">4</span>,\n      <span class=\"hljs-attr\">\"primary_key_id\"</span>: <span class=\"hljs-number\">3</span>,\n      <span class=\"hljs-attr\">\"key_id\"</span>: <span class=\"hljs-string\">\"4A595D4C72EE49C7\"</span>,\n      <span class=\"hljs-attr\">\"public_key\"</span>: <span class=\"hljs-string\">\"zsBNBFayYZ...\"</span>,\n      <span class=\"hljs-attr\">\"emails\"</span>: [],\n      <span class=\"hljs-attr\">\"subkeys\"</span>: [],\n      <span class=\"hljs-attr\">\"can_sign\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"can_encrypt_comms\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"can_encrypt_storage\"</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">\"can_certify\"</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-03-24T11:31:04-06:00\"</span>,\n      <span class=\"hljs-attr\">\"expires_at\"</span>: <span class=\"hljs-string\">\"2016-03-24T11:31:04-07:00\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"can_sign\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"can_encrypt_comms\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"can_encrypt_storage\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"can_certify\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2016-03-24T11:31:04-06:00\"</span>,\n  <span class=\"hljs-attr\">\"expires_at\"</span>: <span class=\"hljs-string\">\"2016-03-24T11:31:04-07:00\"</span>,\n  <span class=\"hljs-attr\">\"raw_key\"</span>: <span class=\"hljs-string\">\"\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v2\\\\n\\\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\\\nIts/HFYRLiFgDLmTlxo=\\\\n=+OzK\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\"\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/gpg_keys/{gpg_key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gpg_key_id",
        "description": "gpg_key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>gpg_key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/gpg_keys/{gpg_key_id}', {\n  gpg_key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/gpg_keys/{gpg_key_id}'</span>, {\n  <span class=\"hljs-attr\">gpg_key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a GPG key for the authenticated user",
    "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/get-gpg-key-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-gpg-key-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "gpg-keys"
    },
    "slug": "get-a-gpg-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "gpg-keys",
    "subcategoryLabel": "Gpg keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>read:gpg_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/user/gpg_keys/{gpg_key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "gpg_key_id",
        "description": "gpg_key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>gpg_key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/gpg_keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/gpg_keys/{gpg_key_id}', {\n  gpg_key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/gpg_keys/{gpg_key_id}'</span>, {\n  <span class=\"hljs-attr\">gpg_key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a GPG key for the authenticated user",
    "description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/delete-gpg-key-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "gpg-keys"
    },
    "slug": "delete-a-gpg-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "gpg-keys",
    "subcategoryLabel": "Gpg keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>admin:gpg_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/installations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/installations', {\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/installations'</span>, {\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List app installations accessible to the user access token",
    "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/list-installations-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "list-app-installations-accessible-to-the-user-access-token",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "You can find the permissions for the installation under the `permissions` key."
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists installations of your GitHub App that the authenticated user has explicit permission (<code>:read</code>, <code>:write</code>, or <code>:admin</code>) to access.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site\">user-to-server OAuth access token</a>, created for a user who has authorized your GitHub App, to access this endpoint.</p>\n<p>The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.</p>\n<p>You can find the permissions for the installation under the <code>permissions</code> key.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/installations/{installation_id}/repositories",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/installations/{installation_id}/repositories', {\n  installation_id: 42,\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/installations/{installation_id}/repositories'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List repositories accessible to the user access token",
    "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/list-installation-repos-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-repositories-accessible-to-the-user-access-token"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        },
        {
          "required": false,
          "name": "mercy",
          "note": "The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.mercy-preview+json\n```",
          "html": "<p>The <code>topics</code> property for repositories on GitHub is currently available for developers to preview. To view the <code>topics</code> property in calls that return repository results, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.mercy-preview+json</code></pre>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "list-repositories-accessible-to-the-user-access-token",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "The access the user has to each repository is included in the hash under the `permissions` key."
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List repositories that the authenticated user has explicit permission (<code>:read</code>, <code>:write</code>, or <code>:admin</code>) to access for an installation.</p>\n<p>The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site\">user-to-server OAuth access token</a>, created for a user who has authorized your GitHub App, to access this endpoint.</p>\n<p>The access the user has to each repository is included in the hash under the <code>permissions</code> key.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/user/installations/{installation_id}/repositories/{repository_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      },
      {
        "name": "repository_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /user/installations/{installation_id}/repositories/{repository_id}', {\n  installation_id: 42,\n  repository_id: 42,\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /user/installations/{installation_id}/repositories/{repository_id}'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">repository_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Add a repository to an app installation",
    "description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/add-repo-to-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#add-a-repository-to-an-app-installation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "add-a-repository-to-an-app-installation",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Add a single repository to an installation. The authenticated user must have admin access to the repository.</p>\n<p>You must use a personal access token (which you can create via the <a href=\"https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token\">command line</a> or <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a>) to access this endpoint.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/user/installations/{installation_id}/repositories/{repository_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>installation_id parameter</p>"
      },
      {
        "name": "repository_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/installations/42/repositories/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/installations/{installation_id}/repositories/{repository_id}', {\n  installation_id: 42,\n  repository_id: 42,\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/installations/{installation_id}/repositories/{repository_id}'</span>, {\n  <span class=\"hljs-attr\">installation_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">repository_id</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Remove a repository from an app installation",
    "description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/remove-repo-from-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#remove-a-repository-from-an-app-installation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps",
      "subcategory": "installations"
    },
    "slug": "remove-a-repository-from-an-app-installation",
    "category": "apps",
    "categoryLabel": "Apps",
    "subcategory": "installations",
    "subcategoryLabel": "Installations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Remove a single repository from an installation. The authenticated user must have admin access to the repository.</p>\n<p>You must use a personal access token (which you can create via the <a href=\"https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token\">command line</a> or <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication\">Basic Authentication</a>) to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/issues",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ],
          "default": "assigned"
        },
        "descriptionHTML": "<p>Indicates which sorts of issues to return. Can be one of:<br>\n* <code>assigned</code>: Issues assigned to you<br>\n* <code>created</code>: Issues created by you<br>\n* <code>mentioned</code>: Issues mentioning you<br>\n* <code>subscribed</code>: Issues you're subscribed to updates for<br>\n* <code>all</code>: All issues the authenticated user can see, regardless of participation or creation</p>"
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the issues to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>A list of comma separated label names. Example: <code>bug,ui,@high</code></p>"
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>What to sort results by. Can be either <code>created</code>, <code>updated</code>, <code>comments</code>.</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/issues",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/issues</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/issues')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/issues'</span>)\n</code></pre>"
      }
    ],
    "summary": "List user account issues assigned to the authenticated user",
    "description": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "tags": [
      "issues"
    ],
    "operationId": "issues/list-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-user-account-issues-assigned-to-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": false,
          "name": "machine-man",
          "note": "If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with\tinformation about the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```",
          "html": "<p>If an issue event is created via a GitHub App, the response will include the <code>performed_via_github_app</code> object with\tinformation about the GitHub App. For more information, see the <a href=\"https://developer.github.com/changes/2016-09-14-Integrations-Early-Access\">related blog\tpost</a>.\nTo receive the <code>performed_via_github_app</code> object in the response, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.machine-man-preview</code></pre>"
        }
      ],
      "category": "issues"
    },
    "slug": "list-user-account-issues-assigned-to-the-authenticated-user",
    "category": "issues",
    "categoryLabel": "Issues",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List issues across owned and member repositories assigned to the authenticated user.</p>\n<p><strong>Note</strong>: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe <code>pull_request</code> key. Be aware that the <code>id</code> of a pull request returned from \"Issues\" endpoints will be an <em>issue id</em>. To find out the pull\nrequest id, use the \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests\">List pull requests</a>\" endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/keys')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/keys'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public SSH keys for the authenticated user",
    "description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/list-public-ssh-keys-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "keys"
    },
    "slug": "list-public-ssh-keys-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>read:public_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/user/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys \\\n  -d '{\"key\":\"key\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys \\\n  -d '{\"key\":\"key\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /user/keys', {\n  key: 'key'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /user/keys'</span>, {\n  <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">'key'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a public SSH key for the authenticated user",
    "description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "operationId": "users/create-public-ssh-key-for-authenticated",
    "tags": [
      "users"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "title": {
                "description": "<p>A descriptive name for the new key.</p>",
                "type": "string",
                "example": "Personal MacBook Air",
                "name": "title",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A descriptive name for the new key.",
                "childParamsGroups": []
              },
              "key": {
                "description": "<p><strong>Required</strong>. The public SSH key to add to your GitHub account.</p>",
                "type": "string",
                "pattern": "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) ",
                "name": "key",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The public SSH key to add to your GitHub account.",
                "childParamsGroups": []
              }
            },
            "required": [
              "key"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "keys"
    },
    "slug": "create-a-public-ssh-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least <code>write:public_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>",
    "bodyParameters": [
      {
        "description": "<p>A descriptive name for the new key.</p>",
        "type": "string",
        "example": "Personal MacBook Air",
        "name": "title",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A descriptive name for the new key.",
        "childParamsGroups": []
      },
      {
        "description": "<p><strong>Required</strong>. The public SSH key to add to your GitHub account.</p>",
        "type": "string",
        "pattern": "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) ",
        "name": "key",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The public SSH key to add to your GitHub account.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/user/keys/2\"</span>,\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"ssh-rsa AAAAB3NzaC1yc2EAAA\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2020-06-11T21:31:57Z\"</span>,\n  <span class=\"hljs-attr\">\"verified\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"read_only\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/keys/{key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/keys/{key_id}', {\n  key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/keys/{key_id}'</span>, {\n  <span class=\"hljs-attr\">key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a public SSH key for the authenticated user",
    "description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/get-public-ssh-key-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "keys"
    },
    "slug": "get-a-public-ssh-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>read:public_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/user/keys/{key_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>key_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/keys/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/keys/{key_id}', {\n  key_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/keys/{key_id}'</span>, {\n  <span class=\"hljs-attr\">key_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Delete a public SSH key for the authenticated user",
    "description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "tags": [
      "users"
    ],
    "operationId": "users/delete-public-ssh-key-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "keys"
    },
    "slug": "delete-a-public-ssh-key-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least <code>admin:public_key</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/memberships/orgs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "state",
        "description": "Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "active",
            "pending"
          ]
        },
        "descriptionHTML": "<p>Indicates the state of the memberships to return. Can be either <code>active</code> or <code>pending</code>. If not specified, the API returns both active and pending memberships.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/memberships/orgs')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/memberships/orgs'</span>)\n</code></pre>"
      }
    ],
    "summary": "List organization memberships for the authenticated user",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-memberships-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "list-organization-memberships-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/user/memberships/orgs/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs/ORG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs/ORG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/memberships/orgs/{org}', {\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/memberships/orgs/{org}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get an organization membership for the authenticated user",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/get-membership-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "get-an-organization-membership-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "patch",
    "requestPath": "/user/memberships/orgs/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs/ORG \\\n  -d '{\"state\":\"state\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/memberships/orgs/ORG \\\n  -d '{\"state\":\"state\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /user/memberships/orgs/{org}', {\n  org: 'org',\n  state: 'state'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /user/memberships/orgs/{org}'</span>, {\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>,\n  <span class=\"hljs-attr\">state</span>: <span class=\"hljs-string\">'state'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Update an organization membership for the authenticated user",
    "description": "",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/update-membership-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "description": "<p><strong>Required</strong>. The state that the membership should be in. Only <code>\"active\"</code> will be accepted.</p>",
                "enum": [
                  "active"
                ],
                "name": "state",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The state that the membership should be in. Only `\"active\"` will be accepted.",
                "childParamsGroups": []
              }
            },
            "required": [
              "state"
            ]
          },
          "example": {
            "state": "active"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": "members"
    },
    "slug": "update-an-organization-membership-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "subcategory": "members",
    "subcategoryLabel": "Members",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p><strong>Required</strong>. The state that the membership should be in. Only <code>\"active\"</code> will be accepted.</p>",
        "enum": [
          "active"
        ],
        "name": "state",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The state that the membership should be in. Only `\"active\"` will be accepted.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat/memberships/defunkt\"</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"active\"</span>,\n  <span class=\"hljs-attr\">\"role\"</span>: <span class=\"hljs-string\">\"admin\"</span>,\n  <span class=\"hljs-attr\">\"organization_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/octocat\"</span>,\n  <span class=\"hljs-attr\">\"organization\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"github\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEyOk9yZ2FuaXphdGlvbjE=\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/events\"</span>,\n    <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/hooks\"</span>,\n    <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/issues\"</span>,\n    <span class=\"hljs-attr\">\"members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"public_members_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/orgs/github/public_members{/member}\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"A great organization\"</span>\n  },\n  <span class=\"hljs-attr\">\"user\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  }\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/orgs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/orgs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/orgs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/orgs')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/orgs'</span>)\n</code></pre>"
      }
    ],
    "summary": "List organizations for the authenticated user",
    "description": "List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "orgs",
      "subcategory": null
    },
    "slug": "list-organizations-for-the-authenticated-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List organizations for the authenticated user.</p>\n<p><strong>OAuth scope requirements</strong></p>\n<p>This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with <code>read:org</code> scope, you can publicize your organization membership with <code>user</code> scope, etc.). Therefore, this API requires at least <code>user</code> or <code>read:org</code> scope. OAuth requests with insufficient scope receive a <code>403 Forbidden</code> response.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/user/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/projects \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/user/projects \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /user/projects', {\n  name: 'name',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /user/projects'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Create a user project",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/create-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-user-project"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "name": {
                "description": "<p><strong>Required</strong>. Name of the project</p>",
                "example": "Week One Sprint",
                "type": "string",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Name of the project",
                "childParamsGroups": []
              },
              "body": {
                "description": "<p>Body of the project</p>",
                "example": "This project represents the sprint of the first week in January",
                "type": "string or nullable",
                "nullable": true,
                "name": "body",
                "in": "body",
                "rawType": "string",
                "rawDescription": "Body of the project",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "create-a-user-project",
    "category": "projects",
    "categoryLabel": "Projects",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. Name of the project</p>",
        "example": "Week One Sprint",
        "type": "string",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Name of the project",
        "childParamsGroups": []
      },
      {
        "description": "<p>Body of the project</p>",
        "example": "This project represents the sprint of the first week in January",
        "type": "string or nullable",
        "nullable": true,
        "name": "body",
        "in": "body",
        "rawType": "string",
        "rawDescription": "Body of the project",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"owner_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002603\"</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/users/octocat/projects/1\"</span>,\n  <span class=\"hljs-attr\">\"columns_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/projects/1002603/columns\"</span>,\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1002603</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6UHJvamVjdDEwMDI2MDM=\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"My Projects\"</span>,\n  <span class=\"hljs-attr\">\"body\"</span>: <span class=\"hljs-string\">\"A board to manage my personal projects.\"</span>,\n  <span class=\"hljs-attr\">\"number\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"state\"</span>: <span class=\"hljs-string\">\"open\"</span>,\n  <span class=\"hljs-attr\">\"creator\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-04-10T20:09:31Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2014-03-03T18:58:10Z\"</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/public_emails",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/public_emails",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/public_emails</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/public_emails')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/public_emails'</span>)\n</code></pre>"
      }
    ],
    "summary": "List public email addresses for the authenticated user",
    "description": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-public-emails-for-authenticated",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-email-addresses-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": "emails"
    },
    "slug": "list-public-email-addresses-for-the-authenticated-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "emails",
    "subcategoryLabel": "Emails",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists your publicly visible email address, which you can set with the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user\">Set primary email visibility for the authenticated user</a> endpoint. This endpoint is accessible with the <code>user:email</code> scope.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "visibility",
        "description": "Can be one of `all`, `public`, or `private`. Note: For GitHub AE, can be one of `all`, `internal`, or `private`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "public",
            "private"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Can be one of <code>all</code>, <code>public</code>, or <code>private</code>. Note: For GitHub AE, can be one of <code>all</code>, <code>internal</code>, or <code>private</code>.</p>"
      },
      {
        "name": "affiliation",
        "description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "owner,collaborator,organization_member"
        },
        "descriptionHTML": "<p>Comma-separated list of values. Can include:<br>\n* <code>owner</code>: Repositories that are owned by the authenticated user.<br>\n* <code>collaborator</code>: Repositories that the user has been added to as a collaborator.<br>\n* <code>organization_member</code>: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.</p>"
      },
      {
        "name": "type",
        "description": "Can be one of `all`, `owner`, `public`, `private`, `member`. Note: For GitHub AE, can be one of `all`, `owner`, `internal`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ],
          "default": "all"
        },
        "descriptionHTML": "<p>Can be one of <code>all</code>, <code>owner</code>, <code>public</code>, <code>private</code>, <code>member</code>. Note: For GitHub AE, can be one of <code>all</code>, <code>owner</code>, <code>internal</code>, <code>private</code>, <code>member</code>. Default: <code>all</code>  </p>\n<p>Will cause a <code>422</code> error if used in the same request as <strong>visibility</strong> or <strong>affiliation</strong>. Will cause a <code>422</code> error if used in the same request as <strong>visibility</strong> or <strong>affiliation</strong>.</p>"
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "default": "full_name"
        },
        "descriptionHTML": "<p>Can be one of <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>.</p>"
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Can be one of <code>asc</code> or <code>desc</code>. Default: <code>asc</code> when using <code>full_name</code>, otherwise <code>desc</code></p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated before the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repos",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repos</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/repos')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/repos'</span>)\n</code></pre>"
      }
    ],
    "summary": "List repositories for the authenticated user",
    "description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repositories-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repositories-for-the-authenticated-user",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories that the authenticated user has explicit permission (<code>:read</code>, <code>:write</code>, or <code>:admin</code>) to access.</p>\n<p>The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.</p>"
  },
  {
    "verb": "post",
    "requestPath": "/user/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repos \\\n  -d '{\"name\":\"name\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X POST \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repos \\\n  -d '{\"name\":\"name\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('POST /user/repos', {\n  name: 'name'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'POST /user/repos'</span>, {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Create a repository for the authenticated user",
    "description": "Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/create-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-for-the-authenticated-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "name": {
                "description": "<p><strong>Required</strong>. The name of the repository.</p>",
                "type": "string",
                "example": "Team Environment",
                "name": "name",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The name of the repository.",
                "childParamsGroups": []
              },
              "description": {
                "description": "<p>A short description of the repository.</p>",
                "type": "string",
                "name": "description",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A short description of the repository.",
                "childParamsGroups": []
              },
              "homepage": {
                "description": "<p>A URL with more information about the repository.</p>",
                "type": "string",
                "name": "homepage",
                "in": "body",
                "rawType": "string",
                "rawDescription": "A URL with more information about the repository.",
                "childParamsGroups": []
              },
              "private": {
                "description": "<p>Whether the repository is private.</p>",
                "default": false,
                "type": "boolean",
                "name": "private",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether the repository is private.",
                "childParamsGroups": []
              },
              "has_issues": {
                "description": "<p>Whether issues are enabled.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "has_issues",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether issues are enabled.",
                "childParamsGroups": []
              },
              "has_projects": {
                "description": "<p>Whether projects are enabled.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "has_projects",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether projects are enabled.",
                "childParamsGroups": []
              },
              "has_wiki": {
                "description": "<p>Whether the wiki is enabled.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "has_wiki",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether the wiki is enabled.",
                "childParamsGroups": []
              },
              "team_id": {
                "description": "<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>",
                "type": "integer",
                "name": "team_id",
                "in": "body",
                "rawType": "integer",
                "rawDescription": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
                "childParamsGroups": []
              },
              "auto_init": {
                "description": "<p>Whether the repository is initialized with a minimal README.</p>",
                "default": false,
                "type": "boolean",
                "name": "auto_init",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether the repository is initialized with a minimal README.",
                "childParamsGroups": []
              },
              "gitignore_template": {
                "description": "<p>The desired language or platform to apply to the .gitignore.</p>",
                "example": "Haskell",
                "type": "string",
                "name": "gitignore_template",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The desired language or platform to apply to the .gitignore.",
                "childParamsGroups": []
              },
              "license_template": {
                "description": "<p>The license keyword of the open source license for this repository.</p>",
                "example": "mit",
                "type": "string",
                "name": "license_template",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The license keyword of the open source license for this repository.",
                "childParamsGroups": []
              },
              "allow_squash_merge": {
                "description": "<p>Whether to allow squash merges for pull requests.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "allow_squash_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether to allow squash merges for pull requests.",
                "childParamsGroups": []
              },
              "allow_merge_commit": {
                "description": "<p>Whether to allow merge commits for pull requests.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "allow_merge_commit",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether to allow merge commits for pull requests.",
                "childParamsGroups": []
              },
              "allow_rebase_merge": {
                "description": "<p>Whether to allow rebase merges for pull requests.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "allow_rebase_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether to allow rebase merges for pull requests.",
                "childParamsGroups": []
              },
              "delete_branch_on_merge": {
                "description": "<p>Whether to delete head branches when pull requests are merged</p>",
                "default": false,
                "type": "boolean",
                "example": false,
                "name": "delete_branch_on_merge",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether to delete head branches when pull requests are merged",
                "childParamsGroups": []
              },
              "has_downloads": {
                "description": "<p>Whether downloads are enabled.</p>",
                "default": true,
                "type": "boolean",
                "example": true,
                "name": "has_downloads",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether downloads are enabled.",
                "childParamsGroups": []
              },
              "is_template": {
                "description": "<p>Whether this repository acts as a template that can be used to generate new repositories.</p>",
                "default": false,
                "type": "boolean",
                "example": true,
                "name": "is_template",
                "in": "body",
                "rawType": "boolean",
                "rawDescription": "Whether this repository acts as a template that can be used to generate new repositories.",
                "childParamsGroups": []
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        },
        {
          "required": false,
          "name": "baptiste",
          "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```",
          "html": "<p>The <code>is_template</code> and <code>template_repository</code> keys are currently available for developer to preview. See <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template\">Create a repository using a template</a> to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.baptiste-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "create-a-repository-for-the-authenticated-user",
    "category": "repos",
    "categoryLabel": "Repos",
    "contentType": "application/json",
    "notes": [],
    "descriptionHTML": "<p>Creates a new repository for the authenticated user.</p>\n<p><strong>OAuth scope requirements</strong></p>\n<p>When using <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">OAuth</a>, authorizations must include:</p>\n<ul>\n<li><code>public_repo</code> scope or <code>repo</code> scope to create a public repository. Note: For GitHub AE, use <code>repo</code> scope to create an internal repository.</li>\n<li><code>repo</code> scope to create a private repository.</li>\n</ul>",
    "bodyParameters": [
      {
        "description": "<p><strong>Required</strong>. The name of the repository.</p>",
        "type": "string",
        "example": "Team Environment",
        "name": "name",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The name of the repository.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A short description of the repository.</p>",
        "type": "string",
        "name": "description",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A short description of the repository.",
        "childParamsGroups": []
      },
      {
        "description": "<p>A URL with more information about the repository.</p>",
        "type": "string",
        "name": "homepage",
        "in": "body",
        "rawType": "string",
        "rawDescription": "A URL with more information about the repository.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether the repository is private.</p>",
        "default": false,
        "type": "boolean",
        "name": "private",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether the repository is private.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether issues are enabled.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "has_issues",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether issues are enabled.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether projects are enabled.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "has_projects",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether projects are enabled.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether the wiki is enabled.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "has_wiki",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether the wiki is enabled.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>",
        "type": "integer",
        "name": "team_id",
        "in": "body",
        "rawType": "integer",
        "rawDescription": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether the repository is initialized with a minimal README.</p>",
        "default": false,
        "type": "boolean",
        "name": "auto_init",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether the repository is initialized with a minimal README.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The desired language or platform to apply to the .gitignore.</p>",
        "example": "Haskell",
        "type": "string",
        "name": "gitignore_template",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The desired language or platform to apply to the .gitignore.",
        "childParamsGroups": []
      },
      {
        "description": "<p>The license keyword of the open source license for this repository.</p>",
        "example": "mit",
        "type": "string",
        "name": "license_template",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The license keyword of the open source license for this repository.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether to allow squash merges for pull requests.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "allow_squash_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether to allow squash merges for pull requests.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether to allow merge commits for pull requests.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "allow_merge_commit",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether to allow merge commits for pull requests.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether to allow rebase merges for pull requests.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "allow_rebase_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether to allow rebase merges for pull requests.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether to delete head branches when pull requests are merged</p>",
        "default": false,
        "type": "boolean",
        "example": false,
        "name": "delete_branch_on_merge",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether to delete head branches when pull requests are merged",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether downloads are enabled.</p>",
        "default": true,
        "type": "boolean",
        "example": true,
        "name": "has_downloads",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether downloads are enabled.",
        "childParamsGroups": []
      },
      {
        "description": "<p>Whether this repository acts as a template that can be used to generate new repositories.</p>",
        "default": false,
        "type": "boolean",
        "example": true,
        "name": "is_template",
        "in": "body",
        "rawType": "boolean",
        "rawDescription": "Whether this repository acts as a template that can be used to generate new repositories.",
        "childParamsGroups": []
      }
    ],
    "responses": [
      {
        "httpStatusCode": "201",
        "httpStatusMessage": "Created",
        "description": "Response",
        "payload": "<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1296269</span>,\n  <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"</span>,\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"full_name\"</span>: <span class=\"hljs-string\">\"octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"owner\"</span>: {\n    <span class=\"hljs-attr\">\"login\"</span>: <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDQ6VXNlcjE=\"</span>,\n    <span class=\"hljs-attr\">\"avatar_url\"</span>: <span class=\"hljs-string\">\"https://github.com/images/error/octocat_happy.gif\"</span>,\n    <span class=\"hljs-attr\">\"gravatar_id\"</span>: <span class=\"hljs-string\">\"\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat\"</span>,\n    <span class=\"hljs-attr\">\"followers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/followers\"</span>,\n    <span class=\"hljs-attr\">\"following_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/following{/other_user}\"</span>,\n    <span class=\"hljs-attr\">\"gists_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/gists{/gist_id}\"</span>,\n    <span class=\"hljs-attr\">\"starred_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/starred{/owner}{/repo}\"</span>,\n    <span class=\"hljs-attr\">\"subscriptions_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/subscriptions\"</span>,\n    <span class=\"hljs-attr\">\"organizations_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/orgs\"</span>,\n    <span class=\"hljs-attr\">\"repos_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/repos\"</span>,\n    <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/events{/privacy}\"</span>,\n    <span class=\"hljs-attr\">\"received_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/users/octocat/received_events\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"User\"</span>,\n    <span class=\"hljs-attr\">\"site_admin\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"This your first repo!\"</span>,\n  <span class=\"hljs-attr\">\"fork\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"archive_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"</span>,\n  <span class=\"hljs-attr\">\"assignees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\"</span>,\n  <span class=\"hljs-attr\">\"blobs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"branches_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\"</span>,\n  <span class=\"hljs-attr\">\"collaborators_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"</span>,\n  <span class=\"hljs-attr\">\"comments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"compare_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"</span>,\n  <span class=\"hljs-attr\">\"contents_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\"</span>,\n  <span class=\"hljs-attr\">\"contributors_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/contributors\"</span>,\n  <span class=\"hljs-attr\">\"deployments_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/deployments\"</span>,\n  <span class=\"hljs-attr\">\"downloads_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/downloads\"</span>,\n  <span class=\"hljs-attr\">\"events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/events\"</span>,\n  <span class=\"hljs-attr\">\"forks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/forks\"</span>,\n  <span class=\"hljs-attr\">\"git_commits_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_refs_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"git_url\"</span>: <span class=\"hljs-string\">\"git:github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"issue_comment_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issue_events_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"</span>,\n  <span class=\"hljs-attr\">\"issues_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\"</span>,\n  <span class=\"hljs-attr\">\"keys_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"</span>,\n  <span class=\"hljs-attr\">\"labels_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\"</span>,\n  <span class=\"hljs-attr\">\"languages_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/languages\"</span>,\n  <span class=\"hljs-attr\">\"merges_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/merges\"</span>,\n  <span class=\"hljs-attr\">\"milestones_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\"</span>,\n  <span class=\"hljs-attr\">\"notifications_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"</span>,\n  <span class=\"hljs-attr\">\"pulls_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\"</span>,\n  <span class=\"hljs-attr\">\"releases_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\"</span>,\n  <span class=\"hljs-attr\">\"ssh_url\"</span>: <span class=\"hljs-string\">\"git@github.com:octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"stargazers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/stargazers\"</span>,\n  <span class=\"hljs-attr\">\"statuses_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"</span>,\n  <span class=\"hljs-attr\">\"subscribers_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscribers\"</span>,\n  <span class=\"hljs-attr\">\"subscription_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/subscription\"</span>,\n  <span class=\"hljs-attr\">\"tags_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/tags\"</span>,\n  <span class=\"hljs-attr\">\"teams_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/teams\"</span>,\n  <span class=\"hljs-attr\">\"trees_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"</span>,\n  <span class=\"hljs-attr\">\"clone_url\"</span>: <span class=\"hljs-string\">\"https://github.com/octocat/Hello-World.git\"</span>,\n  <span class=\"hljs-attr\">\"mirror_url\"</span>: <span class=\"hljs-string\">\"git:git.example.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"hooks_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/repos/octocat/Hello-World/hooks\"</span>,\n  <span class=\"hljs-attr\">\"svn_url\"</span>: <span class=\"hljs-string\">\"https://svn.github.com/octocat/Hello-World\"</span>,\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>,\n  <span class=\"hljs-attr\">\"forks\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"forks_count\"</span>: <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">\"stargazers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers_count\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"watchers\"</span>: <span class=\"hljs-number\">80</span>,\n  <span class=\"hljs-attr\">\"size\"</span>: <span class=\"hljs-number\">108</span>,\n  <span class=\"hljs-attr\">\"default_branch\"</span>: <span class=\"hljs-string\">\"master\"</span>,\n  <span class=\"hljs-attr\">\"open_issues\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"open_issues_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"is_template\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: {\n    <span class=\"hljs-attr\">\"key\"</span>: <span class=\"hljs-string\">\"mit\"</span>,\n    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"MIT License\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>,\n    <span class=\"hljs-attr\">\"spdx_id\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n    <span class=\"hljs-attr\">\"node_id\"</span>: <span class=\"hljs-string\">\"MDc6TGljZW5zZW1pdA==\"</span>,\n    <span class=\"hljs-attr\">\"html_url\"</span>: <span class=\"hljs-string\">\"https://api.github.com/licenses/mit\"</span>\n  },\n  <span class=\"hljs-attr\">\"topics\"</span>: [\n    <span class=\"hljs-string\">\"octocat\"</span>,\n    <span class=\"hljs-string\">\"atom\"</span>,\n    <span class=\"hljs-string\">\"electron\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>\n  ],\n  <span class=\"hljs-attr\">\"has_issues\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_projects\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_wiki\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"has_pages\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"has_downloads\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"archived\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">\"pushed_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:06:43Z\"</span>,\n  <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:01:12Z\"</span>,\n  <span class=\"hljs-attr\">\"updated_at\"</span>: <span class=\"hljs-string\">\"2011-01-26T19:14:43Z\"</span>,\n  <span class=\"hljs-attr\">\"permissions\"</span>: {\n    <span class=\"hljs-attr\">\"admin\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"push\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">\"pull\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">\"allow_rebase_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_squash_merge\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"allow_merge_commit\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"subscribers_count\"</span>: <span class=\"hljs-number\">42</span>,\n  <span class=\"hljs-attr\">\"network_count\"</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"anonymous_access_enabled\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "400",
        "httpStatusMessage": "Bad Request",
        "description": "Bad Request"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/user/repository_invitations",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/repository_invitations')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/repository_invitations'</span>)\n</code></pre>"
      }
    ],
    "summary": "List repository invitations for the authenticated user",
    "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-invitations-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-invitations-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "list-repository-invitations-for-the-authenticated-user",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>When authenticating as a user, this endpoint will list all currently open repository invitations for that user.</p>"
  },
  {
    "verb": "patch",
    "requestPath": "/user/repository_invitations/{invitation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>invitation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PATCH \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PATCH /user/repository_invitations/{invitation_id}', {\n  invitation_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PATCH /user/repository_invitations/{invitation_id}'</span>, {\n  <span class=\"hljs-attr\">invitation_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Accept a repository invitation",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/accept-invitation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#accept-a-repository-invitation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "accept-a-repository-invitation",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "delete",
    "requestPath": "/user/repository_invitations/{invitation_id}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>invitation_id parameter</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations/42",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/repository_invitations/42</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/repository_invitations/{invitation_id}', {\n  invitation_id: 42\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/repository_invitations/{invitation_id}'</span>, {\n  <span class=\"hljs-attr\">invitation_id</span>: <span class=\"hljs-number\">42</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Decline a repository invitation",
    "description": "",
    "tags": [
      "repos"
    ],
    "operationId": "repos/decline-invitation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#decline-a-repository-invitation"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "repos",
      "subcategory": "invitations"
    },
    "slug": "decline-a-repository-invitation",
    "category": "repos",
    "categoryLabel": "Repos",
    "subcategory": "invitations",
    "subcategoryLabel": "Invitations",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "409",
        "httpStatusMessage": "Conflict",
        "description": "Conflict"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/user/starred",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>One of <code>created</code> (when the repository was starred) or <code>updated</code> (when it was last pushed to).</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/starred')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/starred'</span>)\n</code></pre>"
      }
    ],
    "summary": "List repositories starred by the authenticated user",
    "description": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-repos-starred-by-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-starred-by-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "list-repositories-starred-by-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories the authenticated user has starred.</p>\n<p>You can also find out <em>when</em> stars were created by passing the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">media type</a> via the <code>Accept</code> header:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/starred/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/starred/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/starred/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a repository is starred by the authenticated user",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/check-repo-is-starred-by-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "check-if-a-repository-is-starred-by-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response if this repository is starred by you"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Not Found if this repository is not starred by you"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "put",
    "requestPath": "/user/starred/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /user/starred/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /user/starred/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Star a repository for the authenticated user",
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "tags": [
      "activity"
    ],
    "operationId": "activity/star-repo-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#star-a-repository-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "star-a-repository-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/user/starred/{owner}/{repo}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/starred/octocat/hello-world</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /user/starred/{owner}/{repo}', {\n  owner: 'octocat',\n  repo: 'hello-world'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /user/starred/{owner}/{repo}'</span>, {\n  <span class=\"hljs-attr\">owner</span>: <span class=\"hljs-string\">'octocat'</span>,\n  <span class=\"hljs-attr\">repo</span>: <span class=\"hljs-string\">'hello-world'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Unstar a repository for the authenticated user",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/unstar-repo-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#unstar-a-repository-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "unstar-a-repository-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/user/subscriptions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/subscriptions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/subscriptions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/subscriptions')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/subscriptions'</span>)\n</code></pre>"
      }
    ],
    "summary": "List repositories watched by the authenticated user",
    "description": "Lists repositories the authenticated user is watching.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-watched-repos-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-watched-by-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "list-repositories-watched-by-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "401",
        "httpStatusMessage": "Unauthorized",
        "description": "Requires authentication"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories the authenticated user is watching.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/user/teams",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/teams",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/user/teams</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /user/teams')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /user/teams'</span>)\n</code></pre>"
      }
    ],
    "summary": "List teams for the authenticated user",
    "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/).",
    "tags": [
      "teams"
    ],
    "operationId": "teams/list-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-teams-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "teams",
      "subcategory": null
    },
    "slug": "list-teams-for-the-authenticated-user",
    "category": "teams",
    "categoryLabel": "Teams",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      },
      {
        "httpStatusCode": "403",
        "httpStatusMessage": "Forbidden",
        "description": "Forbidden"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List all of the teams across all of the organizations to which the authenticated user belongs. This method requires <code>user</code>, <code>repo</code>, or <code>read:org</code> <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\">scope</a> when authenticating via <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/\">OAuth</a>.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "since",
        "description": "A user ID. Only return users with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "descriptionHTML": "<p>A user ID. Only return users with an ID greater than this ID.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users'</span>)\n</code></pre>"
      }
    ],
    "summary": "List users",
    "description": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.",
    "tags": [
      "users"
    ],
    "operationId": "users/list",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-users"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": null
    },
    "slug": "list-users",
    "category": "users",
    "categoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "304",
        "httpStatusMessage": "Not Modified",
        "description": "Not modified"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.</p>\n<p>Note: Pagination is powered exclusively by the <code>since</code> parameter. Use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header\">Link header</a> to get the URL for the next page of users.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get a user",
    "description": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.18/rest/reference/users#emails)\".",
    "tags": [
      "users"
    ],
    "operationId": "users/get-by-username",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": null
    },
    "slug": "get-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "202",
        "httpStatusMessage": "Accepted",
        "description": "Accepted"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Provides publicly available information about someone with a GitHub account.</p>\n<p>GitHub Apps with the <code>Plan</code> user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"<a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/\">Identifying and authorizing users for GitHub Apps</a>\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"</p>\n<p>The <code>email</code> key in the following response is the publicly visible email address from your GitHub Enterprise Server <a href=\"https://github.com/settings/profile\">profile page</a>. When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for <code>email</code>, then it will have a value of <code>null</code>. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication\">Authentication</a>.</p>\n<p>The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/users#emails\">Emails API</a>\".</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/events', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/events'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List events for the authenticated user",
    "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-events-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-events-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-events-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/events/orgs/{org}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events/orgs/ORG",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events/orgs/ORG</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/events/orgs/{org}', {\n  username: 'username',\n  org: 'org'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/events/orgs/{org}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">org</span>: <span class=\"hljs-string\">'org'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organization events for the authenticated user",
    "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-org-events-for-authenticated-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-organization-events-for-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-organization-events-for-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>This is the user's organization dashboard. You must be authenticated as the user to view this.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/events/public",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events/public",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/events/public</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/events/public', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/events/public'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public events for a user",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-public-events-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-public-events-for-a-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/followers",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/followers",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/followers</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/followers', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/followers'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List followers of a user",
    "description": "Lists the people following the specified user.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-followers-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-followers-of-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "list-followers-of-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people following the specified user.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/following",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/following",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/following</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/following', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/following'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List the people a user follows",
    "description": "Lists the people who the specified user follows.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-following-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-the-people-a-user-follows"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "list-the-people-a-user-follows",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the people who the specified user follows.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/following/{target_user}",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "target_user",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/following/TARGET_USER",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/following/TARGET_USER</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/following/{target_user}', {\n  username: 'username',\n  target_user: 'target_user'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/following/{target_user}'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">target_user</span>: <span class=\"hljs-string\">'target_user'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Check if a user follows another user",
    "description": "",
    "tags": [
      "users"
    ],
    "operationId": "users/check-following-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#check-if-a-user-follows-another-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": "followers"
    },
    "slug": "check-if-a-user-follows-another-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "followers",
    "subcategoryLabel": "Followers",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "if the user follows the target user"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "if the user does not follow the target user"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/gists",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "descriptionHTML": "<p>Only show notifications updated after the given time. This is a timestamp in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format: <code>YYYY-MM-DDTHH:MM:SSZ</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/gists",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/gists</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/gists', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/gists'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List gists for a user",
    "description": "Lists public gists for the specified user:",
    "tags": [
      "gists"
    ],
    "operationId": "gists/list-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gists-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "gists",
      "subcategory": null
    },
    "slug": "list-gists-for-a-user",
    "category": "gists",
    "categoryLabel": "Gists",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists public gists for the specified user:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/gpg_keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/gpg_keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/gpg_keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/gpg_keys', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/gpg_keys'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List GPG keys for a user",
    "description": "Lists the GPG keys for a user. This information is accessible by anyone.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-gpg-keys-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-gpg-keys-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": "gpg-keys"
    },
    "slug": "list-gpg-keys-for-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "gpg-keys",
    "subcategoryLabel": "Gpg keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the GPG keys for a user. This information is accessible by anyone.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/hovercard",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "subject_type",
        "description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "organization",
            "repository",
            "issue",
            "pull_request"
          ]
        },
        "descriptionHTML": "<p>Identifies which additional information you'd like to receive about the person's hovercard. Can be <code>organization</code>, <code>repository</code>, <code>issue</code>, <code>pull_request</code>. <strong>Required</strong> when using <code>subject_id</code>.</p>"
      },
      {
        "name": "subject_id",
        "description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": "<p>Uses the ID for the <code>subject_type</code> you specified. <strong>Required</strong> when using <code>subject_type</code>.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/hovercard",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/hovercard</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/hovercard', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/hovercard'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Get contextual information for a user",
    "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:\n\n```shell\n curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n```",
    "tags": [
      "users"
    ],
    "operationId": "users/get-context-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#get-contextual-information-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "users",
      "subcategory": null
    },
    "slug": "get-contextual-information-for-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "404",
        "httpStatusMessage": "Not Found",
        "description": "Resource not found"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Provides hovercard information when authenticated through basic auth or OAuth with the <code>repo</code> scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.</p>\n<p>The <code>subject_type</code> and <code>subject_id</code> parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about <code>octocat</code> who owns the <code>Spoon-Knife</code> repository via cURL, it would look like this:</p>\n<pre><code class=\"hljs language-shell\">curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&#x26;subject_id=1300192</code></pre>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/installation",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "accept",
        "description": "This API is under preview and subject to change.",
        "in": "header",
        "schema": {
          "type": "string",
          "default": "application/vnd.github.machine-man-preview+json"
        },
        "required": true,
        "descriptionHTML": "<p>This API is under preview and subject to change.</p>"
      },
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/installation",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.machine-man-preview+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/installation</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/installation', {\n  username: 'username',\n  mediaType: {\n    previews: [\n      'machine-man'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/installation'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'machine-man'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "Get a user installation for the authenticated app",
    "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "tags": [
      "apps"
    ],
    "operationId": "apps/get-user-installation",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-a-user-installation-for-the-authenticated-app"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "machine-man",
          "note": "To access the API with your GitHub App, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json ```",
          "html": "<p>To access the API with your GitHub App, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> Header for your requests. <code>shell application/vnd.github.machine-man-preview+json </code></p>"
        }
      ],
      "category": "apps"
    },
    "slug": "get-a-user-installation-for-the-authenticated-app",
    "category": "apps",
    "categoryLabel": "Apps",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Enables an authenticated GitHub App to find the user’s installation information.</p>\n<p>You must use a <a href=\"https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app\">JWT</a> to access this endpoint.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/keys",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/keys",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/keys</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/keys', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/keys'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public keys for a user",
    "description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone.",
    "tags": [
      "users"
    ],
    "operationId": "users/list-public-keys-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-keys-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "users",
      "subcategory": "keys"
    },
    "slug": "list-public-keys-for-a-user",
    "category": "users",
    "categoryLabel": "Users",
    "subcategory": "keys",
    "subcategoryLabel": "Keys",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists the <em>verified</em> public SSH keys for a user. This is accessible by anyone.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/orgs",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/orgs",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/orgs</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/orgs', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/orgs'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List organizations for a user",
    "description": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.",
    "tags": [
      "orgs"
    ],
    "operationId": "orgs/list-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "orgs",
      "subcategory": null
    },
    "slug": "list-organizations-for-a-user",
    "category": "orgs",
    "categoryLabel": "Orgs",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>List <a href=\"https://help.github.com/articles/publicizing-or-concealing-organization-membership\">public organization memberships</a> for the specified user.</p>\n<p>This method only lists <em>public</em> memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-the-authenticated-user\">List organizations for the authenticated user</a> API instead.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/projects",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "default": "open"
        },
        "descriptionHTML": "<p>Indicates the state of the projects to return. Can be either <code>open</code>, <code>closed</code>, or <code>all</code>.</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/projects",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.inertia-preview+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/projects</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/projects', {\n  username: 'username',\n  mediaType: {\n    previews: [\n      'inertia'\n    ]\n  }\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/projects'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">mediaType</span>: {\n    <span class=\"hljs-attr\">previews</span>: [\n      <span class=\"hljs-string\">'inertia'</span>\n    ]\n  }\n})\n</code></pre>"
      }
    ],
    "summary": "List user projects",
    "description": "",
    "tags": [
      "projects"
    ],
    "operationId": "projects/list-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-user-projects"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [
        {
          "required": true,
          "name": "inertia",
          "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
          "html": "<p>The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the <a href=\"https://developer.github.com/changes/2016-10-27-changes-to-projects-api\">blog post</a> for full details. To access the API during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.inertia-preview+json</code></pre>"
        }
      ],
      "category": "projects",
      "subcategory": null
    },
    "slug": "list-user-projects",
    "category": "projects",
    "categoryLabel": "Projects",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      },
      {
        "httpStatusCode": "415",
        "httpStatusMessage": "Unsupported Media Type",
        "description": "Preview header missing"
      },
      {
        "httpStatusCode": "422",
        "httpStatusMessage": "Unprocessable Entity",
        "description": "Validation failed"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/received_events",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/received_events",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/received_events</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/received_events', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/received_events'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List events received by the authenticated user",
    "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-received-events-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-events-received-by-the-authenticated-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-events-received-by-the-authenticated-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/received_events/public",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/received_events/public",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/received_events/public</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/received_events/public', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/received_events/public'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List public events received by a user",
    "description": "",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-received-public-events-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-received-by-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "events"
    },
    "slug": "list-public-events-received-by-a-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "events",
    "subcategoryLabel": "Events",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": ""
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/repos",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "type",
        "description": "Can be one of `all`, `owner`, `member`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "owner",
            "member"
          ],
          "default": "owner"
        },
        "descriptionHTML": "<p>Can be one of <code>all</code>, <code>owner</code>, <code>member</code>.</p>"
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "default": "full_name"
        },
        "descriptionHTML": "<p>Can be one of <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>.</p>"
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "descriptionHTML": "<p>Can be one of <code>asc</code> or <code>desc</code>. Default: <code>asc</code> when using <code>full_name</code>, otherwise <code>desc</code></p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/repos",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/repos</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/repos', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/repos'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repositories for a user",
    "description": "Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.",
    "tags": [
      "repos"
    ],
    "operationId": "repos/list-for-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repositories-for-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [
        {
          "required": false,
          "name": "nebula",
          "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```",
          "html": "<p>You can set the visibility of a repository using the new <code>visibility</code> parameter in the <a href=\"https://docs.github.com/enterprise-server@2.18/rest/reference/repos/\">Repositories API</a>, and get a repository's visibility with a new response key. For more information, see the <a href=\"https://developer.github.com/changes/2019-12-03-internal-visibility-changes/\">blog post</a>.</p>\n<p>To access repository visibility during the preview period, you must provide a custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types\">media type</a> in the <code>Accept</code> header:</p>\n<pre><code class=\"hljs language-shell\">application/vnd.github.nebula-preview+json</code></pre>"
        }
      ],
      "category": "repos",
      "subcategory": null
    },
    "slug": "list-repositories-for-a-user",
    "category": "repos",
    "categoryLabel": "Repos",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/users/{username}/site_admin",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/site_admin",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/site_admin</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /users/{username}/site_admin', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /users/{username}/site_admin'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Promote a user to be a site administrator",
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "operationId": "enterprise-admin/promote-user-to-be-site-administrator",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "promote-a-user-to-be-a-site-administrator",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Note that you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>"
  },
  {
    "verb": "delete",
    "requestPath": "/users/{username}/site_admin",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/site_admin",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/site_admin</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /users/{username}/site_admin', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /users/{username}/site_admin'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Demote a site administrator",
    "description": "You can demote any user account except your own.",
    "operationId": "enterprise-admin/demote-site-administrator",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#demote-a-site-administrator"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "demote-a-site-administrator",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>You can demote any user account except your own.</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/starred",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ],
          "default": "created"
        },
        "descriptionHTML": "<p>One of <code>created</code> (when the repository was starred) or <code>updated</code> (when it was last pushed to).</p>"
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "descriptionHTML": "<p>One of <code>asc</code> (ascending) or <code>desc</code> (descending).</p>"
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/starred",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/starred</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/starred', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/starred'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repositories starred by a user",
    "description": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-repos-starred-by-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-starred-by-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "starring"
    },
    "slug": "list-repositories-starred-by-a-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "starring",
    "subcategoryLabel": "Starring",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories a user has starred.</p>\n<p>You can also find out <em>when</em> stars were created by passing the following custom <a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/\">media type</a> via the <code>Accept</code> header:</p>"
  },
  {
    "verb": "get",
    "requestPath": "/users/{username}/subscriptions",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        },
        "descriptionHTML": "<p>Results per page (max 100).</p>"
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "descriptionHTML": "<p>Page number of the results to fetch.</p>"
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/subscriptions",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/subscriptions</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /users/{username}/subscriptions', {\n  username: 'username'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /users/{username}/subscriptions'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "List repositories watched by a user",
    "description": "Lists repositories a user is watching.",
    "tags": [
      "activity"
    ],
    "operationId": "activity/list-repos-watched-by-user",
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-watched-by-a-user"
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "activity",
      "subcategory": "watching"
    },
    "slug": "list-repositories-watched-by-a-user",
    "category": "activity",
    "categoryLabel": "Activity",
    "subcategory": "watching",
    "subcategoryLabel": "Watching",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Lists repositories a user is watching.</p>"
  },
  {
    "verb": "put",
    "requestPath": "/users/{username}/suspended",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/suspended \\\n  -d '{\"reason\":\"reason\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X PUT \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/suspended \\\n  -d '{\"reason\":\"reason\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('PUT /users/{username}/suspended', {\n  username: 'username',\n  reason: 'reason'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'PUT /users/{username}/suspended'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">reason</span>: <span class=\"hljs-string\">'reason'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Suspend a user",
    "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "operationId": "enterprise-admin/suspend-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#suspend-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "reason": {
                "type": "string",
                "description": "<p>The reason the user is being suspended. This message will be logged in the <a href=\"https://help.github.com/enterprise/admin/articles/audit-logging/\">audit log</a>. If you don't provide a <code>reason</code>, it will default to \"Suspended via API by <em>SITE_ADMINISTRATOR</em>\", where <em>SITE_ADMINISTRATOR</em> is the person who performed the action.</p>",
                "name": "reason",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The reason the user is being suspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "suspend-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>If your GitHub instance uses <a href=\"https://help.github.com/enterprise/admin/guides/user-management/using-ldap\">LDAP Sync with Active Directory LDAP servers</a>, Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a <code>403</code> response.</p>\n<p>You can suspend any user account except your own.</p>\n<p>Note that, if you choose not to pass any parameters, you'll need to set <code>Content-Length</code> to zero when calling out to this endpoint. For more information, see \"<a href=\"https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs\">HTTP verbs</a>.\"</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The reason the user is being suspended. This message will be logged in the <a href=\"https://help.github.com/enterprise/admin/articles/audit-logging/\">audit log</a>. If you don't provide a <code>reason</code>, it will default to \"Suspended via API by <em>SITE_ADMINISTRATOR</em>\", where <em>SITE_ADMINISTRATOR</em> is the person who performed the action.</p>",
        "name": "reason",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The reason the user is being suspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "delete",
    "requestPath": "/users/{username}/suspended",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [
      {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "descriptionHTML": ""
      }
    ],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/suspended \\\n  -d '{\"reason\":\"reason\"}'",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -X DELETE \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/users/USERNAME/suspended \\\n  -d '{\"reason\":\"reason\"}'</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('DELETE /users/{username}/suspended', {\n  username: 'username',\n  reason: 'reason'\n})",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'DELETE /users/{username}/suspended'</span>, {\n  <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'username'</span>,\n  <span class=\"hljs-attr\">reason</span>: <span class=\"hljs-string\">'reason'</span>\n})\n</code></pre>"
      }
    ],
    "summary": "Unsuspend a user",
    "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
    "operationId": "enterprise-admin/unsuspend-user",
    "tags": [
      "enterprise-admin"
    ],
    "externalDocs": {
      "description": "API method documentation",
      "url": "https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#unsuspend-a-user"
    },
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "nullable": true,
            "properties": {
              "reason": {
                "type": "string",
                "description": "<p>The reason the user is being unsuspended. This message will be logged in the <a href=\"https://help.github.com/enterprise/admin/articles/audit-logging/\">audit log</a>. If you don't provide a <code>reason</code>, it will default to \"Unsuspended via API by <em>SITE_ADMINISTRATOR</em>\", where <em>SITE_ADMINISTRATOR</em> is the person who performed the action.</p>",
                "name": "reason",
                "in": "body",
                "rawType": "string",
                "rawDescription": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                "childParamsGroups": []
              }
            }
          }
        }
      }
    },
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": false,
      "previews": [],
      "category": "enterprise-admin",
      "subcategory": "users"
    },
    "slug": "unsuspend-a-user",
    "category": "enterprise-admin",
    "categoryLabel": "Enterprise admin",
    "subcategory": "users",
    "subcategoryLabel": "Users",
    "contentType": "application/json",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "204",
        "httpStatusMessage": "No Content",
        "description": "Response"
      }
    ],
    "descriptionHTML": "<p>If your GitHub instance uses <a href=\"https://help.github.com/enterprise/admin/guides/user-management/using-ldap\">LDAP Sync with Active Directory LDAP servers</a>, this API is disabled and will return a <code>403</code> response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.</p>",
    "bodyParameters": [
      {
        "type": "string",
        "description": "<p>The reason the user is being unsuspended. This message will be logged in the <a href=\"https://help.github.com/enterprise/admin/articles/audit-logging/\">audit log</a>. If you don't provide a <code>reason</code>, it will default to \"Unsuspended via API by <em>SITE_ADMINISTRATOR</em>\", where <em>SITE_ADMINISTRATOR</em> is the person who performed the action.</p>",
        "name": "reason",
        "in": "body",
        "rawType": "string",
        "rawDescription": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
        "childParamsGroups": []
      }
    ]
  },
  {
    "verb": "get",
    "requestPath": "/zen",
    "serverUrl": "http(s)://{hostname}/api/v3",
    "parameters": [],
    "x-codeSamples": [
      {
        "lang": "Shell",
        "source": "curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/zen",
        "html": "<pre><code class=\"hljs language-shell\">curl \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  http(s)://{hostname}/api/v3/zen</code></pre>"
      },
      {
        "lang": "JavaScript",
        "source": "await octokit.request('GET /zen')",
        "html": "<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">await</span> octokit.request(<span class=\"hljs-string\">'GET /zen'</span>)\n</code></pre>"
      }
    ],
    "summary": "Get the Zen of GitHub",
    "description": "Get a random sentence from the Zen of GitHub",
    "tags": [
      "meta"
    ],
    "operationId": "meta/get-zen",
    "x-github": {
      "githubCloudOnly": false,
      "enabledForGitHubApps": true,
      "previews": [],
      "category": "meta"
    },
    "slug": "get-the-zen-of-github",
    "category": "meta",
    "categoryLabel": "Meta",
    "notes": [],
    "responses": [
      {
        "httpStatusCode": "200",
        "httpStatusMessage": "OK",
        "description": "Response"
      }
    ],
    "bodyParameters": [],
    "descriptionHTML": "<p>Get a random sentence from the Zen of GitHub</p>"
  }
]